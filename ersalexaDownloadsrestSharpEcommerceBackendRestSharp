[1mdiff --git a/EcommerceBackend.sln b/EcommerceBackend.sln[m
[1mindex e25131e..dfc41d5 100644[m
[1m--- a/EcommerceBackend.sln[m
[1m+++ b/EcommerceBackend.sln[m
[36m@@ -1,7 +1,7 @@[m
 ï»¿[m
 Microsoft Visual Studio Solution File, Format Version 12.00[m
[31m-# Visual Studio 15[m
[31m-VisualStudioVersion = 15.0.27703.2018[m
[32m+[m[32m# Visual Studio Version 16[m
[32m+[m[32mVisualStudioVersion = 16.0.29519.87[m
 MinimumVisualStudioVersion = 10.0.40219.1[m
 Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "EcommerceBackend", "EcommerceBackend\EcommerceBackend.csproj", "{BE649FB8-90A8-4F23-AD7B-54525D07A35A}"[m
 EndProject[m
[1mdiff --git a/EcommerceBackend/EcommerceBackend.csproj b/EcommerceBackend/EcommerceBackend.csproj[m
[1mindex acdafe6..a478005 100644[m
[1m--- a/EcommerceBackend/EcommerceBackend.csproj[m
[1m+++ b/EcommerceBackend/EcommerceBackend.csproj[m
[36m@@ -10,8 +10,8 @@[m
     <ProjectGuid>{BE649FB8-90A8-4F23-AD7B-54525D07A35A}</ProjectGuid>[m
     <OutputType>Library</OutputType>[m
     <AppDesignerFolder>Properties</AppDesignerFolder>[m
[31m-    <RootNamespace>EcommerceBackend</RootNamespace>[m
[31m-    <AssemblyName>EcommerceBackend</AssemblyName>[m
[32m+[m[32m    <RootNamespace>DemoRestSharp</RootNamespace>[m
[32m+[m[32m    <AssemblyName>DemoRestSharp</AssemblyName>[m
     <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>[m
     <FileAlignment>512</FileAlignment>[m
     <ProjectTypeGuids>{3AC096D0-A1C2-E12C-1390-A8335801FDAB};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>[m
[36m@@ -22,7 +22,6 @@[m
     <TestProjectType>UnitTest</TestProjectType>[m
     <NuGetPackageImportStamp>[m
     </NuGetPackageImportStamp>[m
[31m-    <TargetFrameworkProfile />[m
   </PropertyGroup>[m
   <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">[m
     <DebugSymbols>true</DebugSymbols>[m
[36m@@ -79,8 +78,6 @@[m
     <Reference Include="nunit.framework, Version=3.12.0.0, Culture=neutral, PublicKeyToken=2638cd05610744eb, processorArchitecture=MSIL">[m
       <HintPath>..\packages\NUnit.3.12.0\lib\net45\nunit.framework.dll</HintPath>[m
     </Reference>[m
[31m-    <Reference Include="PresentationCore" />[m
[31m-    <Reference Include="PresentationFramework" />[m
     <Reference Include="RazorEngine, Version=3.10.0.0, Culture=neutral, PublicKeyToken=9ee697374c7e744a, processorArchitecture=MSIL">[m
       <HintPath>..\packages\RazorEngine.3.10.0\lib\net45\RazorEngine.dll</HintPath>[m
     </Reference>[m
[36m@@ -160,11 +157,9 @@[m
       <HintPath>..\packages\System.ValueTuple.4.4.0\lib\net47\System.ValueTuple.dll</HintPath>[m
     </Reference>[m
     <Reference Include="System.Web" />[m
[31m-    <Reference Include="System.Web.Extensions" />[m
     <Reference Include="System.Web.Razor, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">[m
       <HintPath>..\packages\Microsoft.AspNet.Razor.3.0.0\lib\net45\System.Web.Razor.dll</HintPath>[m
     </Reference>[m
[31m-    <Reference Include="System.Xaml" />[m
     <Reference Include="System.Xml" />[m
     <Reference Include="TechTalk.SpecFlow, Version=3.1.0.0, Culture=neutral, PublicKeyToken=0778194805d6db41, processorArchitecture=MSIL">[m
       <HintPath>..\packages\SpecFlow.3.1.67\lib\net45\TechTalk.SpecFlow.dll</HintPath>[m
[36m@@ -175,75 +170,32 @@[m
     <Reference Include="WindowsBase" />[m
   </ItemGroup>[m
   <ItemGroup>[m
[31m-    <Compile Include="models\Bookings\ShowTimes\ModelDate.cs" />[m
[31m-    <Compile Include="models\Bookings\ShowTimes\ModelTheatersShowTimes.cs" />[m
[31m-    <Compile Include="models\Bookings\ShowTimes\ModelTheaters.cs" />[m
[31m-    <Compile Include="models\Bookings\ShowTimes\ModelShowTime.cs" />[m
[31m-    <Compile Include="models\Bookings\ShowTimes\ModelSuggestion.cs" />[m
     <Compile Include="models\Common\ModelCommon.cs" />[m
[31m-    <Compile Include="models\Cache\ModelLimparCache.cs" />[m
[31m-    <Compile Include="models\Loyalty\ModelMenus.cs" />[m
[31m-    <Compile Include="models\Loyalty\ModelBenefits.cs" />[m
     <Compile Include="models\Loyalty\ModelLoyalty.cs" />[m
[31m-    <Compile Include="models\Order\ModelAppInfo.cs" />[m
[31m-    <Compile Include="models\Order\ModelGeolocation.cs" />[m
[31m-    <Compile Include="models\Order\ModelPayment.cs" />[m
[31m-    <Compile Include="models\Order\ModelStartOrder.cs" />[m
[31m-    <Compile Include="models\Order\ModelAccount.cs" />[m
[31m-    <Compile Include="models\Order\ModelOrderResgate .cs" />[m
[31m-    <Compile Include="models\Order\ModelOrderLast.cs" />[m
[31m-    <Compile Include="models\Order\ModelFee.cs" />[m
[31m-    <Compile Include="models\Order\ModelTickets .cs" />[m
[31m-    <Compile Include="models\Order\ModelProduct .cs" />[m
[31m-    <Compile Include="models\Order\ModelOrder.cs" />[m
[31m-    <Compile Include="models\Order\UserControl1.xaml.cs">[m
[31m-      <DependentUpon>UserControl1.xaml</DependentUpon>[m
[31m-    </Compile>[m
[31m-    <Compile Include="models\SeatMap\ModelSeatMap.cs" />[m
     <Compile Include="models\Social\ModelSocial.cs" />[m
     <Compile Include="models\Social\SocialResponse.cs" />[m
[31m-    <Compile Include="models\SuperSaver\ModelSuperSaver.cs" />[m
[31m-    <Compile Include="models\Theaters\ModelAuditoriums.cs" />[m
[31m-    <Compile Include="models\Theaters\ModelDetalhesCinema.cs" />[m
[31m-    <Compile Include="models\Theaters\ModelState.cs" />[m
[31m-    <Compile Include="models\Theaters\ModelCity .cs" />[m
[31m-    <Compile Include="models\Theaters\ModelTheater.cs" />[m
     <Compile Include="models\Ticket\ModelTicket.cs" />[m
[32m+[m[32m    <Compile Include="models\Ticket\ModelTransacao.cs" />[m
     <Compile Include="models\Users\ModelAppInfo.cs" />[m
     <Compile Include="models\Users\ModelCity.cs" />[m
     <Compile Include="models\Users\ModelCountry.cs" />[m
     <Compile Include="models\Users\ModelMember.cs" />[m
     <Compile Include="models\Users\ModelState.cs" />[m
     <Compile Include="models\Users\ModelUsers.cs" />[m
[31m-    <Compile Include="tests\SnackBar.cs" />[m
[31m-    <Compile Include="tests\StartOrder.cs" />[m
[31m-    <Compile Include="tests\Support.cs" />[m
[31m-    <Compile Include="tests\Marketing.cs" />[m
[31m-    <Compile Include="tests\Theaters.cs" />[m
[31m-    <Compile Include="tests\SeatMap.cs" />[m
     <Compile Include="tests\Bookings.cs" />[m
     <Compile Include="tests\Loyalty.cs" />[m
     <Compile Include="tests\Common.cs" />[m
     <Compile Include="tests\Social.cs" />[m
     <Compile Include="Properties\AssemblyInfo.cs" />[m
[31m-    <Compile Include="tests\LimparCache.cs" />[m
[31m-    <Compile Include="tests\Order.cs" />[m
     <Compile Include="tests\Ticket.cs" />[m
[31m-    <Compile Include="tests\SuperSaver.cs" />[m
     <Compile Include="tests\Users.cs" />[m
[31m-    <Compile Include="utils\ResponseProperties.cs" />[m
     <Compile Include="utils\Utils.cs" />[m
   </ItemGroup>[m
   <ItemGroup>[m
     <None Include="app.config" />[m
     <None Include="packages.config" />[m
   </ItemGroup>[m
[31m-  <ItemGroup>[m
[31m-    <Page Include="models\Order\UserControl1.xaml">[m
[31m-      <SubType>Designer</SubType>[m
[31m-      <Generator>MSBuild:Compile</Generator>[m
[31m-    </Page>[m
[31m-  </ItemGroup>[m
[32m+[m[32m  <ItemGroup />[m
   <Import Project="$(VSToolsPath)\TeamTest\Microsoft.TestTools.targets" Condition="Exists('$(VSToolsPath)\TeamTest\Microsoft.TestTools.targets')" />[m
   <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />[m
   <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">[m
[1mdiff --git a/EcommerceBackend/Models/Bookings/ShowTimes/ModelDate.cs b/EcommerceBackend/Models/Bookings/ShowTimes/ModelDate.cs[m
[1mdeleted file mode 100644[m
[1mindex a9ec53d..0000000[m
[1m--- a/EcommerceBackend/Models/Bookings/ShowTimes/ModelDate.cs[m
[1m+++ /dev/null[m
[36m@@ -1,15 +0,0 @@[m
[31m-ï»¿using System;[m
[31m-using System.Collections.Generic;[m
[31m-using System.Linq;[m
[31m-using System.Text;[m
[31m-using System.Threading.Tasks;[m
[31m-[m
[31m-namespace EcommerceBackend.models.Bookings.ShowTimes[m
[31m-{[m
[31m-    class ModelDate[m
[31m-    {[m
[31m-        public DateTime Date { get; set; }[m
[31m-        public DateTime ExhibitionDate { get; set; }[m
[31m-        public IList<ModelShowTime> ShowTimes { get; set; }[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/EcommerceBackend/Models/Bookings/ShowTimes/ModelShowTime.cs b/EcommerceBackend/Models/Bookings/ShowTimes/ModelShowTime.cs[m
[1mdeleted file mode 100644[m
[1mindex e0f2782..0000000[m
[1m--- a/EcommerceBackend/Models/Bookings/ShowTimes/ModelShowTime.cs[m
[1m+++ /dev/null[m
[36m@@ -1,36 +0,0 @@[m
[31m-ï»¿using System;[m
[31m-using System.Collections.Generic;[m
[31m-using System.Linq;[m
[31m-using System.Text;[m
[31m-using System.Threading.Tasks;[m
[31m-[m
[31m-namespace EcommerceBackend.models.Bookings.ShowTimes[m
[31m-{[m
[31m-    class ModelShowTime[m
[31m-    {[m
[31m-        public int id { get; set; }[m
[31m-        public string ShowTimeId { get; set; }[m
[31m-        public DateTime date { get; set; }[m
[31m-        public int cm { get; set; }[m
[31m-        public string tht { get; set; }[m
[31m-        public string mov { get; set; }[m
[31m-        public int aud { get; set; }[m
[31m-        public int xd { get; set; }[m
[31m-        public int prime { get; set; }[m
[31m-        public int dbox { get; set; }[m
[31m-        public int d3d { get; set; }[m
[31m-        public int pre { get; set; }[m
[31m-        public int psl { get; set; }[m
[31m-        public int deb { get; set; }[m
[31m-        public string time { get; set; }[m
[31m-        public int loc { get; set; }[m
[31m-        public int MoviePrintCode { get; set; }[m
[31m-        public bool IsSessionExpired { get; set; }[m
[31m-        public bool TheaterAllow { get; set; }[m
[31m-        public string Utc { get; set; }[m
[31m-        public int level { get; set; }[m
[31m-        public IList<ModelSuggestion> Suggestions { get; set; }[m
[31m-        public int SnackCategoryId { get; set; }[m
[31m-        public string SnackCategoryIconUrl { get; set; }[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/EcommerceBackend/Models/Bookings/ShowTimes/ModelSuggestion.cs b/EcommerceBackend/Models/Bookings/ShowTimes/ModelSuggestion.cs[m
[1mdeleted file mode 100644[m
[1mindex 58f1452..0000000[m
[1m--- a/EcommerceBackend/Models/Bookings/ShowTimes/ModelSuggestion.cs[m
[1m+++ /dev/null[m
[36m@@ -1,24 +0,0 @@[m
[31m-ï»¿using System;[m
[31m-using System.Collections.Generic;[m
[31m-using System.Linq;[m
[31m-using System.Text;[m
[31m-using System.Threading.Tasks;[m
[31m-[m
[31m-namespace EcommerceBackend.models.Bookings.ShowTimes[m
[31m-{[m
[31m-    class ModelSuggestion[m
[31m-    {[m
[31m-        public int id { get; set; }[m
[31m-        public string ShowTimeId { get; set; }[m
[31m-        public DateTime ExhibitionDate { get; set; }[m
[31m-        public DateTime Date { get; set; }[m
[31m-        public string Time { get; set; }[m
[31m-        public int Level { get; set; }[m
[31m-        public bool XD { get; set; }[m
[31m-        public bool Prime { get; set; }[m
[31m-        public bool DBOX { get; set; }[m
[31m-        public bool D3D { get; set; }[m
[31m-        public int aud { get; set; }[m
[31m-        public bool IsSessionExpired { get; set; }[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/EcommerceBackend/Models/Bookings/ShowTimes/ModelTheaters.cs b/EcommerceBackend/Models/Bookings/ShowTimes/ModelTheaters.cs[m
[1mdeleted file mode 100644[m
[1mindex bd6f88f..0000000[m
[1m--- a/EcommerceBackend/Models/Bookings/ShowTimes/ModelTheaters.cs[m
[1m+++ /dev/null[m
[36m@@ -1,17 +0,0 @@[m
[31m-ï»¿using System;[m
[31m-using System.Collections.Generic;[m
[31m-using System.Linq;[m
[31m-using System.Text;[m
[31m-using System.Threading.Tasks;[m
[31m-[m
[31m-namespace EcommerceBackend.models.Bookings.ShowTimes[m
[31m-{[m
[31m-    class ModelTheaters[m
[31m-    {[m
[31m-        public string TheaterCode { get; set; }[m
[31m-        public string Utc { get; set; }[m
[31m-        public IList<ModelDate> Dates { get; set; }[m
[31m-[m
[31m-    }[m
[31m-}[m
[31m-[m
[1mdiff --git a/EcommerceBackend/Models/Bookings/ShowTimes/ModelTheatersShowTimes.cs b/EcommerceBackend/Models/Bookings/ShowTimes/ModelTheatersShowTimes.cs[m
[1mdeleted file mode 100644[m
[1mindex 2518512..0000000[m
[1m--- a/EcommerceBackend/Models/Bookings/ShowTimes/ModelTheatersShowTimes.cs[m
[1m+++ /dev/null[m
[36m@@ -1,14 +0,0 @@[m
[31m-ï»¿using System;[m
[31m-using System.Collections.Generic;[m
[31m-using System.Linq;[m
[31m-using System.Text;[m
[31m-using System.Threading.Tasks;[m
[31m-[m
[31m-namespace EcommerceBackend.models.Bookings.ShowTimes[m
[31m-{[m
[31m-    class ModelTheatersShowTimes[m
[31m-    {[m
[31m-        public IList<ModelTheaters> Theaters { get; set; }[m
[31m-[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/EcommerceBackend/Models/Loyalty/ModelBenefits.cs b/EcommerceBackend/Models/Loyalty/ModelBenefits.cs[m
[1mdeleted file mode 100644[m
[1mindex 52ae222..0000000[m
[1m--- a/EcommerceBackend/Models/Loyalty/ModelBenefits.cs[m
[1m+++ /dev/null[m
[36m@@ -1,19 +0,0 @@[m
[31m-ï»¿using System;[m
[31m-using System.Collections.Generic;[m
[31m-using System.Linq;[m
[31m-using System.Text;[m
[31m-using System.Threading.Tasks;[m
[31m-[m
[31m-namespace EcommerceBackend.models.Loyalt[m
[31m-{[m
[31m-    public class ModelBenefits[m
[31m-    {[m
[31m-[m
[31m-        public String description { get; set; }[m
[31m-[m
[31m-    }[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/EcommerceBackend/Models/Loyalty/ModelLoyalty.cs b/EcommerceBackend/Models/Loyalty/ModelLoyalty.cs[m
[1mindex edfa62b..e58ec8e 100644[m
[1m--- a/EcommerceBackend/Models/Loyalty/ModelLoyalty.cs[m
[1m+++ b/EcommerceBackend/Models/Loyalty/ModelLoyalty.cs[m
[36m@@ -4,34 +4,15 @@[m [musing System.Linq;[m
 using System.Text;[m
 using System.Threading.Tasks;[m
 [m
[31m-namespace EcommerceBackend.models.Loyalt[m
[32m+[m[32mnamespace EcommerceBackend[m
 {[m
     public class ModelLoyalty[m
     {[m
         public Boolean Ok { get; set; }[m
 [m
         public List<string> Messages { get; set; }[m
[31m-[m
[31m-        public String id { get; set; }[m
[31m-        public String name { get; set; }[m
[31m-        public String buttonDescription { get; set; }[m
[31m-        public Double price { get; set; }[m
[31m-        public string Email { get; set; }[m
[31m-        public string Password { get; set; }[m
[31m-        public string category { get; set; }[m
[31m-        public Double balance { get; set; }[m
[31m-        public string expired { get; set; }[m
[31m-[m
[31m-[m
[31m-[m
[31m-        public List<ModelBenefits> benefits { get; set; }[m
[31m-        public List<ModelMenus> menus { get; set; }[m
[31m-[m
[31m-        [m
[31m-[m
     }[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[31m-}[m
\ No newline at end of file[m
[32m+[m[41m        [m
[32m+[m[41m    [m
[32m+[m[41m    [m
[32m+[m[32m}[m
[1mdiff --git a/EcommerceBackend/Models/Loyalty/ModelMenus.cs b/EcommerceBackend/Models/Loyalty/ModelMenus.cs[m
[1mdeleted file mode 100644[m
[1mindex e54d056..0000000[m
[1m--- a/EcommerceBackend/Models/Loyalty/ModelMenus.cs[m
[1m+++ /dev/null[m
[36m@@ -1,19 +0,0 @@[m
[31m-ï»¿using System;[m
[31m-using System.Collections.Generic;[m
[31m-using System.Linq;[m
[31m-using System.Text;[m
[31m-using System.Threading.Tasks;[m
[31m-[m
[31m-namespace EcommerceBackend.models.Loyalt[m
[31m-{[m
[31m-    public class ModelMenus[m
[31m-    {[m
[31m-[m
[31m-        public String title { get; set; }[m
[31m-[m
[31m-    }[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/EcommerceBackend/Models/Order/ModelAccount.cs b/EcommerceBackend/Models/Order/ModelAccount.cs[m
[1mdeleted file mode 100644[m
[1mindex 9df3b2f..0000000[m
[1m--- a/EcommerceBackend/Models/Order/ModelAccount.cs[m
[1m+++ /dev/null[m
[36m@@ -1,17 +0,0 @@[m
[31m-ï»¿using System;[m
[31m-using System.Collections.Generic;[m
[31m-using System.Linq;[m
[31m-using System.Text;[m
[31m-using System.Threading.Tasks;[m
[31m-[m
[31m-namespace DemoRestSharp.models.Order[m
[31m-{[m
[31m-    public class ModelAccount[m
[31m-    {[m
[31m-        public int userId { get; set; }[m
[31m-        public string email { get; set; }[m
[31m-        public string name { get; set; }[m
[31m-[m
[31m-[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/EcommerceBackend/Models/Order/ModelAppInfo.cs b/EcommerceBackend/Models/Order/ModelAppInfo.cs[m
[1mdeleted file mode 100644[m
[1mindex d5f33a0..0000000[m
[1m--- a/EcommerceBackend/Models/Order/ModelAppInfo.cs[m
[1m+++ /dev/null[m
[36m@@ -1,20 +0,0 @@[m
[31m-ï»¿using System;[m
[31m-using System.Collections.Generic;[m
[31m-using System.Linq;[m
[31m-using System.Text;[m
[31m-using System.Threading.Tasks;[m
[31m-[m
[31m-namespace EcommerceBackend.models.Order[m
[31m-{[m
[31m-   public class ModelAppInfo[m
[31m-    {[m
[31m-        public string Fingerprint { get; set; } [m
[31m-        public string deviceModel { get; set; } [m
[31m-        public string devicePlatform { get; set; } [m
[31m-        public string deviceUUID { get; set; } [m
[31m-        public ModelGeolocation geolocation { get; set; } [m
[31m-        public string version { get; set; } [m
[31m-[m
[31m-[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/EcommerceBackend/Models/Order/ModelFee.cs b/EcommerceBackend/Models/Order/ModelFee.cs[m
[1mdeleted file mode 100644[m
[1mindex e895e89..0000000[m
[1m--- a/EcommerceBackend/Models/Order/ModelFee.cs[m
[1m+++ /dev/null[m
[36m@@ -1,14 +0,0 @@[m
[31m-ï»¿using System;[m
[31m-using System.Collections.Generic;[m
[31m-using System.Linq;[m
[31m-using System.Text;[m
[31m-using System.Threading.Tasks;[m
[31m-[m
[31m-namespace DemoRestSharp.models.Order[m
[31m-{[m
[31m-    public class ModelFee[m
[31m-    {[m
[31m-        public double price { get; set; }[m
[31m- [m
[31m-    }[m
[31m-}[m
[1mdiff --git a/EcommerceBackend/Models/Order/ModelGeolocation.cs b/EcommerceBackend/Models/Order/ModelGeolocation.cs[m
[1mdeleted file mode 100644[m
[1mindex eeee5fb..0000000[m
[1m--- a/EcommerceBackend/Models/Order/ModelGeolocation.cs[m
[1m+++ /dev/null[m
[36m@@ -1,13 +0,0 @@[m
[31m-ï»¿using System;[m
[31m-using System.Collections.Generic;[m
[31m-using System.Linq;[m
[31m-using System.Text;[m
[31m-using System.Threading.Tasks;[m
[31m-[m
[31m-namespace EcommerceBackend.models.Order[m
[31m-{[m
[31m-    public class ModelGeolocation { [m
[31m-        public double latitude { get; set; }[m
[31m-        public double longitude { get; set; }[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/EcommerceBackend/Models/Order/ModelOrder.cs b/EcommerceBackend/Models/Order/ModelOrder.cs[m
[1mdeleted file mode 100644[m
[1mindex e798728..0000000[m
[1m--- a/EcommerceBackend/Models/Order/ModelOrder.cs[m
[1m+++ /dev/null[m
[36m@@ -1,31 +0,0 @@[m
[31m-ï»¿using System;[m
[31m-using System.Collections.Generic;[m
[31m-using System.Linq;[m
[31m-using System.Text;[m
[31m-using System.Threading.Tasks;[m
[31m-[m
[31m-namespace DemoRestSharp.models.Order[m
[31m-{[m
[31m-    public class ModelOrder[m
[31m-    {[m
[31m-        // Comum para todos[m
[31m-        public string total { get; set; }[m
[31m-        public string Email { get; set; }[m
[31m-        public string Password { get; set; }[m
[31m-        public string id { get; set; }[m
[31m-        public string externalId { get; set; }[m
[31m-        public int status { get; set; }[m
[31m-        public string orderDate { get; set; }[m
[31m-        public string expirationDate { get; set; }[m
[31m-        public string theaterId { get; set; }[m
[31m-        public string movieId { get; set; }[m
[31m-[m
[31m-[m
[31m-        // Lists utilizadas nessa classe[m
[31m-        public List<ModelProduct> products { get; set; }[m
[31m-        public List<ModelTickets> tickets { get; set; }[m
[31m-        public List<ModelFee> fee { get; set; }[m
[31m-  [m
[31m-        [m
[31m-    }[m
[31m-}[m
[1mdiff --git a/EcommerceBackend/Models/Order/ModelOrderLast.cs b/EcommerceBackend/Models/Order/ModelOrderLast.cs[m
[1mdeleted file mode 100644[m
[1mindex 55e211e..0000000[m
[1m--- a/EcommerceBackend/Models/Order/ModelOrderLast.cs[m
[1m+++ /dev/null[m
[36m@@ -1,17 +0,0 @@[m
[31m-ï»¿using System;[m
[31m-using System.Collections.Generic;[m
[31m-using System.Linq;[m
[31m-using System.Text;[m
[31m-using System.Threading.Tasks;[m
[31m-[m
[31m-namespace DemoRestSharp.models.Order[m
[31m-{[m
[31m-    public class ModelOrderLast[m
[31m-    {[m
[31m-        public string id { get; set; }[m
[31m-[m
[31m-[m
[31m-        public List<ModelAccount> account { get; set; }[m
[31m-        public List<ModelProduct> products { get; set; }[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/EcommerceBackend/Models/Order/ModelOrderResgate .cs b/EcommerceBackend/Models/Order/ModelOrderResgate .cs[m
[1mdeleted file mode 100644[m
[1mindex c0afca6..0000000[m
[1m--- a/EcommerceBackend/Models/Order/ModelOrderResgate .cs[m	
[1m+++ /dev/null[m
[36m@@ -1,17 +0,0 @@[m
[31m-ï»¿using System;[m
[31m-using System.Collections.Generic;[m
[31m-using System.Linq;[m
[31m-using System.Text;[m
[31m-using System.Threading.Tasks;[m
[31m-[m
[31m-namespace DemoRestSharp.models.Order[m
[31m-{[m
[31m-    public class ModelOrderResgate[m
[31m-    {[m
[31m-[m
[31m-        //public string orderId { get; set; }[m
[31m-        //public string barCode { get; set; }[m
[31m-        //public int status { get; set; }[m
[31m-[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/EcommerceBackend/Models/Order/ModelPayment.cs b/EcommerceBackend/Models/Order/ModelPayment.cs[m
[1mdeleted file mode 100644[m
[1mindex 5ec283b..0000000[m
[1m--- a/EcommerceBackend/Models/Order/ModelPayment.cs[m
[1m+++ /dev/null[m
[36m@@ -1,20 +0,0 @@[m
[31m-ï»¿using System;[m
[31m-using System.Collections.Generic;[m
[31m-using System.Linq;[m
[31m-using System.Text;[m
[31m-using System.Threading.Tasks;[m
[31m-[m
[31m-namespace EcommerceBackend.models.Order[m
[31m-{[m
[31m-   public class ModelPayment { [m
[31m-[m
[31m-[m
[31m-        public string number { get; set; }[m
[31m-        public string cpf { get; set; }[m
[31m-        public string cvc { get; set; }[m
[31m-        public string expiryMonth { get; set; }[m
[31m-        public string expiryYear { get; set; }[m
[31m-        public string holderName { get; set; }[m
[31m-        public bool saveCardInformation { get; set; }[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/EcommerceBackend/Models/Order/ModelProduct .cs b/EcommerceBackend/Models/Order/ModelProduct .cs[m
[1mdeleted file mode 100644[m
[1mindex 189ade4..0000000[m
[1m--- a/EcommerceBackend/Models/Order/ModelProduct .cs[m	
[1m+++ /dev/null[m
[36m@@ -1,22 +0,0 @@[m
[31m-ï»¿using System;[m
[31m-using System.Collections.Generic;[m
[31m-using System.Linq;[m
[31m-using System.Text;[m
[31m-using System.Threading.Tasks;[m
[31m-[m
[31m-namespace DemoRestSharp.models.Order[m
[31m-{[m
[31m-    public class ModelProduct[m
[31m-    {[m
[31m-        public  string fee { get; set; }[m
[31m-        public string name { get; set; }[m
[31m-        public string theaterName { get; set; }[m
[31m-        public string theaterAddress { get; set; }[m
[31m-        public string id { get; set; }[m
[31m-        public string unitPrice { get; set; }[m
[31m-        public string status { get; set; }[m
[31m-        public string integrationCode { get; set; }[m
[31m-        public string integrationTracking { get; set; }[m
[31m-[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/EcommerceBackend/Models/Order/ModelStartOrder.cs b/EcommerceBackend/Models/Order/ModelStartOrder.cs[m
[1mdeleted file mode 100644[m
[1mindex af6ab32..0000000[m
[1m--- a/EcommerceBackend/Models/Order/ModelStartOrder.cs[m
[1m+++ /dev/null[m
[36m@@ -1,84 +0,0 @@[m
[31m-ï»¿//using System;[m
[31m-//using System.Collections.Generic;[m
[31m-//using System.Linq;[m
[31m-//using System.Text;[m
[31m-//using System.Threading.Tasks;[m
[31m-//using DemoRestSharp.models.Order;[m
[31m-[m
[31m-[m
[31m-//namespace EcommerceBackend.models.Order[m
[31m-//{[m
[31m-//    public class ModelStartOrder[m
[31m-//    {[m
[31m-//        public Account account { get; set; }[m
[31m-//        public AppInfo appInfo { get; set; }[m
[31m-//        public int theaterId { get; set; }[m
[31m-//        public Fee fee { get; set; }[m
[31m-//        public int movieId { get; set; }[m
[31m-//        public Payment payment { get; set; }[m
[31m-//        public IList<Product> products { get; set; }[m
[31m-//        public double total { get; set; }[m
[31m-//    }[m
[31m-//        public class Account[m
[31m-//        {[m
[31m-//            public string email { get; set; }[m
[31m-//            public string identification { get; set; }[m
[31m-//            public string name { get; set; }[m
[31m-//        }[m
[31m-[m
[31m-//        public class Geolocation[m
[31m-//        {[m
[31m-//            public double latitude { get; set; }[m
[31m-//            public double longitude { get; set; }[m
[31m-//        }[m
[31m-[m
[31m-//        public class AppInfo[m
[31m-//        {[m
[31m-//            public string Fingerprint { get; set; }[m
[31m-//            public string deviceModel { get; set; }[m
[31m-//            public string devicePlatform { get; set; }[m
[31m-//            public string deviceUUID { get; set; }[m
[31m-//            public Geolocation geolocation { get; set; }[m
[31m-//            public string version { get; set; }[m
[31m-//        }[m
[31m-[m
[31m-//        public class Fee[m
[31m-//        {[m
[31m-//            public double price { get; set; }[m
[31m-//        }[m
[31m-[m
[31m-//        public class Payment[m
[31m-//        {[m
[31m-//            public string number { get; set; }[m
[31m-//            public string cpf { get; set; }[m
[31m-//            public string cvc { get; set; }[m
[31m-//            public string expiryMonth { get; set; }[m
[31m-//            public string expiryYear { get; set; }[m
[31m-//            public string holderName { get; set; }[m
[31m-//            public bool saveCardInformation { get; set; }[m
[31m-//        }[m
[31m-[m
[31m-//        public class Product[m
[31m-//        {[m
[31m-//        public feeÂ {Â get;Â set;Â }[m
[31m-//        public int id { get; set; }[m
[31m-//        public string name { get; set; }[m
[31m-//        public int quantity { get; set; }[m
[31m-//        public int subTotal { get; set; }[m
[31m-//        public string theaterAddress { get; set; }[m
[31m-//        public string theaterName { get; set; }[m
[31m-//        public int theaterPOS { get; set; }[m
[31m-//        public int unitPrice { get; set; }[m
[31m-//        public string urlImagem { get; set; }[m
[31m-//    }[m
[31m-[m
[31m-   [m
[31m-        [m
[31m-//    }[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[1mdiff --git a/EcommerceBackend/Models/Order/ModelTickets .cs b/EcommerceBackend/Models/Order/ModelTickets .cs[m
[1mdeleted file mode 100644[m
[1mindex 2ffb3ad..0000000[m
[1m--- a/EcommerceBackend/Models/Order/ModelTickets .cs[m	
[1m+++ /dev/null[m
[36m@@ -1,32 +0,0 @@[m
[31m-ï»¿using System;[m
[31m-using System.Collections.Generic;[m
[31m-using System.Linq;[m
[31m-using System.Text;[m
[31m-using System.Threading.Tasks;[m
[31m-[m
[31m-namespace DemoRestSharp.models.Order[m
[31m-{[m
[31m-    public class ModelTickets[m
[31m-    {[m
[31m-        public int theaterId { get; set; }[m
[31m-        public string ticketCode { get; set; }[m
[31m-        public string seatCode { get; set; }[m
[31m-        public string theaterName { get; set; }[m
[31m-        public string seatName { get; set; }[m
[31m-        public string quantity { get; set; }[m
[31m-        public string seatType { get; set; }[m
[31m-        public string movieName { get; set; }[m
[31m-        public string sessionDateTime { get; set; }[m
[31m-        public string sessionDateTimeString { get; set; }[m
[31m-        public string roomNumber { get; set; }[m
[31m-        public string status { get; set; }[m
[31m-        public string integrationCode { get; set; }[m
[31m-        public int unitPrice { get; set; }[m
[31m-        public string theaterAddress { get; set; }[m
[31m-        public string localizationType { get; set; }[m
[31m-        public string rating { get; set; }[m
[31m-[m
[31m-[m
[31m-[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/EcommerceBackend/Models/Order/UserControl1.xaml b/EcommerceBackend/Models/Order/UserControl1.xaml[m
[1mdeleted file mode 100644[m
[1mindex 11bce1a..0000000[m
[1m--- a/EcommerceBackend/Models/Order/UserControl1.xaml[m
[1m+++ /dev/null[m
[36m@@ -1,12 +0,0 @@[m
[31m-ï»¿<UserControl x:Class="EcommerceBackend.models.Order.UserControl1"[m
[31m-             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"[m
[31m-             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"[m
[31m-             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" [m
[31m-             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" [m
[31m-             xmlns:local="clr-namespace:EcommerceBackend.models.Order"[m
[31m-             mc:Ignorable="d" [m
[31m-             d:DesignHeight="450" d:DesignWidth="800">[m
[31m-    <Grid>[m
[31m-            [m
[31m-    </Grid>[m
[31m-</UserControl>[m
[1mdiff --git a/EcommerceBackend/Models/Order/UserControl1.xaml.cs b/EcommerceBackend/Models/Order/UserControl1.xaml.cs[m
[1mdeleted file mode 100644[m
[1mindex 49f9ecb..0000000[m
[1m--- a/EcommerceBackend/Models/Order/UserControl1.xaml.cs[m
[1m+++ /dev/null[m
[36m@@ -1,28 +0,0 @@[m
[31m-ï»¿using System;[m
[31m-using System.Collections.Generic;[m
[31m-using System.Linq;[m
[31m-using System.Text;[m
[31m-using System.Threading.Tasks;[m
[31m-using System.Windows;[m
[31m-using System.Windows.Controls;[m
[31m-using System.Windows.Data;[m
[31m-using System.Windows.Documents;[m
[31m-using System.Windows.Input;[m
[31m-using System.Windows.Media;[m
[31m-using System.Windows.Media.Imaging;[m
[31m-using System.Windows.Navigation;[m
[31m-using System.Windows.Shapes;[m
[31m-[m
[31m-namespace EcommerceBackend.models.Order[m
[31m-{[m
[31m-    /// <summary>[m
[31m-    /// InteraÃ§Ã£o lÃ³gica para UserControl1.xam[m
[31m-    /// </summary>[m
[31m-    public partial class UserControl1 : UserControl[m
[31m-    {[m
[31m-        public UserControl1()[m
[31m-        {[m
[31m-            InitializeComponent();[m
[31m-        }[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/EcommerceBackend/Models/SeatMap/ModelSeatMap.cs b/EcommerceBackend/Models/SeatMap/ModelSeatMap.cs[m
[1mdeleted file mode 100644[m
[1mindex d73341b..0000000[m
[1m--- a/EcommerceBackend/Models/SeatMap/ModelSeatMap.cs[m
[1m+++ /dev/null[m
[36m@@ -1,18 +0,0 @@[m
[31m-ï»¿using System;[m
[31m-using System.Collections.Generic;[m
[31m-using System.Linq;[m
[31m-using System.Text;[m
[31m-using System.Threading.Tasks;[m
[31m-[m
[31m-namespace DemoRestSharp.models.SeatMap[m
[31m-{[m
[31m-    class ModelSeatMap[m
[31m-    {[m
[31m-[m
[31m-        public string result { get; set; }[m
[31m-        public int status { get; set; }[m
[31m-        public string message { get; set; }[m
[31m-        public int id { get; set; }[m
[31m-[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/EcommerceBackend/Models/SuperSaver/ModelSuperSaver.cs b/EcommerceBackend/Models/SuperSaver/ModelSuperSaver.cs[m
[1mdeleted file mode 100644[m
[1mindex 61d809f..0000000[m
[1m--- a/EcommerceBackend/Models/SuperSaver/ModelSuperSaver.cs[m
[1m+++ /dev/null[m
[36m@@ -1,23 +0,0 @@[m
[31m-ï»¿using System;[m
[31m-using System.Collections.Generic;[m
[31m-using System.Linq;[m
[31m-using System.Text;[m
[31m-using System.Threading.Tasks;[m
[31m-[m
[31m-namespace EcommerceBackend.models.SuperSaver[m
[31m-{[m
[31m-    public class ModelSuperSaver[m
[31m-    {[m
[31m-        public string code { get; set; }[m
[31m-        public string saleChannel { get; set; }[m
[31m-        public string theater { get; set; }[m
[31m-        public string movie { get; set; }[m
[31m-        public string theaterRoom { get; set; }[m
[31m-        public string sessionType { get; set; }[m
[31m-        public DateTime sessionDate { get; set; }[m
[31m-        public string seatNumber { get; set; }[m
[31m-        public string seatType { get; set; }[m
[31m-[m
[31m-[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/EcommerceBackend/Models/Theaters/ModelAuditoriums.cs b/EcommerceBackend/Models/Theaters/ModelAuditoriums.cs[m
[1mdeleted file mode 100644[m
[1mindex ae98fc4..0000000[m
[1m--- a/EcommerceBackend/Models/Theaters/ModelAuditoriums.cs[m
[1m+++ /dev/null[m
[36m@@ -1,23 +0,0 @@[m
[31m-ï»¿using System;[m
[31m-using System.Collections.Generic;[m
[31m-using System.Linq;[m
[31m-using System.Text;[m
[31m-using System.Threading.Tasks;[m
[31m-[m
[31m-namespace DemoRestSharp.models.Theaters[m
[31m-{[m
[31m-    public class ModelAuditoriums[m
[31m-    {[m
[31m-        public string TheaterCode { get; set; }[m
[31m-        public string Description { get; set; }[m
[31m-        public string AuditoriumCode { get; set; }[m
[31m-        public string TotalSeats { get; set; }[m
[31m-        public string DboxDescription { get; set; }[m
[31m-        public string XD { get; set; }[m
[31m-        public string Prime { get; set; }[m
[31m-        public string DBOX { get; set; }[m
[31m-        public string Status { get; set; }[m
[31m-[m
[31m-[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/EcommerceBackend/Models/Theaters/ModelCity .cs b/EcommerceBackend/Models/Theaters/ModelCity .cs[m
[1mdeleted file mode 100644[m
[1mindex 40b1445..0000000[m
[1m--- a/EcommerceBackend/Models/Theaters/ModelCity .cs[m	
[1m+++ /dev/null[m
[36m@@ -1,17 +0,0 @@[m
[31m-ï»¿using System;[m
[31m-using System.Collections.Generic;[m
[31m-using System.Linq;[m
[31m-using System.Text;[m
[31m-using System.Threading.Tasks;[m
[31m-[m
[31m-namespace DemoRestSharp.models.Theaters[m
[31m-{[m
[31m-    public class ModelCity[m
[31m-    {[m
[31m-        public string CityId { get; set; }[m
[31m-        public string Name { get; set; }[m
[31m-        public string StateId { get; set; }[m
[31m-        public string IbgeCode { get; set; }[m
[31m-[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/EcommerceBackend/Models/Theaters/ModelDetalhesCinema.cs b/EcommerceBackend/Models/Theaters/ModelDetalhesCinema.cs[m
[1mdeleted file mode 100644[m
[1mindex cd5f713..0000000[m
[1m--- a/EcommerceBackend/Models/Theaters/ModelDetalhesCinema.cs[m
[1m+++ /dev/null[m
[36m@@ -1,33 +0,0 @@[m
[31m-ï»¿using System;[m
[31m-using System.Collections.Generic;[m
[31m-using System.Linq;[m
[31m-using System.Text;[m
[31m-using System.Threading.Tasks;[m
[31m-[m
[31m-namespace DemoRestSharp.models.Theaters[m
[31m-{[m
[31m-    public class ModelDetalhesCinema[m
[31m-    {[m
[31m-        public string Id { get; set; }[m
[31m-        public string TheaterCode { get; set; }[m
[31m-        public string Name { get; set; }[m
[31m-        public string Latitude { get; set; }[m
[31m-        public string Longitude { get; set; }[m
[31m-        public string Address1 { get; set; }[m
[31m-        public string CityId { get; set; }[m
[31m-        public string StateId { get; set; }[m
[31m-        public string Phone1 { get; set; }[m
[31m-        public string Status { get; set; }[m
[31m-        public string InvoiceEnabled { get; set; }[m
[31m-        public string SnackbarEnabled { get; set; }[m
[31m-        public string IngressoSiteCode { get; set; }[m
[31m-        public string CNPJ { get; set; }[m
[31m-        public string ZipCode { get; set; }[m
[31m-[m
[31m-        public List<ModelCity> City { get; set; }[m
[31m-        public List<ModelState> State { get; set; }[m
[31m-[m
[31m-[m
[31m-[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/EcommerceBackend/Models/Theaters/ModelState.cs b/EcommerceBackend/Models/Theaters/ModelState.cs[m
[1mdeleted file mode 100644[m
[1mindex 03fccd0..0000000[m
[1m--- a/EcommerceBackend/Models/Theaters/ModelState.cs[m
[1m+++ /dev/null[m
[36m@@ -1,22 +0,0 @@[m
[31m-ï»¿using System;[m
[31m-using System.Collections.Generic;[m
[31m-using System.Linq;[m
[31m-using System.Text;[m
[31m-using System.Threading.Tasks;[m
[31m-[m
[31m-namespace DemoRestSharp.models.Theaters[m
[31m-{[m
[31m-    public class ModelState[m
[31m-    {[m
[31m-        public string StateId { get; set; }[m
[31m-        public string Code { get; set; }[m
[31m-        public string Name { get; set; }[m
[31m-        public string CountryId { get; set; }[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/EcommerceBackend/Models/Theaters/ModelTheater.cs b/EcommerceBackend/Models/Theaters/ModelTheater.cs[m
[1mdeleted file mode 100644[m
[1mindex 840aa7f..0000000[m
[1m--- a/EcommerceBackend/Models/Theaters/ModelTheater.cs[m
[1m+++ /dev/null[m
[36m@@ -1,33 +0,0 @@[m
[31m-ï»¿using System;[m
[31m-using System.Collections.Generic;[m
[31m-using System.Linq;[m
[31m-using System.Text;[m
[31m-using System.Threading.Tasks;[m
[31m-[m
[31m-namespace DemoRestSharp.models.Theaters[m
[31m-{[m
[31m-    public class ModelTheater[m
[31m-    {[m
[31m-        public string TheaterCode { get; set; }[m
[31m-        public string Name { get; set; }[m
[31m-        public string Latitude { get; set; }[m
[31m-        public string Longitude { get; set; }[m
[31m-        public string Address1 { get; set; }[m
[31m-        public string StateId { get; set; }[m
[31m-        public string Phone1 { get; set; }[m
[31m-        public string Remarks { get; set; }[m
[31m-        public string InvoiceEnabled { get; set; }[m
[31m-        public string SnackbarEnabled { get; set; }[m
[31m-        public string IngressoSiteCode { get; set; }[m
[31m-        public string SnackbarPOSCode { get; set; }[m
[31m-        public string CNPJ { get; set; }[m
[31m-        public string ZipCode { get; set; }[m
[31m-        public int EconomicGroupId { get; set; }[m
[31m-        public string CityId { get; set; }[m
[31m-[m
[31m-        public List<ModelCity> City { get; set; }[m
[31m-        public List<ModelState> State { get; set; }[m
[31m-        public List<ModelAuditoriums> Auditoriums { get; set; }[m
[31m-[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/EcommerceBackend/Models/Ticket/ModelTicket.cs b/EcommerceBackend/Models/Ticket/ModelTicket.cs[m
[1mdeleted file mode 100644[m
[1mindex 0e338a8..0000000[m
[1m--- a/EcommerceBackend/Models/Ticket/ModelTicket.cs[m
[1m+++ /dev/null[m
[36m@@ -1,14 +0,0 @@[m
[31m-ï»¿using System;[m
[31m-using System.Collections.Generic;[m
[31m-using System.Linq;[m
[31m-using System.Text;[m
[31m-using System.Threading.Tasks;[m
[31m-[m
[31m-namespace DemoRestSharp.models.ModelTicket[m
[31m-{[m
[31m-    class ModelTicket[m
[31m-    {[m
[31m-[m
[31m-[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/EcommerceBackend/Models/Users/ModelAppInfo.cs b/EcommerceBackend/Models/Users/ModelAppInfo.cs[m
[1mindex f734493..dfcb921 100644[m
[1m--- a/EcommerceBackend/Models/Users/ModelAppInfo.cs[m
[1m+++ b/EcommerceBackend/Models/Users/ModelAppInfo.cs[m
[36m@@ -4,9 +4,9 @@[m [musing System.Linq;[m
 using System.Text;[m
 using System.Threading.Tasks;[m
 [m
[31m-namespace EcommerceBackend.models.Users[m
[32m+[m[32mnamespace EcommerceBackend.models.Loyalty[m
 {[m
[31m-    public class ModelAppInfo[m
[32m+[m[32m    class ModelAppInfo[m
     {[m
         public string deviceModel { get; set; }[m
 [m
[1mdiff --git a/EcommerceBackend/Models/Users/ModelCity.cs b/EcommerceBackend/Models/Users/ModelCity.cs[m
[1mindex 6d4ecd3..9267a84 100644[m
[1m--- a/EcommerceBackend/Models/Users/ModelCity.cs[m
[1m+++ b/EcommerceBackend/Models/Users/ModelCity.cs[m
[36m@@ -1,10 +1,11 @@[m
[31m-ï»¿using System;[m
[32m+[m[32mï»¿using EcommerceBackend.models.Loyalty;[m
[32m+[m[32musing System;[m
 using System.Collections.Generic;[m
 using System.Linq;[m
 using System.Text;[m
 using System.Threading.Tasks;[m
 [m
[31m-namespace EcommerceBackend.models.Users[m
[32m+[m[32mnamespace EcommerceBackend.models.City[m
 [m
 {[m
     class ModelCity[m
[1mdiff --git a/EcommerceBackend/Models/Users/ModelCountry.cs b/EcommerceBackend/Models/Users/ModelCountry.cs[m
[1mindex f1cbbc8..f82b753 100644[m
[1m--- a/EcommerceBackend/Models/Users/ModelCountry.cs[m
[1m+++ b/EcommerceBackend/Models/Users/ModelCountry.cs[m
[36m@@ -4,7 +4,7 @@[m [musing System.Linq;[m
 using System.Text;[m
 using System.Threading.Tasks;[m
 [m
[31m-namespace EcommerceBackend.models.Users[m
[32m+[m[32mnamespace EcommerceBackend.models.Loyalty[m
 {[m
     class ModelCountry[m
     {[m
[1mdiff --git a/EcommerceBackend/Models/Users/ModelMember.cs b/EcommerceBackend/Models/Users/ModelMember.cs[m
[1mindex b29af66..f4db356 100644[m
[1m--- a/EcommerceBackend/Models/Users/ModelMember.cs[m
[1m+++ b/EcommerceBackend/Models/Users/ModelMember.cs[m
[36m@@ -1,10 +1,11 @@[m
[31m-ï»¿using System;[m
[32m+[m[32mï»¿using EcommerceBackend.models.City;[m
[32m+[m[32musing System;[m
 using System.Collections.Generic;[m
 using System.Linq;[m
 using System.Text;[m
 using System.Threading.Tasks;[m
 [m
[31m-namespace EcommerceBackend.models.Users[m
[32m+[m[32mnamespace EcommerceBackend.models.Loyalty[m
 {[m
     class ModelMember[m
     {[m
[1mdiff --git a/EcommerceBackend/Models/Users/ModelState.cs b/EcommerceBackend/Models/Users/ModelState.cs[m
[1mindex e53ed6b..11aed9b 100644[m
[1m--- a/EcommerceBackend/Models/Users/ModelState.cs[m
[1m+++ b/EcommerceBackend/Models/Users/ModelState.cs[m
[36m@@ -4,7 +4,7 @@[m [musing System.Linq;[m
 using System.Text;[m
 using System.Threading.Tasks;[m
 [m
[31m-namespace EcommerceBackend.models.Users[m
[32m+[m[32mnamespace EcommerceBackend.models.Loyalty[m
 {[m
     class ModelState[m
     {[m
[1mdiff --git a/EcommerceBackend/Models/Users/ModelUsers.cs b/EcommerceBackend/Models/Users/ModelUsers.cs[m
[1mindex 72d11cb..618ca72 100644[m
[1m--- a/EcommerceBackend/Models/Users/ModelUsers.cs[m
[1m+++ b/EcommerceBackend/Models/Users/ModelUsers.cs[m
[36m@@ -1,10 +1,11 @@[m
[31m-ï»¿using System;[m
[32m+[m[32mï»¿using EcommerceBackend.models.City;[m
[32m+[m[32musing System;[m
 using System.Collections.Generic;[m
 using System.Linq;[m
 using System.Text;[m
 using System.Threading.Tasks;[m
 [m
[31m-namespace EcommerceBackend.models.Users[m
[32m+[m[32mnamespace EcommerceBackend.models.Loyalty[m
 {[m
     class ModelUsers[m
     {[m
[1mdiff --git a/EcommerceBackend/app.config b/EcommerceBackend/app.config[m
[1mindex 8214109..0016fa4 100644[m
[1m--- a/EcommerceBackend/app.config[m
[1m+++ b/EcommerceBackend/app.config[m
[36m@@ -1,43 +1,34 @@[m
[31m-<?xml version="1.0" encoding="utf-8"?>[m
[32m+[m[32mï»¿<?xml version="1.0" encoding="utf-8"?>[m
 <configuration>[m
   <runtime>[m
     <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">[m
       <dependentAssembly>[m
[31m-        <assemblyIdentity name="TechTalk.SpecFlow" publicKeyToken="0778194805d6db41" culture="neutral"/>[m
[31m-        <bindingRedirect oldVersion="0.0.0.0-3.1.0.0" newVersion="3.1.0.0"/>[m
[32m+[m[32m        <assemblyIdentity name="TechTalk.SpecFlow" publicKeyToken="0778194805d6db41" culture="neutral" />[m
[32m+[m[32m        <bindingRedirect oldVersion="0.0.0.0-3.1.0.0" newVersion="3.1.0.0" />[m
       </dependentAssembly>[m
     </assemblyBinding>[m
   </runtime>[m
   <appSettings>[m
     <!-- Url sensedia homologaÃ§Ã£o -->[m
[31m-    <add key="dnsSensedia" value="http://api-ss-sandbox.cinemark.com.br/"/>[m
[32m+[m[32m    <add key="dnsSensedia" value="https://api-ss-sandbox.cinemark.com.br/" />[m
[32m+[m[41m    [m
     <!-- Url sensedia DEV Loyolty -->[m
[31m-    <add key="dnsSensediaDEV" value="https://api-ss-dev.cinemark.com.br/"/>[m
[32m+[m[32m    <add key="dnsSensediaDEV" value="https://api-ss-dev.cinemark.com.br/" />[m[41m    [m
[32m+[m[41m    [m
     <!-- Url sensedia produÃ§Ã£o -->[m
     <!--><add key="dnsSensedia" value="https://api-ss.cinemark.com.br/" /> -->[m
[31m-    <!-- Resource Validate Loyolty -->[m
[31m-    <add key="SensediaValidate" value="loyalty/v1/externalvalidatesignup"/>[m
[31m-    <!-- Resource Register Loyolty -->[m
[31m-    <add key="SensediaRegister" value="loyalty/v1/externalsignup"/>[m
[32m+[m
[32m+[m[32m    <!-- Resource Validate DEV Loyolty -->[m
[32m+[m[32m    <add key="SensediaValidateDEV" value="loyalty/v1/externalvalidatesignup" />[m
[32m+[m
[32m+[m[32m    <!-- Resource Register DEV Loyolty -->[m
[32m+[m[32m    <add key="SensediaRegisterDEV" value="loyalty/v1/externalsignup" />[m
[32m+[m
     <!-- Token CIS homologaÃ§Ã£o -->[m
[31m-    <add key="CISToken" value="AC7B73962060ECA3BP32ACB0E4DAA956"/>[m
[32m+[m[32m    <add key="CISToken" value="AC7B73962060ECA3BP32ACB0E4DAA956" />[m
     <!-- Token CIS DEV -->[m
[31m-    <add key="CISTokenDEV" value="FA50ACA11E7B474B86BFCF545C207700"/>[m
[31m-[m
[32m+[m[32m    <add key="CISTokenDEV" value="FA50ACA11E7B474B86BFCF545C207700" />[m
     <!-- Token CIS produÃ§Ã£o -->[m
     <!--><add key="CISToken" value="805F489640CB422CADD5274E4D0C364F" /> -->[m
[31m-    <add key="ClientSettingsProvider.ServiceUri" value=""/>[m
   </appSettings>[m
[31m-  <system.web>[m
[31m-    <membership defaultProvider="ClientAuthenticationMembershipProvider">[m
[31m-      <providers>[m
[31m-        <add name="ClientAuthenticationMembershipProvider" type="System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri=""/>[m
[31m-      </providers>[m
[31m-    </membership>[m
[31m-    <roleManager defaultProvider="ClientRoleProvider" enabled="true">[m
[31m-      <providers>[m
[31m-        <add name="ClientRoleProvider" type="System.Web.ClientServices.Providers.ClientRoleProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" cacheTimeout="86400"/>[m
[31m-      </providers>[m
[31m-    </roleManager>[m
[31m-  </system.web>[m
[31m-<startup><supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.7.2"/></startup></configuration>[m
[32m+[m[32m</configuration>[m
\ No newline at end of file[m
[1mdiff --git a/EcommerceBackend/Models/Cache/ModelLimparCache.cs b/EcommerceBackend/models/Ticket/ModelTicket.cs[m
[1msimilarity index 54%[m
[1mrename from EcommerceBackend/Models/Cache/ModelLimparCache.cs[m
[1mrename to EcommerceBackend/models/Ticket/ModelTicket.cs[m
[1mindex b56d8f3..5586ef8 100644[m
[1m--- a/EcommerceBackend/Models/Cache/ModelLimparCache.cs[m
[1m+++ b/EcommerceBackend/models/Ticket/ModelTicket.cs[m
[36m@@ -4,12 +4,12 @@[m [musing System.Linq;[m
 using System.Text;[m
 using System.Threading.Tasks;[m
 [m
[31m-namespace EcommerceBackend[m
[32m+[m[32mnamespace DemoRestSharp.models.Ticket[m
 {[m
[31m-    public class ModelLimparCache[m
[32m+[m[32m    public class ModelTicket[m
     {[m
[31m-        public string Message { get; set; }[m
[31m-    }[m
[31m-        [m
[32m+[m[32m        public ModelTransacao transacao { get; set; }[m
 [m
[32m+[m[41m        [m
[32m+[m[32m    }[m
 }[m
[1mdiff --git a/EcommerceBackend/models/Ticket/ModelTransacao.cs b/EcommerceBackend/models/Ticket/ModelTransacao.cs[m
[1mnew file mode 100644[m
[1mindex 0000000..6542ac6[m
[1m--- /dev/null[m
[1m+++ b/EcommerceBackend/models/Ticket/ModelTransacao.cs[m
[36m@@ -0,0 +1,15 @@[m
[32m+[m[32mï»¿using System;[m
[32m+[m[32musing System.Collections.Generic;[m
[32m+[m[32musing System.Linq;[m
[32m+[m[32musing System.Text;[m
[32m+[m[32musing System.Threading.Tasks;[m
[32m+[m
[32m+[m[32mnamespace DemoRestSharp.models.Ticket[m
[32m+[m[32m{[m
[32m+[m[32m    public class ModelTransacao[m
[32m+[m[32m    {[m
[32m+[m[32m        public string mensagem { get; set; }[m
[32m+[m
[32m+[m[32m        public int codigo { get; set; }[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/EcommerceBackend/tests/Bookings.cs b/EcommerceBackend/tests/Bookings.cs[m
[1mindex 85ad637..b2556f7 100644[m
[1m--- a/EcommerceBackend/tests/Bookings.cs[m
[1m+++ b/EcommerceBackend/tests/Bookings.cs[m
[36m@@ -1,6 +1,6 @@[m
 ï»¿using System.Configuration;[m
 using System;[m
[31m-//using EcommerceBackend.models.Loyalty;[m
[32m+[m[32musing EcommerceBackend.models.Loyalty;[m
 using NUnit.Framework;[m
 using RestSharp;[m
 using AventStack.ExtentReports;[m
[36m@@ -19,7 +19,7 @@[m [mnamespace EcommerceBackend[m
         public void StartReport()[m
         {[m
             extent = new ExtentReports();[m
[31m-            var htmlReporter = new ExtentHtmlReporter(@"C:\AutomationTools\EcommerceBackendReports\Reports\Bookings\");[m
[32m+[m[32m            var htmlReporter = new ExtentHtmlReporter(@"C:\EcommerceBackendReports\Reports\Bookings\");[m
             extent.AttachReporter(htmlReporter);[m
         }[m
 [m
[36m@@ -39,11 +39,9 @@[m [mnamespace EcommerceBackend[m
             try[m
             {[m
                 //Criando e enviando requisiÃ§Ã£o[m
[31m-                //comentario[m
[31m-[m
                 test.Log(Status.Info, "Criando requisiÃ§Ã£o.");[m
                 var client = new RestClient(ConfigurationManager.AppSettings["dnsSensedia"]);[m
[31m-                var request = new RestRequest("bus/v1/bookings/showtimes/movies/" + idDeadpool, Method.GET);[m
[32m+[m[32m                var request = new RestRequest("bus/v1/bookings/showtimes/movies/"+idDeadpool, Method.GET);[m
                 request.RequestFormat = DataFormat.Json;[m
                 test.Log(Status.Info, "Setando headers necessÃ¡rios para realizar a requisiÃ§Ã£o.");[m
                 Utils.setCisToken(request);[m
[36m@@ -73,46 +71,6 @@[m [mnamespace EcommerceBackend[m
             }[m
         }[m
 [m
[31m-        [Test][m
[31m-        public void ValidaConsultaDisplayArea()[m
[31m-        {[m
[31m-            ExtentTest test = null;[m
[31m-            test = extent.CreateTest("ValidaConsultaDisplayArea").Info("InÃ­cio de teste.");[m
[31m-[m
[31m-            try[m
[31m-            {[m
[31m-                //Criando e enviando a requisiÃ§Ã£o[m
[31m-                test.Log(Status.Info, "Criando requisiÃ§Ã£o.");[m
[31m-                var client = new RestClient(ConfigurationManager.AppSettings["dnsSensedia"]);[m
[31m-                var request = new RestRequest("bus/v1/bookings/showtimes/displayareas/", Method.GET);[m
[31m-                request.RequestFormat = DataFormat.Json;[m
[31m-                test.Log(Status.Info, "Setando headers necessÃ¡rios para realizar a requisiÃ§Ã£o.");[m
[31m-                Utils.setCisToken(request);[m
[31m-                test.Log(Status.Info, "Enviando requisiÃ§Ã£o.");[m
[31m-                var response = client.Execute(request);[m
[31m-[m
[31m-                string responseContent = response.Content.ToString();[m
[31m-[m
[31m-                //Declarando as propriedades que deverÃ£o obrigatoriamente estar na resposta da requisiÃ§Ã£o[m
[31m-                string[] properties = new string[] { "\"Title\":", "\"AreaType\":", "\"AreaTypeName\":", "\"ImageURL\":",[m
[31m-                "\"ApplicationTarget\":", "\"Movies\":"};[m
[31m-[m
[31m-                //InÃ­cio das validaÃ§Ãµes[m
[31m-                test.Log(Status.Info, "Validando se o Status Code de retorno da requisiÃ§Ã£o Ã© 200.");[m
[31m-                Assert.That((int)response.StatusCode, Is.EqualTo(200), "Status Code divergente.");[m
[31m-                Utils.validaContrato(properties, responseContent, test);[m
[31m-                test.Log(Status.Pass, "Teste ok, todas as verificaÃ§Ãµes foram realizadas com sucesso.");[m
[31m-[m
[31m-[m
[31m-            }[m
[31m-            catch (Exception e)[m
[31m-            {[m
[31m-                test.Log(Status.Fail, e.ToString());[m
[31m-                throw new Exception("Falha ao validar contrato: " + e.Message);[m
[31m-            }[m
[31m-[m
[31m-        }[m
[31m-[m
         [Test][m
         public void ValidaContratoDisplayArea()[m
         {[m
[1mdiff --git a/EcommerceBackend/tests/Common.cs b/EcommerceBackend/tests/Common.cs[m
[1mindex 3d0579f..7e61275 100644[m
[1m--- a/EcommerceBackend/tests/Common.cs[m
[1m+++ b/EcommerceBackend/tests/Common.cs[m
[36m@@ -1,6 +1,6 @@[m
 ï»¿using System.Configuration;[m
 using System;[m
[31m-//using EcommerceBackend.models.Loyalty;[m
[32m+[m[32musing EcommerceBackend.models.Loyalty;[m
 using NUnit.Framework;[m
 using RestSharp;[m
 using AventStack.ExtentReports;[m
[36m@@ -20,7 +20,7 @@[m [mnamespace EcommerceBackend[m
         public void StartReport()[m
         {[m
             extent = new ExtentReports();[m
[31m-            var htmlReporter = new ExtentHtmlReporter(@"C:\AutomationTools\EcommerceBackendReports\Reports\Common\");[m
[32m+[m[32m            var htmlReporter = new ExtentHtmlReporter(@"C:\EcommerceBackendReports\Reports\Common\");[m
             extent.AttachReporter(htmlReporter);[m
         }[m
 [m
[36m@@ -38,7 +38,6 @@[m [mnamespace EcommerceBackend[m
 [m
             string idEstado = "25";[m
 [m
[31m-[m
             try[m
             {[m
                 //Criando e enviando requisiÃ§Ã£o[m
[1mdiff --git a/EcommerceBackend/tests/LimparCache.cs b/EcommerceBackend/tests/LimparCache.cs[m
[1mdeleted file mode 100644[m
[1mindex f30d3c1..0000000[m
[1m--- a/EcommerceBackend/tests/LimparCache.cs[m
[1m+++ /dev/null[m
[36m@@ -1,69 +0,0 @@[m
[31m-ï»¿using System.Configuration;[m
[31m-using System;[m
[31m-using NUnit.Framework;[m
[31m-using RestSharp;[m
[31m-using AventStack.ExtentReports;[m
[31m-using AventStack.ExtentReports.Reporter;[m
[31m-using AventStack.ExtentReports.Reporter.Configuration;[m
[31m-using EcommerceBackend.utils;[m
[31m-[m
[31m-namespace EcommerceBackend[m
[31m-{[m
[31m-    [TestFixture][m
[31m-    public class LimparCache[m
[31m-    {[m
[31m-[m
[31m-        ExtentReports extent = null;[m
[31m-[m
[31m-        [OneTimeSetUp][m
[31m-        public void StartReport()[m
[31m-        {[m
[31m-            extent = new ExtentReports();[m
[31m-            var htmlReporter = new ExtentHtmlReporter(@"C:\AutomationTools\EcommerceBackendReports\Reports\LimparCache\");[m
[31m-            extent.AttachReporter(htmlReporter);[m
[31m-        }[m
[31m-[m
[31m-        [OneTimeTearDown][m
[31m-        public void CloseReport()[m
[31m-        {          [m
[31m-            extent.Flush();[m
[31m-        }[m
[31m-[m
[31m-        [Test][m
[31m-        public void ValidaLimparCache()[m
[31m-        {[m
[31m-              ExtentTest test = null;[m
[31m-            test = extent.CreateTest("ValidaLimparCache").Info("InÃ­cio do teste.");[m
[31m-[m
[31m-            try[m
[31m-            {[m
[31m-[m
[31m-                //Criando e enviando requisiÃ§Ã£o[m
[31m-                test.Log(Status.Info, "Criando requisiÃ§Ã£o");[m
[31m-                var client = new RestClient(ConfigurationManager.AppSettings["dnsSensedia"]);[m
[31m-                var request = new RestRequest("bus/v1/limparcaches",  Method.POST);[m
[31m-                utils.Utils.setCisToken(request);[m
[31m-                test.Log(Status.Info, "Setando headers necessÃ¡rios para realizar a requisiÃ§Ã£o");[m
[31m-                var response = client.Execute<ModelLimparCache>(request);[m
[31m-[m
[31m-                // Valida se Existe o campo de mensagem[m
[31m-                test.Log(Status.Info, "Valida a mensagem de limpeza da lixeira");[m
[31m-                string responseContent = response.Content.ToString();[m
[31m-                string[] properties = new string[] { "\"Message\":" };[m
[31m-[m
[31m-                //InÃ­cio das validaÃ§Ãµes[m
[31m-                test.Log(Status.Info, "Validando se o Status Code de retorno da requisiÃ§Ã£o Ã© 200.");[m
[31m-                Assert.That((int)response.StatusCode, Is.EqualTo(200), "Status Code divergente.");[m
[31m-                Utils.validaContrato(properties, responseContent, test);[m
[31m-                test.Log(Status.Info, "Finalizado todas as etapas.");[m
[31m-[m
[31m-            }[m
[31m-            catch (Exception e)[m
[31m-            {[m
[31m-                test.Log(Status.Fail, e.ToString());[m
[31m-                throw new Exception("Falha ao validar limpeza de cache: " + e.Message);[m
[31m-            }[m
[31m-        }[m
[31m-[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/EcommerceBackend/tests/Loyalty.cs b/EcommerceBackend/tests/Loyalty.cs[m
[1mindex 0e7a640..dac7312 100644[m
[1m--- a/EcommerceBackend/tests/Loyalty.cs[m
[1m+++ b/EcommerceBackend/tests/Loyalty.cs[m
[36m@@ -1,13 +1,12 @@[m
 ï»¿using System.Configuration;[m
 using System;[m
[31m-using EcommerceBackend.models.Loyalt;[m
[32m+[m[32musing EcommerceBackend.models.Loyalty;[m
 using NUnit.Framework;[m
 using RestSharp;[m
 using AventStack.ExtentReports;[m
 using AventStack.ExtentReports.Reporter;[m
 using AventStack.ExtentReports.Reporter.Configuration;[m
 using EcommerceBackend.utils;[m
[31m-using System.Collections.Generic;[m
 [m
 namespace EcommerceBackend[m
 {[m
[36m@@ -21,7 +20,7 @@[m [mnamespace EcommerceBackend[m
         public void StartReport()[m
         {[m
             extent = new ExtentReports();[m
[31m-            var htmlReporter = new ExtentHtmlReporter(@"C:\AutomationTools\EcommerceBackendReports\Reports\Loyalty\");[m
[32m+[m[32m            var htmlReporter = new ExtentHtmlReporter(@"C:\EcommerceBackendReports\Reports\Loyalty\");[m
             extent.AttachReporter(htmlReporter);[m
         }[m
 [m
[36m@@ -35,10 +34,10 @@[m [mnamespace EcommerceBackend[m
 [m
         public void ValidarUsuarios()[m
         {[m
[31m-                [m
[32m+[m
 [m
             ExtentTest test = null;[m
[31m-            test = extent.CreateTest("Consultar CPF's SEM AdesÃ£o").Info("InÃ­cio do teste.");[m
[32m+[m[32m            test = extent.CreateTest("ValidaConsultaDetalhesFilme").Info("InÃ­cio do teste.");[m
             string cpfGerarVUSR1 = utils.Utils.gerarCpf();[m
             string cpfGerarVUSR2 = utils.Utils.gerarCpf();[m
             string[] cpfGerado = new string[] { cpfGerarVUSR1, cpfGerarVUSR2 };[m
[36m@@ -48,8 +47,8 @@[m [mnamespace EcommerceBackend[m
             {[m
                 //Criando e enviando requisiÃ§Ã£o[m
                 test.Log(Status.Info, "Criando requisiÃ§Ã£o.");[m
[31m-                var client = new RestClient(ConfigurationManager.AppSettings["dnsSensedia"]);[m
[31m-                var requestConsultaCPF = new RestRequest(ConfigurationManager.AppSettings["SensediaValidate"], Method.POST);[m
[32m+[m[32m                var client = new RestClient(ConfigurationManager.AppSettings["dnsSensediaDEV"]);[m
[32m+[m[32m                var requestConsultaCPF = new RestRequest(ConfigurationManager.AppSettings["SensediaValidateDEV"], Method.POST);[m
                 requestConsultaCPF.RequestFormat = DataFormat.Json;[m
                 requestConsultaCPF.AddJsonBody(new[m
                 {[m
[36m@@ -58,16 +57,15 @@[m [mnamespace EcommerceBackend[m
                 }[m
                 );[m
                 test.Log(Status.Info, "Setando headers necessÃ¡rios para realizar a requisiÃ§Ã£o.");[m
[31m-                utils.Utils.setCisToken(requestConsultaCPF);[m
[32m+[m[32m                utils.Utils.setCisTokenDEV(requestConsultaCPF);[m
                 test.Log(Status.Info, "Enviando requisiÃ§Ã£o.");[m
                 var responseConsultaCPF = client.Execute<ModelLoyalty>(requestConsultaCPF);[m
 [m
                 //InÃ­cio das validaÃ§Ãµes[m
                 test.Log(Status.Info, "Validando se o Status Code de retorno da requisiÃ§Ã£o Ã© 200.");[m
[32m+[m
                 Assert.That((int)responseConsultaCPF.StatusCode, Is.EqualTo(200), "Status Code divergente.");[m
[31m-                test.Log(Status.Info, "Validando se o valor da propriedade 'ok' Ã© igual a 'true'");[m
                 Assert.That(responseConsultaCPF.Data.Ok, Is.EqualTo(true), "Valor da propriedade 'Ok' divergente.");[m
[31m-                test.Log(Status.Info, "Validando se o valor da propriedade 'messages' esta vazio");[m
                 Assert.That(responseConsultaCPF.Data.Messages, Is.EqualTo(""), "Valor da propriedade 'messages' divergente.");[m
 [m
                 test.Log(Status.Pass, "Teste ok, todas as verificaÃ§Ãµes foram realizadas com sucesso.");[m
[36m@@ -89,7 +87,7 @@[m [mnamespace EcommerceBackend[m
 [m
 [m
             ExtentTest test = null;[m
[31m-            test = extent.CreateTest("Registrar CPF's SEM AdesÃ£o").Info("InÃ­cio do teste.");[m
[32m+[m[32m            test = extent.CreateTest("ValidaConsultaDetalhesFilme").Info("InÃ­cio do teste.");[m
             string cpfGerarRUSR1 = utils.Utils.gerarCpf();[m
             string cpfGerarRUSR2 = utils.Utils.gerarCpf();[m
             string[] cpfGerado = new string[] { cpfGerarRUSR1, cpfGerarRUSR2 };[m
[36m@@ -99,8 +97,8 @@[m [mnamespace EcommerceBackend[m
             {[m
                 //Criando e enviando requisiÃ§Ã£o[m
                 test.Log(Status.Info, "Criando requisiÃ§Ã£o.");[m
[31m-                var client = new RestClient(ConfigurationManager.AppSettings["dnsSensedia"]);[m
[31m-                var requestConsultaCPF = new RestRequest(ConfigurationManager.AppSettings["SensediaRegister"], Method.POST);[m
[32m+[m[32m                var client = new RestClient(ConfigurationManager.AppSettings["dnsSensediaDEV"]);[m
[32m+[m[32m                var requestConsultaCPF = new RestRequest(ConfigurationManager.AppSettings["SensediaRegisterDEV"], Method.POST);[m
                 requestConsultaCPF.RequestFormat = DataFormat.Json;[m
                 requestConsultaCPF.AddJsonBody(new[m
                 {[m
[36m@@ -109,16 +107,15 @@[m [mnamespace EcommerceBackend[m
                 }[m
                 );[m
                 test.Log(Status.Info, "Setando headers necessÃ¡rios para realizar a requisiÃ§Ã£o.");[m
[31m-                utils.Utils.setCisToken(requestConsultaCPF);[m
[32m+[m[32m                utils.Utils.setCisTokenDEV(requestConsultaCPF);[m
                 test.Log(Status.Info, "Enviando requisiÃ§Ã£o.");[m
                 var responseConsultaCPF = client.Execute<ModelLoyalty>(requestConsultaCPF);[m
 [m
                 //InÃ­cio das validaÃ§Ãµes[m
                 test.Log(Status.Info, "Validando se o Status Code de retorno da requisiÃ§Ã£o Ã© 200.");[m
[32m+[m
                 Assert.That((int)responseConsultaCPF.StatusCode, Is.EqualTo(200), "Status Code divergente.");[m
[31m-                test.Log(Status.Info, "Validando se o valor da propriedade 'ok' Ã© igual a 'true'");[m
                 Assert.That(responseConsultaCPF.Data.Ok, Is.EqualTo(true), "Valor da propriedade 'Ok' divergente.");[m
[31m-                test.Log(Status.Info, "Validando se o valor da propriedade 'messages' esta vazio");[m
                 Assert.That(responseConsultaCPF.Data.Messages, Is.EqualTo(""), "Valor da propriedade 'messages' divergente.");[m
 [m
                 test.Log(Status.Pass, "Teste ok, todas as verificaÃ§Ãµes foram realizadas com sucesso.");[m
[36m@@ -140,7 +137,7 @@[m [mnamespace EcommerceBackend[m
 [m
 [m
             ExtentTest test = null;[m
[31m-            test = extent.CreateTest("Registrar CPF's COM AdesÃ£o").Info("InÃ­cio do teste.");            [m
[32m+[m[32m            test = extent.CreateTest("ValidaConsultaDetalhesFilme").Info("InÃ­cio do teste.");[m[41m            [m
             string[] cpfGerado = new string[] { "34890392114", "73168669180" };[m
 [m
 [m
[36m@@ -148,8 +145,8 @@[m [mnamespace EcommerceBackend[m
             {[m
                 //Criando e enviando requisiÃ§Ã£o[m
                 test.Log(Status.Info, "Criando requisiÃ§Ã£o.");[m
[31m-                var client = new RestClient(ConfigurationManager.AppSettings["dnsSensedia"]);[m
[31m-                var requestConsultaCPF = new RestRequest(ConfigurationManager.AppSettings["SensediaRegister"], Method.POST);[m
[32m+[m[32m                var client = new RestClient(ConfigurationManager.AppSettings["dnsSensediaDEV"]);[m
[32m+[m[32m                var requestConsultaCPF = new RestRequest(ConfigurationManager.AppSettings["SensediaRegisterDEV"], Method.POST);[m
                 requestConsultaCPF.RequestFormat = DataFormat.Json;[m
                 requestConsultaCPF.AddJsonBody(new[m
                 {[m
[36m@@ -158,18 +155,16 @@[m [mnamespace EcommerceBackend[m
                 }[m
                 );[m
                 test.Log(Status.Info, "Setando headers necessÃ¡rios para realizar a requisiÃ§Ã£o.");[m
[31m-                utils.Utils.setCisToken(requestConsultaCPF);[m
[32m+[m[32m                utils.Utils.setCisTokenDEV(requestConsultaCPF);[m
                 test.Log(Status.Info, "Enviando requisiÃ§Ã£o.");[m
                 var responseConsultaCPF = client.Execute<ModelLoyalty>(requestConsultaCPF);[m
 [m
                 //InÃ­cio das validaÃ§Ãµes[m
                 test.Log(Status.Info, "Validando se o Status Code de retorno da requisiÃ§Ã£o Ã© 400.");[m
[32m+[m
                 Assert.That((int)responseConsultaCPF.StatusCode, Is.EqualTo(400), "Status Code divergente.");[m
[31m-                test.Log(Status.Info, "Validando se o valor da propriedade 'ok' Ã© igual a 'false'");[m
                 Assert.That(responseConsultaCPF.Data.Ok, Is.EqualTo(false), "Valor da propriedade 'Ok' divergente.");[m
[31m-                test.Log(Status.Info, "Validando o valor da propriedade 'messages' para o primeiro CPF informado");[m
                 Assert.That(responseConsultaCPF.Data.Messages[0], Is.EqualTo("CPF '34890392114' JÃ¡ possui plano de fidelidade associado!"), "Valor da propriedade 'messages' divergente.");[m
[31m-                test.Log(Status.Info, "Validando o valor da propriedade 'messages' para o segundo CPF informado");[m
                 Assert.That(responseConsultaCPF.Data.Messages[1], Is.EqualTo("CPF '73168669180' JÃ¡ possui plano de fidelidade associado!"), "Valor da propriedade 'messages' divergente.");[m
 [m
                 test.Log(Status.Pass, "Teste ok, todas as verificaÃ§Ãµes foram realizadas com sucesso.");[m
[36m@@ -184,305 +179,6 @@[m [mnamespace EcommerceBackend[m
 [m
         }[m
 [m
[31m-        [Test][m
[31m-[m
[31m-        public void RegistrarUsuariosCPFDuplicado()[m
[31m-        {[m
[31m-[m
[31m-[m
[31m-            ExtentTest test = null;[m
[31m-            test = extent.CreateTest("Registrar CPF's SEM AdesÃ£o").Info("InÃ­cio do teste.");[m
[31m-            string cpfGerarRUSR1 = utils.Utils.gerarCpf();            [m
[31m-            string[] cpfGerado = new string[] { cpfGerarRUSR1, cpfGerarRUSR1 };[m
[31m-[m
[31m-[m
[31m-            try[m
[31m-            {[m
[31m-                //Criando e enviando requisiÃ§Ã£o[m
[31m-                test.Log(Status.Info, "Criando requisiÃ§Ã£o.");[m
[31m-                var client = new RestClient(ConfigurationManager.AppSettings["dnsSensedia"]);[m
[31m-                var requestConsultaCPF = new RestRequest(ConfigurationManager.AppSettings["SensediaRegister"], Method.POST);[m
[31m-                requestConsultaCPF.RequestFormat = DataFormat.Json;[m
[31m-                requestConsultaCPF.AddJsonBody(new[m
[31m-                {[m
[31m-                    cpf = cpfGerado,[m
[31m-                    orderNumber = "332211"[m
[31m-                }[m
[31m-                );[m
[31m-                test.Log(Status.Info, "Setando headers necessÃ¡rios para realizar a requisiÃ§Ã£o.");[m
[31m-                utils.Utils.setCisToken(requestConsultaCPF);[m
[31m-                test.Log(Status.Info, "Enviando requisiÃ§Ã£o.");[m
[31m-                var responseConsultaCPF = client.Execute<ModelLoyalty>(requestConsultaCPF);[m
[31m-[m
[31m-                //InÃ­cio das validaÃ§Ãµes[m
[31m-                test.Log(Status.Info, "Validando se o Status Code de retorno da requisiÃ§Ã£o Ã© 200.");[m
[31m-                Assert.That((int)responseConsultaCPF.StatusCode, Is.EqualTo(400), "Status Code divergente.");[m
[31m-                test.Log(Status.Info, "Validando se o valor da propriedade 'ok' Ã© igual a 'true'");[m
[31m-                Assert.That(responseConsultaCPF.Data.Ok, Is.EqualTo(false), "Valor da propriedade 'Ok' divergente.");[m
[31m-                test.Log(Status.Info, "Validando o valor da propriedade 'messages' para CPF's duplicados");[m
[31m-                Assert.That(responseConsultaCPF.Data.Messages[0], Is.EqualTo("CPF(s) '"+cpfGerarRUSR1+"' duplicado(s)!"), "Valor da propriedade 'messages' divergente.");[m
[31m-[m
[31m-                test.Log(Status.Pass, "Teste ok, todas as verificaÃ§Ãµes foram realizadas com sucesso.");[m
[31m-[m
[31m-[m
[31m-            }[m
[31m-            catch (Exception e)[m
[31m-            {[m
[31m-                test.Log(Status.Fail, e.ToString());[m
[31m-                throw new Exception("Falha ao validar contrato: " + e.Message);[m
[31m-            }[m
[31m-[m
[31m-        }[m
[31m-[m
[31m-        [Test][m
[31m-[m
[31m-        public void ValidaExibePlanosNlp()[m
[31m-        {[m
[31m-[m
[31m-[m
[31m-            ExtentTest test = null;[m
[31m-            test = extent.CreateTest("ValidaExibePlanosNlp").Info("InÃ­cio do teste.");[m
[31m-[m
[31m-            try[m
[31m-            {[m
[31m-                //Criando e enviando requisiÃ§Ã£o[m
[31m-                test.Log(Status.Info, "Criando requisiÃ§Ã£o.");[m
[31m-                var client = new RestClient(ConfigurationManager.AppSettings["dnsSensedia"]);[m
[31m-                var request = new RestRequest("loyalty/v1/plans", Method.GET);[m
[31m-                request.RequestFormat = DataFormat.Json;[m
[31m-[m
[31m-                test.Log(Status.Info, "Setando headers necessÃ¡rios para realizar a requisiÃ§Ã£o.");[m
[31m-                utils.Utils.setCisToken(request);[m
[31m-                test.Log(Status.Info, "Enviando requisiÃ§Ã£o.");[m
[31m-                var response = client.Execute<List<ModelLoyalty>>(request);[m
[31m-[m
[31m-[m
[31m-                string responseContent = response.Content.ToString();[m
[31m-[m
[31m-                string[] properties = new string[] { "\"id\":", "\"name\":", "\"description\":", "\"buttonDescription\":", "\"benefits\":"[m
[31m-                , "\"type\":", "\"description\":", "\"asset\":", "\"asset\":", "\"url\":", "\"price\":"[m
[31m-                , "\"chargeType\":", "\"asset\":", "\"url\":"};[m
[31m-[m
[31m-[m
[31m-                test.Log(Status.Info, "InÃ­cio de validaÃ§Ãµes da string properties.");[m
[31m-                for (int i = 0; i < properties.Length; i++)[m
[31m-                {[m
[31m-                    int qtdCampos = properties.Length;[m
[31m-                    string indiceZero = properties[0];[m
[31m-                    if (qtdCampos != 14)[m
[31m-                    {[m
[31m-                        test.Log(Status.Fail, "Contrato de validaÃ§Ã£o de NLP incompleto!");[m
[31m-[m
[31m-                    }[m
[31m-                    else if (indiceZero != "\"id\":")[m
[31m-                    {[m
[31m-                        test.Log(Status.Fail, "Contrato Inexistente");[m
[31m-                    }[m
[31m-[m
[31m-                }[m
[31m-                test.Log(Status.Info, "String properties validada com sucesso.");[m
[31m-[m
[31m-[m
[31m-                //InÃ­cio das validaÃ§Ãµes[m
[31m-                test.Log(Status.Info, "Validando se o Status Code de retorno da requisiÃ§Ã£o Ã© 200.");[m
[31m-                Assert.That((int)response.StatusCode, Is.EqualTo(200), "Status Code divergente.");[m
[31m-                test.Log(Status.Info, "Valida Contrato de NLP");[m
[31m-                Utils.validaContrato(properties, responseContent, test);[m
[31m-                test.Log(Status.Info, "Contrato NLP validado com sucesso.");[m
[31m-[m
[31m-[m
[31m-                test.Log(Status.Info, "InÃ­cio da validaÃ§Ã£o de NLP.");[m
[31m-[m
[31m-                if (response.Data[0].id == null || response.Data[0].id == "")[m
[31m-                {[m
[31m-                    test.Log(Status.Fail, "Plano Inexistente!");[m
[31m-                }[m
[31m-                else if (response.Data[0].id != null && response.Data[0].id != "")[m
[31m-                {[m
[31m-                    Assert.That(response.Data[0].id, Is.EqualTo("20261086-432f-443e-a650-c9ccb8d7acaa"), "id divergente.");[m
[31m-                    Assert.That(response.Data[0].name, Is.EqualTo("FÃ£ de carteirinha"), "name divergente.");[m
[31m-                    Assert.That(response.Data[0].buttonDescription, Is.EqualTo("Quero ser fÃ£ de carteirinha"), "buttonDescription divergente.");[m
[31m-                    Assert.That(response.Data[0].price, Is.EqualTo(14.99), "price divergente.");[m
[31m-                    Assert.That(response.Data[0].benefits[0].description, Is.EqualTo("Ganhe um ingresso grÃ¡tis por ano."), "benefits divergente.");[m
[31m-                }[m
[31m-                test.Log(Status.Pass, "Teste ok, todas as verificaÃ§Ãµes foram realizadas com sucesso.");[m
[31m-[m
[31m-[m
[31m-            }[m
[31m-            catch (Exception e)[m
[31m-            {[m
[31m-                test.Log(Status.Fail, e.ToString());[m
[31m-                throw new Exception("Falha ao validar contrato: " + e.Message);[m
[31m-            }[m
[31m-[m
[31m-        }[m
[31m-[m
[31m-        [Test][m
[31m-[m
[31m-        public void ValidaExibeMenusNlp()[m
[31m-        {[m
[31m-[m
[31m-            string email = "massanlp@mailinator.com";[m
[31m-            string authorizationToken = utils.Utils.getAuthorization(email, "112233");[m
[31m-[m
[31m-[m
[31m-            ExtentTest test = null;[m
[31m-            test = extent.CreateTest("ValidaConsultaSaldoCliente").Info("InÃ­cio do teste.");[m
[31m-[m
[31m-            try[m
[31m-            {[m
[31m-                //Criando e enviando requisiÃ§Ã£o[m
[31m-                test.Log(Status.Info, "Criando requisiÃ§Ã£o responsÃ¡vel por realizar login.");[m
[31m-                var client = new RestClient(ConfigurationManager.AppSettings["dnsSensedia"]);[m
[31m-                var request = new RestRequest("/loyalty/v1/balance", Method.GET);[m
[31m-                request.RequestFormat = DataFormat.Json;[m
[31m-[m
[31m-                test.Log(Status.Info, "Setando headers necessÃ¡rios para realizar a requisiÃ§Ã£o.");[m
[31m-                utils.Utils.setCisToken(request);[m
[31m-                utils.Utils.setAuthorizationToken(request, authorizationToken);[m
[31m-[m
[31m-                test.Log(Status.Info, "Enviando requisiÃ§Ã£o.");[m
[31m-                var response = client.Execute<List<ModelLoyalty>>(request);[m
[31m-                string responseContent = response.Content.ToString();[m
[31m-[m
[31m-[m
[31m-                //InÃ­cio das validaÃ§Ãµes[m
[31m-                test.Log(Status.Info, "Validando se o Status Code de retorno da requisiÃ§Ã£o Ã© 200.");[m
[31m-                Assert.That((int)response.StatusCode, Is.EqualTo(200), "Status Code divergente.");[m
[31m-[m
[31m-                Assert.That(response.Data[0].category, Is.EqualTo("FÃ£ de carteirinha"), "category divergente.");[m
[31m-                Assert.That(response.Data[0].balance, Is.EqualTo(322.0), "category divergente.");[m
[31m-                Assert.That(response.Data[0].expired, Is.EqualTo("False"), "expired divergente.");[m
[31m-                Assert.That(response.Data[0].menus[0].title, Is.EqualTo("Extrato"), "title divergente.");[m
[31m-[m
[31m-                Assert.That(response.Data[0].menus[1].title, Is.EqualTo("Resgatar PrÃªmios"), "title divergente.");[m
[31m-                Assert.That(response.Data[0].menus[2].title, Is.EqualTo("Meus Resgates"), "title divergente.");[m
[31m-                Assert.That(response.Data[0].menus[3].title, Is.EqualTo("Atendimento"), "title divergente.");[m
[31m-[m
[31m-[m
[31m-                test.Log(Status.Info, "Verifica se existe a tag link no serviÃ§o.");[m
[31m-                Assert.That(responseContent.Contains("link"), "NÃ£o existe a tag link neste serviÃ§o.");[m
[31m-                test.Log(Status.Info, "Tag validada com sucesso.");[m
[31m-[m
[31m-            }[m
[31m-            catch (Exception e)[m
[31m-            {[m
[31m-                test.Log(Status.Fail, e.ToString());[m
[31m-                throw new Exception("Falha ao validar contrato: " + e.Message);[m
[31m-            }[m
[31m-[m
[31m-        }[m
[31m-[m
[31m-        [Test][m
[31m-[m
[31m-        public void ValidaConsultaSaldoClienteInexistente()[m
[31m-        {[m
[31m-[m
[31m-            string email = "automaticusers@mailinator.com";[m
[31m-            string authorizationToken = utils.Utils.getAuthorization(email, "112233");[m
[31m-[m
[31m-[m
[31m-            ExtentTest test = null;[m
[31m-            test = extent.CreateTest("ValidaExibeMenusNlp").Info("InÃ­cio do teste.");[m
[31m-[m
[31m-            try[m
[31m-            {[m
[31m-                //Criando e enviando requisiÃ§Ã£o[m
[31m-                test.Log(Status.Info, "Criando requisiÃ§Ã£o responsÃ¡vel por realizar login.");[m
[31m-                var client = new RestClient(ConfigurationManager.AppSettings["dnsSensedia"]);[m
[31m-                var request = new RestRequest("/loyalty/v1/balance", Method.GET);[m
[31m-                request.RequestFormat = DataFormat.Json;[m
[31m-[m
[31m-                test.Log(Status.Info, "Setando headers necessÃ¡rios para realizar a requisiÃ§Ã£o.");[m
[31m-                utils.Utils.setCisToken(request);[m
[31m-[m
[31m-[m
[31m-                test.Log(Status.Info, "Enviando requisiÃ§Ã£o.");[m
[31m-                var response = client.Execute<ModelLoyalty>(request);[m
[31m-[m
[31m-[m
[31m-                //InÃ­cio das validaÃ§Ãµes[m
[31m-                test.Log(Status.Info, "Validando se o Status Code de retorno da requisiÃ§Ã£o Ã© 401.");[m
[31m-                Assert.That((int)response.StatusCode, Is.EqualTo(401), "Status Code divergente.");[m
[31m-[m
[31m-                test.Log(Status.Info, "AutorizaÃ§Ã£o invÃ¡lida validada com sucesso.");[m
[31m-[m
[31m-[m
[31m-[m
[31m-            }[m
[31m-            catch (Exception e)[m
[31m-            {[m
[31m-                test.Log(Status.Fail, e.ToString());[m
[31m-                throw new Exception("Falha ao validar contrato: " + e.Message);[m
[31m-            }[m
[31m-[m
[31m-        }[m
[31m-[m
[31m-        [Test][m
[31m-[m
[31m-        public void ValidaConsultaSaldoCliente()[m
[31m-        {[m
[31m-[m
[31m-            string email = "massanlp@mailinator.com";[m
[31m-            string authorizationToken = utils.Utils.getAuthorization(email, "112233");[m
[31m-[m
[31m-[m
[31m-            ExtentTest test = null;[m
[31m-            test = extent.CreateTest("ValidaConsultaSaldoCliente").Info("InÃ­cio do teste.");[m
[31m-[m
[31m-            try[m
[31m-            {[m
[31m-                //Criando e enviando requisiÃ§Ã£o[m
[31m-                test.Log(Status.Info, "Criando requisiÃ§Ã£o responsÃ¡vel por realizar login.");[m
[31m-                var client = new RestClient(ConfigurationManager.AppSettings["dnsSensedia"]);[m
[31m-                var request = new RestRequest("/loyalty/v1/balance", Method.GET);[m
[31m-                request.RequestFormat = DataFormat.Json;[m
[31m-[m
[31m-                test.Log(Status.Info, "Setando headers necessÃ¡rios para realizar a requisiÃ§Ã£o.");[m
[31m-                utils.Utils.setCisToken(request);[m
[31m-                utils.Utils.setAuthorizationToken(request, authorizationToken);[m
[31m-[m
[31m-                test.Log(Status.Info, "Enviando requisiÃ§Ã£o.");[m
[31m-                var response = client.Execute<List<ModelLoyalty>>(request);[m
[31m-                string responseContent = response.Content.ToString();[m
[31m-[m
[31m-[m
[31m-                //InÃ­cio das validaÃ§Ãµes[m
[31m-                test.Log(Status.Info, "Validando se o Status Code de retorno da requisiÃ§Ã£o Ã© 200.");[m
[31m-                Assert.That((int)response.StatusCode, Is.EqualTo(200), "Status Code divergente.");[m
[31m-[m
[31m-                Assert.That(response.Data[0].category, Is.EqualTo("FÃ£ de carteirinha"), "category divergente.");[m
[31m-                Assert.That(response.Data[0].balance, Is.EqualTo(322.0), "category divergente.");[m
[31m-                Assert.That(response.Data[0].expired, Is.EqualTo("False"), "expired divergente.");[m
[31m-                Assert.That(response.Data[0].menus[0].title, Is.EqualTo("Extrato"), "title divergente.");[m
[31m-[m
[31m-                Assert.That(response.Data[0].menus[1].title, Is.EqualTo("Resgatar PrÃªmios"), "title divergente.");[m
[31m-                Assert.That(response.Data[0].menus[2].title, Is.EqualTo("Meus Resgates"), "title divergente.");[m
[31m-                Assert.That(response.Data[0].menus[3].title, Is.EqualTo("Atendimento"), "title divergente.");[m
[31m-[m
[31m-[m
[31m-                test.Log(Status.Info, "Verifica se existe a tag link no serviÃ§o.");[m
[31m-                Assert.That(responseContent.Contains("link"), "NÃ£o existe a tag link neste serviÃ§o.");[m
[31m-                test.Log(Status.Info, "Tag validada com sucesso.");[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[31m-            }[m
[31m-            catch (Exception e)[m
[31m-            {[m
[31m-                test.Log(Status.Fail, e.ToString());[m
[31m-                throw new Exception("Falha ao validar contrato: " + e.Message);[m
[31m-            }[m
[31m-[m
[31m-        }[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
 [m
     }[m
 }[m
[1mdiff --git a/EcommerceBackend/tests/Marketing.cs b/EcommerceBackend/tests/Marketing.cs[m
[1mdeleted file mode 100644[m
[1mindex e222a57..0000000[m
[1m--- a/EcommerceBackend/tests/Marketing.cs[m
[1m+++ /dev/null[m
[36m@@ -1,75 +0,0 @@[m
[31m-ï»¿using System.Configuration;[m
[31m-using System;[m
[31m-using NUnit.Framework;[m
[31m-using RestSharp;[m
[31m-using AventStack.ExtentReports;[m
[31m-using AventStack.ExtentReports.Reporter;[m
[31m-using AventStack.ExtentReports.Reporter.Configuration;[m
[31m-using EcommerceBackend.utils;[m
[31m-[m
[31m-namespace EcommerceBackend[m
[31m-{[m
[31m-    [TestFixture][m
[31m-    public class Marketing[m
[31m-    {[m
[31m-[m
[31m-        ExtentReports extent = null;[m
[31m-[m
[31m-        [OneTimeSetUp][m
[31m-        public void StartReport()[m
[31m-        {[m
[31m-            extent = new ExtentReports();[m
[31m-            var htmlReporter = new ExtentHtmlReporter(@"C:\AutomationTools\EcommerceBackendReports\Reports\Marketing\");[m
[31m-            extent.AttachReporter(htmlReporter);[m
[31m-        }[m
[31m-[m
[31m-        [OneTimeTearDown][m
[31m-        public void CloseReport()[m
[31m-        {          [m
[31m-            extent.Flush();[m
[31m-        }[m
[31m-[m
[31m-        [Test][m
[31m-        public void ValidaConsultaPromocoes()[m
[31m-        {[m
[31m-              ExtentTest test = null;[m
[31m-            test = extent.CreateTest("ValidaConsultaPromocoes").Info("InÃ­cio do teste.");[m
[31m-[m
[31m-            try[m
[31m-            {[m
[31m-[m
[31m-                //Criando e enviando requisiÃ§Ã£o[m
[31m-                test.Log(Status.Info, "Criando requisiÃ§Ã£o");[m
[31m-                var client = new RestClient(ConfigurationManager.AppSettings["dnsSensedia"]);[m
[31m-                var request = new RestRequest("bus/v1/marketing/offers",  Method.GET);[m
[31m-                utils.Utils.setCisToken(request);[m
[31m-                test.Log(Status.Info, "Setando headers necessÃ¡rios para realizar a requisiÃ§Ã£o");[m
[31m-                var response = client.Execute(request);[m
[31m-[m
[31m-                // Valida se Existe o campo de mensagem[m
[31m-                test.Log(Status.Info, "Valida a mensagem de limpeza da lixeira");[m
[31m-                string responseContent = response.Content.ToString();[m
[31m-[m
[31m-                // Sem promoÃ§Ãµes no momento no app - quando ter promoÃ§Ãµes descomentar a validaÃ§Ã£o de contrato[m
[31m-                string[] properties = new string[] { "\"OfferId\":", "\"Code\":", "\"Title\":", "\"Text\":", "\"RedirectUrl\":", "\"ImageUrl\":", "\"StartDate\":", "\"EndDate\":"[m
[31m-                , "\"OfferType\":", "\"TwitterDescription\":", "\"FacebookDescription\":", "\"MobileImageUrl\":", "\"MobileText\":", "\"TabletImageUrl\":"[m
[31m-                , "\"Theaters\":", "\"TheaterCode\":", "\"Name\":", "\"Latitude\":", "\"Longitude\":", "\"Address1\":"[m
[31m-                , "\"Address2\":", "\"PriceTableHTML\":", "\"Status\":", "\"Auditoriums\":", "\"Notice\":", "\"InvoiceEnabled\":", "\"SnackbarEnabled\":"[m
[31m-                , "\"IngressoSiteCode\":", "\"SnackbarPOSCode\":", "\"CNPJ\":", "\"ZipCode\":", "\"EconomicGroupId\":"};[m
[31m-[m
[31m-                //InÃ­cio das validaÃ§Ãµes[m
[31m-                test.Log(Status.Info, "Validando se o Status Code de retorno da requisiÃ§Ã£o Ã© 200.");[m
[31m-                Assert.That((int)response.StatusCode, Is.EqualTo(200), "Status Code divergente.");[m
[31m-                //Utils.validaContrato(properties, responseContent, test);[m
[31m-                test.Log(Status.Info, "Finalizado todas as etapas.");[m
[31m-[m
[31m-            }[m
[31m-            catch (Exception e)[m
[31m-            {[m
[31m-                test.Log(Status.Fail, e.ToString());[m
[31m-                throw new Exception("Falha ao validar limpeza de cache: " + e.Message);[m
[31m-            }[m
[31m-        }[m
[31m-[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/EcommerceBackend/tests/Order.cs b/EcommerceBackend/tests/Order.cs[m
[1mdeleted file mode 100644[m
[1mindex e12b35b..0000000[m
[1m--- a/EcommerceBackend/tests/Order.cs[m
[1m+++ /dev/null[m
[36m@@ -1,334 +0,0 @@[m
[31m-ï»¿using System.Configuration;[m
[31m-using System;[m
[31m-using NUnit.Framework;[m
[31m-using RestSharp;[m
[31m-using AventStack.ExtentReports;[m
[31m-using AventStack.ExtentReports.Reporter;[m
[31m-using DemoRestSharp.models.Order;[m
[31m-using System.Collections.Generic;[m
[31m-using EcommerceBackend.utils;[m
[31m-using Newtonsoft.Json;[m
[31m-using System.Reflection;[m
[31m-using EcommerceBackend.models.Order;[m
[31m-using Newtonsoft.Json.Linq;[m
[31m-[m
[31m-namespace EcommerceBackend[m
[31m-[m
[31m-[m
[31m-{[m
[31m-    [TestFixture][m
[31m-    public class Order[m
[31m-    {[m
[31m-[m
[31m-        ExtentReports extent = null;[m
[31m-[m
[31m-        [OneTimeSetUp][m
[31m-        public void StartReport()[m
[31m-        {[m
[31m-            extent = new ExtentReports();[m
[31m-            var htmlReporter = new ExtentHtmlReporter(@"C:\AutomationTools\EcommerceBackendReports\Reports\Order\");[m
[31m-            extent.AttachReporter(htmlReporter);[m
[31m-[m
[31m-        }[m
[31m-[m
[31m-        [OneTimeTearDown][m
[31m-        public void CloseReport()[m
[31m-        {[m
[31m-            extent.Flush();[m
[31m-        }[m
[31m-[m
[31m-        [Test][m
[31m-        public void ValidaConsultaListaPedidos()[m
[31m-        {[m
[31m-            ExtentTest test = null;[m
[31m-            test = extent.CreateTest("ValidaConsultaListaPedidos").Info("InÃ­cio do teste.");[m
[31m-[m
[31m-            try[m
[31m-            {[m
[31m-       [m
[31m-                string authorizationToken = utils.Utils.getAuthorization("listadepedidos@mailinator.com", "112233");[m
[31m-[m
[31m-                //Criando e enviando requisiÃ§Ã£o[m
[31m-                test.Log(Status.Info, "Criando requisiÃ§Ã£o responsÃ¡vel por realizar login.");[m
[31m-                var client = new RestClient(ConfigurationManager.AppSettings["dnsSensedia"]);[m
[31m-                var request = new RestRequest("order/v1/list", Method.GET);[m
[31m-                request.RequestFormat = DataFormat.Json;[m
[31m-                utils.Utils.setCisToken(request);[m
[31m-                test.Log(Status.Info, "Setando headers necessÃ¡rios para realizar a requisiÃ§Ã£o.");[m
[31m-                utils.Utils.setAuthorizationToken(request, authorizationToken);[m
[31m-[m
[31m-                var response = client.Execute<List<ModelOrder>>(request);[m
[31m-[m
[31m-                string[] properties = new string[] { "\"id\":", "\"externalId\":", "\"status\":", "\"orderDate\":",[m
[31m-                "\"expirationDate\":", "\"theaterId\":", "\"movieId\":", "\"movieId\":", "\"account\":", "\"userId\":", "\"applicationUserId\":",[m
[31m-                "\"identification\":", "\"email\":", "\"name\":", "\"phone\":", "\"type\":", "\"ticketCode\":",[m
[31m-                "\"tickets\":", "\"products\":", "\"name\":", "\"unitPrice\":", "\"status\":", "\"integrationCode\":", "\"integrationTracking\":", "\"total\":"[m
[31m-                , "\"order\":", "\"localizationType\":", "\"rating\":", "\"sessionType\":"};[m
[31m-[m
[31m-                string responseContent = response.Content.ToString();[m
[31m-[m
[31m-[m
[31m-                //InÃ­cio das validaÃ§Ãµes[m
[31m-                test.Log(Status.Info, "Validando se o Status Code de retorno da requisiÃ§Ã£o Ã© 200.");[m
[31m-                Assert.That((int)response.StatusCode, Is.EqualTo(200), "Status Code divergente.");[m
[31m-[m
[31m-                test.Log(Status.Info, "Validando o contrato por inteiro.");[m
[31m-                Utils.validaContrato(properties, responseContent, test);[m
[31m-[m
[31m-                test.Log(Status.Info, "InÃ­cio da validaÃ§Ã£o de pedido.");[m
[31m-                //Assert.That(response.Data[1].id, Is.EqualTo("d612f383-fc26-4db4-8590-a9dd015c28a3"), "Status Code divergente.");[m
[31m-                //Assert.That(response.Data[1].externalId, Is.EqualTo(""), "Status Code divergente.");[m
[31m-                //Assert.That(response.Data[1].status, Is.EqualTo(0), "Status Code divergente.");[m
[31m-                //Assert.That(response.Data[1].orderDate, Is.EqualTo("2019-01-22T21:07:36.438+00:00"), "Status Code divergente.");[m
[31m-                //Assert.That(response.Data[1].expirationDate, Is.EqualTo("2019-01-29T21:07:36.438+00:00"), "Status Code divergente.");[m
[31m-                //Assert.That(response.Data[1].theaterId, Is.EqualTo("688"), "Status Code divergente.");[m
[31m-                //Assert.That(response.Data[1].products[0].name, Is.EqualTo("Pipoca Salgada Balde"), "Status Code divergente.");[m
[31m-                //Assert.That(response.Data[1].products[0].theaterName, Is.EqualTo("Market Place"), "Status Code divergente.");[m
[31m-                //Assert.That(response.Data[1].products[0].theaterAddress, Is.EqualTo("Av. Dr. Chucri Zaidan, 920 - Vila Cordeiro teste de quebra de linha e endereÃ§o grande 12345"), "Status Code divergente.");[m
[31m-                //Assert.That(response.Data[1].products[0].id, Is.EqualTo("535"), "Status Code divergente.");[m
[31m-                //Assert.That(response.Data[1].products[0].unitPrice, Is.EqualTo("26"), "Status Code divergente.");[m
[31m-                //Assert.That(response.Data[1].products[0].status, Is.EqualTo("EXPIRADO"), "Status Code divergente.");[m
[31m-                //Assert.That(response.Data[1].products[0].integrationCode, Is.EqualTo("884923"), "Status Code divergente.");[m
[31m-                //Assert.That(response.Data[1].products[0].integrationTracking, Is.EqualTo("949908801547"), "Status Code divergente.");[m
[31m-                //Assert.That(response.Data[1].total, Is.EqualTo("26"), "Status Code divergente.");[m
[31m-[m
[31m-                //test.Log(Status.Info, "InÃ­cio da validaÃ§Ã£o de pedido que contÃ©m SNACK + INGRESSO");[m
[31m-                //Assert.That(response.Data[2].id, Is.EqualTo("561ccceb-269d-4ad6-936e-a9dd015c64f1"), "Status Code divergente.");[m
[31m-                //Assert.That(response.Data[2].externalId, Is.EqualTo(""), "Status Code divergente.");[m
[31m-                //Assert.That(response.Data[2].status, Is.EqualTo(0), "Status Code divergente.");[m
[31m-                //Assert.That(response.Data[2].orderDate, Is.EqualTo("2019-01-22T19:08:27.899+00:00"), "Status Code divergente.");[m
[31m-                //Assert.That(response.Data[2].expirationDate, Is.EqualTo("2019-01-23T21:40:00.000+00:00"), "Status Code divergente.");[m
[31m-                //Assert.That(response.Data[2].theaterId, Is.EqualTo("688"), "Status Code divergente.");[m
[31m-                //Assert.That(response.Data[1].movieId, Is.EqualTo("0"), "Status Code divergente.");[m
[31m-                //Assert.That(response.Data[2].tickets[0].theaterId, Is.EqualTo(688), "Status Code divergente.");[m
[31m-                //Assert.That(response.Data[2].tickets[0].ticketCode, Is.EqualTo("Inteira"), "Status Code divergente.");[m
[31m-                //Assert.That(response.Data[2].tickets[0].seatCode, Is.EqualTo("299006"), "Status Code divergente.");[m
[31m-                //Assert.That(response.Data[2].tickets[0].seatName, Is.EqualTo("H 1"), "Status Code divergente.");[m
[31m-                //Assert.That(response.Data[2].tickets[0].quantity, Is.EqualTo("1"), "Status Code divergente.");[m
[31m-                //Assert.That(response.Data[2].tickets[0].seatType, Is.EqualTo("Normal"), "Status Code divergente.");[m
[31m-                //Assert.That(response.Data[2].tickets[0].seatCode, Is.EqualTo("299006"), "Status Code divergente.");[m
[31m-                //Assert.That(response.Data[2].tickets[0].theaterName, Is.EqualTo("Market Place"), "Status Code divergente.");[m
[31m-                //Assert.That(response.Data[2].tickets[0].movieName, Is.EqualTo("Os IncrÃ­veis 2"), "Status Code divergente.");[m
[31m-                //Assert.That(response.Data[2].tickets[0].sessionDateTime, Is.EqualTo("2019-01-22T21:40:00.000+00:00"), "Status Code divergente.");[m
[31m-                //Assert.That(response.Data[2].tickets[0].sessionDateTimeString, Is.EqualTo("22/01/19 19:40"), "Status Code divergente.");[m
[31m-                //Assert.That(response.Data[2].tickets[0].roomNumber, Is.EqualTo("4"), "Status Code divergente.");[m
[31m-                //Assert.That(response.Data[2].tickets[0].status, Is.EqualTo("EXPIRADO"), "Status Code divergente.");[m
[31m-                //Assert.That(response.Data[2].tickets[0].integrationCode, Is.EqualTo("D8C529D652"), "Status Code divergente.");[m
[31m-                //Assert.That(response.Data[2].tickets[0].unitPrice, Is.EqualTo(21), "Status Code divergente.");[m
[31m-                //Assert.That(response.Data[2].tickets[0].theaterAddress, Is.EqualTo("Av. Dr. Chucri Zaidan, 920 - Vila Cordeiro teste de quebra de linha e endereÃ§o grande 12345"), "Status Code divergente.");[m
[31m-                //Assert.That(response.Data[2].tickets[0].localizationType, Is.EqualTo("Dublado"), "Status Code divergente.");[m
[31m-                //Assert.That(response.Data[2].tickets[0].rating, Is.EqualTo("Livre"), "Status Code divergente.");[m
[31m-[m
[31m-                //Assert.That(response.Data[2].products[0].name, Is.EqualTo("Coca-Cola Zero Grande"), "Status Code divergente.");[m
[31m-                //Assert.That(response.Data[2].products[0].unitPrice, Is.EqualTo("16"), "Status Code divergente.");[m
[31m-                //Assert.That(response.Data[2].products[0].status, Is.EqualTo("EXPIRADO"), "Status Code divergente.");[m
[31m-                //Assert.That(response.Data[2].products[0].integrationCode, Is.EqualTo("884924"), "Status Code divergente.");[m
[31m-                //Assert.That(response.Data[2].products[0].integrationTracking, Is.EqualTo("999808801527"), "Status Code divergente.");[m
[31m-                //Assert.That(response.Data[2].products[0].theaterName, Is.EqualTo("Market Place"), "Status Code divergente.");[m
[31m-                //Assert.That(response.Data[2].total, Is.EqualTo("36.88"), "Status Code divergente.");[m
[31m-[m
[31m-                //Assert.That(response.Data[2].fee[0].price, Is.EqualTo(4), "Status Code divergente.");[m
[31m-[m
[31m-                //test.Log(Status.Info, "InÃ­cio da validaÃ§Ã£o de pedido que contÃ©m apenas INGRESSO.");[m
[31m-                //Assert.That(response.Data[3].id, Is.EqualTo("b8cd61eb-fcf7-4a1b-8077-a9dd015bf0da"), "Status Code divergente.");[m
[31m-                //Assert.That(response.Data[3].externalId, Is.EqualTo(""), "Status Code divergente.");[m
[31m-                //Assert.That(response.Data[3].status, Is.EqualTo(0), "Status Code divergente.");[m
[31m-                //Assert.That(response.Data[3].orderDate, Is.EqualTo("2019-01-22T19:06:48.833+00:00"), "Status Code divergente.");[m
[31m-                //Assert.That(response.Data[3].expirationDate, Is.EqualTo("2019-01-23T19:40:00.000+00:00"), "Status Code divergente.");[m
[31m-                //Assert.That(response.Data[3].theaterId, Is.EqualTo("688"), "Status Code divergente.");[m
[31m-                //Assert.That(response.Data[3].movieId, Is.EqualTo("22505"), "Status Code divergente.");[m
[31m-[m
[31m-                //Assert.That(response.Data[3].tickets[0].theaterName, Is.EqualTo("Market Place"), "Status Code divergente.");[m
[31m-                //Assert.That(response.Data[3].tickets[0].movieName, Is.EqualTo("Os IncrÃ­veis 2"), "Status Code divergente.");[m
[31m-                //Assert.That(response.Data[3].tickets[0].sessionDateTime, Is.EqualTo("2019-01-22T21:40:00.000+00:00"), "Status Code divergente.");[m
[31m-                //Assert.That(response.Data[3].tickets[0].sessionDateTimeString, Is.EqualTo("22/01/19 19:40"), "Status Code divergente.");[m
[31m-                //Assert.That(response.Data[3].tickets[0].roomNumber, Is.EqualTo("4"), "Status Code divergente.");[m
[31m-                //Assert.That(response.Data[3].tickets[0].status, Is.EqualTo("EXPIRADO"), "Status Code divergente.");[m
[31m-                //Assert.That(response.Data[3].tickets[0].integrationCode, Is.EqualTo("8CA02C1CA8"), "Status Code divergente.");[m
[31m-                //Assert.That(response.Data[3].tickets[0].unitPrice, Is.EqualTo(21), "Status Code divergente.");[m
[31m-                //Assert.That(response.Data[3].tickets[0].theaterAddress, Is.EqualTo("Av. Dr. Chucri Zaidan, 920 - Vila Cordeiro teste de quebra de linha e endereÃ§o grande 12345"), "Status Code divergente.");[m
[31m-                //Assert.That(response.Data[3].tickets[0].localizationType, Is.EqualTo("Dublado"), "Status Code divergente.");[m
[31m-                //Assert.That(response.Data[3].tickets[0].rating, Is.EqualTo("Livre"), "Status Code divergente.");[m
[31m-[m
[31m-                test.Log(Status.Info, "ValidaÃ§Ã£o realizada com sucesso de todos os campos e seus valores.");[m
[31m-[m
[31m-            }[m
[31m-            catch (Exception e)[m
[31m-            {[m
[31m-                test.Log(Status.Fail, e.ToString());[m
[31m-                throw new Exception("Falha ao validar dados do login do usuÃ¡rio: " + e.Message);[m
[31m-            }[m
[31m-[m
[31m-        }[m
[31m-[m
[31m-        [Test][m
[31m-        public void ValidaConsultaUltimoPedido()[m
[31m-        {[m
[31m-            ExtentTest test = null;[m
[31m-            test = extent.CreateTest("ValidaConsultaUltimoPedido").Info("InÃ­cio do teste.");[m
[31m-[m
[31m-            try[m
[31m-            {[m
[31m-                string authorizationToken = utils.Utils.getAuthorization("consultaultimopedido@mailinator.com", "112233");[m
[31m-[m
[31m-                //Criando e enviando requisiÃ§Ã£o[m
[31m-                test.Log(Status.Info, "Criando requisiÃ§Ã£o responsÃ¡vel por realizar login.");[m
[31m-                var client = new RestClient(ConfigurationManager.AppSettings["dnsSensedia"]);[m
[31m-                var request = new RestRequest("order/v1/lastorder", Method.GET);[m
[31m-                request.RequestFormat = DataFormat.Json;[m
[31m-                utils.Utils.setCisToken(request);[m
[31m-                test.Log(Status.Info, "Setando headers necessÃ¡rios para realizar a requisiÃ§Ã£o.");[m
[31m-                utils.Utils.setAuthorizationToken(request, authorizationToken);[m
[31m-[m
[31m-                var response = client.Execute<List<ModelOrderLast>>(request);[m
[31m-              [m
[31m-                //InÃ­cio das validaÃ§Ãµes[m
[31m-                test.Log(Status.Info, "Validando se o Status Code de retorno da requisiÃ§Ã£o Ã© 200.");[m
[31m-                Assert.That((int)response.StatusCode, Is.EqualTo(200), "Status Code divergente.");[m
[31m-[m
[31m-                if ((int)response.StatusCode == 200 && authorizationToken != null)[m
[31m-                {[m
[31m-                    //testes realizados de forma unitaria[m
[31m-                    test.Log(Status.Info, "InÃ­cio de validaÃ§Ãµes de propriedades e valores.");[m
[31m-                    Assert.That(response.Data[0].id, Is.EqualTo("26a33aed-a360-451b-8f6d-a9ff00fc1118"), "Status Code divergente.");[m
[31m-                    Assert.That(response.Data[0].account[0].userId, Is.EqualTo(5640490), "Status Code divergente.");[m
[31m-                    Assert.That(response.Data[0].account[0].email, Is.EqualTo("consultaultimopedido@mailinator.com"), "Status Code divergente.");[m
[31m-                    Assert.That(response.Data[0].account[0].name, Is.EqualTo("Consulta O Ultimo"), "Status Code divergente.");[m
[31m-[m
[31m-                    Assert.That(response.Data[0].products[0].name, Is.EqualTo("Combo Balde c/ Manteiga"), "Status Code divergente.");[m
[31m-                    Assert.That(response.Data[0].products[1].name, Is.EqualTo("Pipoca Caramelo Balde"), "Status Code divergente.");[m
[31m-                    Assert.That(response.Data[0].products[2].name, Is.EqualTo("Pipoca Caramelo Balde"), "Status Code divergente.");[m
[31m-                    Assert.That(response.Data[0].products[3].name, Is.EqualTo("Coca-Cola Grande"), "Status Code divergente.");[m
[31m-                    Assert.That(response.Data[0].products[4].name, Is.EqualTo("Batata Lays"), "Status Code divergente.");[m
[31m-                    Assert.That(response.Data[0].products[5].name, Is.EqualTo("Batata Lays"), "Status Code divergente.");[m
[31m-                    Assert.That(response.Data[0].products[6].name, Is.EqualTo("M&Ms 270g chocolate"), "Status Code divergente.");[m
[31m-                    Assert.That(response.Data[0].products[7].name, Is.EqualTo("M&Ms 270g chocolate"), "Status Code divergente.");[m
[31m-[m
[31m-                    test.Log(Status.Info, "TÃ©rmino de validaÃ§Ãµes de propriedades e valores.");[m
[31m-                }[m
[31m-                else if (response.Data[0].id == "" || response.Data[0].id == null)[m
[31m-                {[m
[31m-                    test.Log(Status.Fail, "UsuÃ¡rio inexistente.");[m
[31m-                }[m
[31m-           [m
[31m-            }[m
[31m-[m
[31m-            catch (Exception e)[m
[31m-            {[m
[31m-                test.Log(Status.Fail, e.ToString());[m
[31m-                throw new Exception("Falha ao validar dados do Ãºltimo pedido: " + e.Message);[m
[31m-            }[m
[31m-        }[m
[31m-[m
[31m-[m
[31m-[m
[31m-        [Test][m
[31m-        public void ValidaRealizaPedidoSnack()[m
[31m-        {[m
[31m-            ExtentTest test = null;[m
[31m-            test = extent.CreateTest("ValidaRealizaPedidoSnack").Info("InÃ­cio do teste.");[m
[31m-[m
[31m-            try[m
[31m-            {[m
[31m-[m
[31m-                string authorizationToken = utils.Utils.getAuthorization("alexandre.ksss@gmail.com", "batata@1010");[m
[31m-                //Criando e enviando requisiÃ§Ã£o[m
[31m-                test.Log(Status.Info, "Criando requisiÃ§Ã£o responsÃ¡vel por realizar login.");[m
[31m-                var client = new RestClient(ConfigurationManager.AppSettings["dnsSensedia"]);[m
[31m-                var request = new RestRequest("order/v2/startorder", Method.POST);[m
[31m-                request.RequestFormat = DataFormat.Json;[m
[31m-                utils.Utils.setCisToken(request);[m
[31m-                test.Log(Status.Info, "Setando headers necessÃ¡rios para realizar a requisiÃ§Ã£o.");[m
[31m-                utils.Utils.setAuthorizationToken(request, authorizationToken);[m
[31m-[m
[31m-                /*[m
[31m-                    enviando o payload / body atraves do arquivo.json de massa e retornando na variavel json o [m
[31m-                    conteudo do arquivo jÃ¡ de-serializado[m
[31m-      [m
[31m-                */[m
[31m-                string jsonFilePath = @"C:\AutomationTools\Massa\Order\ValidaRealizaPedidoSnack.json";[m
[31m-                string json = Utils.RetornaStringJson(jsonFilePath);[m
[31m-[m
[31m-                /*[m
[31m-                     No metodo AddParameter especificamos o content-type como "application/json"[m
[31m-                     Dessa forma nÃ£o precisamos usar o deserializer[m
[31m-                 */[m
[31m-                request.AddParameter("application /json", json , ParameterType.RequestBody);[m
[31m-                var response = client.Execute(request);[m
[31m-                test.Log(Status.Info, "Enviando requisiÃ§Ã£o.");[m
[31m-                Console.WriteLine(response);[m
[31m-                [m
[31m-          [m
[31m-                //InÃ­cio das validaÃ§Ãµes[m
[31m-                test.Log(Status.Info, "Validando se o Status Code de retorno da requisiÃ§Ã£o Ã© 200.");[m
[31m-                Assert.That((int)response.StatusCode, Is.EqualTo(200), "Status Code divergente.");[m
[31m-[m
[31m-            }[m
[31m-            catch (Exception e)[m
[31m-            {[m
[31m-                test.Log(Status.Fail, e.ToString());[m
[31m-                throw new Exception("Falha ao validar geracao do pedido: " + e.Message);[m
[31m-            }[m
[31m-        }[m
[31m-[m
[31m-        public void ValidaPreparoDoPedido()[m
[31m-        {[m
[31m-            ExtentTest test = null;[m
[31m-            test = extent.CreateTest("ValidaPreparoDoPedido").Info("InÃ­cio do teste.");[m
[31m-[m
[31m-            try[m
[31m-            {[m
[31m-[m
[31m-                string authorizationToken = utils.Utils.getAuthorization("alexandre.ksss@gmail.com", "batata@1010");[m
[31m-                //Criando e enviando requisiÃ§Ã£o[m
[31m-                test.Log(Status.Info, "Criando requisiÃ§Ã£o responsÃ¡vel por realizar login.");[m
[31m-                var client = new RestClient(ConfigurationManager.AppSettings["dnsSensedia"]);[m
[31m-                var request = new RestRequest("order/v2/startorder", Method.POST);[m
[31m-                request.RequestFormat = DataFormat.Json;[m
[31m-                utils.Utils.setCisToken(request);[m
[31m-                test.Log(Status.Info, "Setando headers necessÃ¡rios para realizar a requisiÃ§Ã£o.");[m
[31m-                utils.Utils.setAuthorizationToken(request, authorizationToken);[m
[31m-                string jsonFilePath = @"C:\AutomationTools\Massa\Order\ValidaRealizaPedidoSnack.json";[m
[31m-                string json = Utils.RetornaStringJson(jsonFilePath);[m
[31m-                request.AddParameter("application /json", json, ParameterType.RequestBody);[m
[31m-                IRestResponse response = client.Execute(request);[m
[31m-[m
[31m-                /* Guardando o id do response[m
[31m-                 * Ã necessario fazer o parse do response (string -> objeto)[m
[31m-                 */[m
[31m-                var idPedido = JObject.Parse(response.Content);[m
[31m-                var guid = idPedido.GetValue("id");[m
[31m-[m
[31m-                var client2 = new RestClient(ConfigurationManager.AppSettings["dnsSensedia"]);[m
[31m-                var request2 = new RestRequest("order/v1/prepare/"+guid, Method.POST);[m
[31m-                test.Log(Status.Info, "Enviando requisiÃ§Ã£o.");[m
[31m-[m
[31m-                Console.WriteLine(response);[m
[31m-[m
[31m-                //InÃ­cio das validaÃ§Ãµes[m
[31m-                test.Log(Status.Info, "Validando se o Status Code de retorno da requisiÃ§Ã£o Ã© 200.");[m
[31m-                Assert.That((int)response.StatusCode, Is.EqualTo(200), "Status Code divergente.");[m
[31m-[m
[31m-            }[m
[31m-            catch (Exception e)[m
[31m-            {[m
[31m-                test.Log(Status.Fail, e.ToString());[m
[31m-                throw new Exception("Falha ao validar geracao do pedido: " + e.Message);[m
[31m-            }[m
[31m-        }[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[31m-    }[m
[31m-    [m
[31m-[m
[31m-}[m
[1mdiff --git a/EcommerceBackend/tests/SeatMap.cs b/EcommerceBackend/tests/SeatMap.cs[m
[1mdeleted file mode 100644[m
[1mindex 565c9d8..0000000[m
[1m--- a/EcommerceBackend/tests/SeatMap.cs[m
[1m+++ /dev/null[m
[36m@@ -1,178 +0,0 @@[m
[31m-ï»¿using System.Configuration;[m
[31m-using System;[m
[31m-using NUnit.Framework;[m
[31m-// using EcommerceBackend.models.Loyalty;[m
[31m-using RestSharp;[m
[31m-using AventStack.ExtentReports;[m
[31m-using AventStack.ExtentReports.Reporter;[m
[31m-using AventStack.ExtentReports.Reporter.Configuration;[m
[31m-using EcommerceBackend.utils;[m
[31m-using EcommerceBackend.models;[m
[31m-using DemoRestSharp.models.SeatMap;[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[31m-namespace EcommerceBackend[m
[31m-{[m
[31m-    [TestFixture][m
[31m-    public class SeatMap[m
[31m-    {[m
[31m-        ExtentReports extent = null;[m
[31m-[m
[31m-        [OneTimeSetUp][m
[31m-        public void StartReport()[m
[31m-        {[m
[31m-            extent = new ExtentReports();[m
[31m-            var htmlReporter = new ExtentHtmlReporter(@"C:\AutomationTools\EcommerceBackendReports\Reports\SeatMap\");[m
[31m-            extent.AttachReporter(htmlReporter);[m
[31m-        }[m
[31m-[m
[31m-        [OneTimeTearDown][m
[31m-        public void CloseReport()[m
[31m-        {[m
[31m-            extent.Flush();[m
[31m-        }[m
[31m-[m
[31m-        [Test][m
[31m-        public void ValidaMapaSessaoDisponivel()[m
[31m-        {[m
[31m-            ExtentTest test = null;[m
[31m-            test = extent.CreateTest("ValidaMapaSessaoDisponivel").Info("InÃ­cio do teste.");[m
[31m-[m
[31m-            string Idtheater = "688";[m
[31m-            string Idsession = "5445B76F-E8B1-4C7D-BB8F-5CAAA13ADCCE";[m
[31m-[m
[31m-            //string Idtheater = "785";[m
[31m-            //string Idsession = "4B5E8F7F-2A16-4FE7-82C3-D993B9ACA3F7";[m
[31m-[m
[31m-[m
[31m-            try[m
[31m-            {[m
[31m-                //Criando e enviando requisiÃ§Ã£o[m
[31m-                //comentario[m
[31m-                test.Log(Status.Info, "Criando requisiÃ§Ã£o.");[m
[31m-                var client = new RestClient(ConfigurationManager.AppSettings["dnsSensedia"]);[m
[31m-                var request = new RestRequest("theater/v1/map/" + Idtheater + "/" + Idsession, Method.GET);[m
[31m-[m
[31m-                request.RequestFormat = DataFormat.Json;[m
[31m-                test.Log(Status.Info, "Setando headers necessÃ¡rios para realizar a requisiÃ§Ã£o.");[m
[31m-                Utils.setCisToken(request);[m
[31m-                test.Log(Status.Info, "Enviando requisiÃ§Ã£o.");[m
[31m-                var response = client.Execute(request);[m
[31m-[m
[31m-                string responseContent = response.Content.ToString();[m
[31m-                //Declarando as propriedades que deverÃ£o obrigatoriamente estar na resposta da requisiÃ§Ã£o[m
[31m-                string[] properties = new string[] { "\"Room\":", "\"Id\":", "\"Name\":", "\"Avail\":",[m
[31m-                "\"SectorCode\":", "\"Positions\":", "\"Row\":", "\"Col\":", "\"Code\":", "\"Name\":", "\"Status\":",[m
[31m-                "\"Type\":", "\"Subtype\":", "\"Realtype\":"};[m
[31m-[m
[31m-                if (responseContent != null)[m
[31m-                {[m
[31m-                    //InÃ­cio das validaÃ§Ãµes[m
[31m-                    test.Log(Status.Info, "Validando se o Status Code de retorno da requisiÃ§Ã£o Ã© 200.");[m
[31m-                    Assert.That((int)response.StatusCode, Is.EqualTo(200), "Status Code divergente.");[m
[31m-                    Utils.validaContrato(properties, responseContent, test);[m
[31m-                    test.Log(Status.Info, "Lista de assentos concluÃ­da - teste terminado.");[m
[31m-                    test.Log(Status.Pass, "Teste ok, todas as verificaÃ§Ãµes foram realizadas com sucesso.");[m
[31m-                }[m
[31m-[m
[31m-            }[m
[31m-            catch (Exception e)[m
[31m-            {[m
[31m-                test.Log(Status.Fail, e.ToString());[m
[31m-                throw new Exception("Falha ao validar contrato: " + e.Message);[m
[31m-            }[m
[31m-        }[m
[31m-[m
[31m-        [Test][m
[31m-        public void ValidaMapaSessaoInexistente()[m
[31m-        {[m
[31m-            ExtentTest test = null;[m
[31m-            test = extent.CreateTest("ValidaMapaSessaoInexistente").Info("InÃ­cio do teste.");[m
[31m-            string Idtheater = "688";[m
[31m-            string Idsession = "4B5E8F7F-2A16-4FE7-82C3-D993B9ACA3F7";[m
[31m-[m
[31m-            try[m
[31m-            {[m
[31m-                //Criando e enviando requisiÃ§Ã£o[m
[31m-                //comentario[m
[31m-                test.Log(Status.Info, "Criando requisiÃ§Ã£o.");[m
[31m-                var client = new RestClient(ConfigurationManager.AppSettings["dnsSensedia"]);[m
[31m-                var request = new RestRequest("theater/v1/map/" + Idtheater + Idsession, Method.GET);[m
[31m-[m
[31m-                request.RequestFormat = DataFormat.Json;[m
[31m-                test.Log(Status.Info, "Setando headers necessÃ¡rios para realizar a requisiÃ§Ã£o.");[m
[31m-                Utils.setCisToken(request);[m
[31m-                test.Log(Status.Info, "Enviando requisiÃ§Ã£o.");[m
[31m-                var response = client.Execute<ModelSeatMap>(request);[m
[31m-                string responseContent = response.Content.ToString();[m
[31m-                //Declarando as propriedades que deverÃ£o obrigatoriamente estar na resposta da requisiÃ§Ã£o[m
[31m-                string[] properties = new string[] { "\"Room\":", "\"Id\":", "\"Name\":", "\"Avail\":",[m
[31m-                "\"SectorCode\":", "\"Positions\":", "\"Row\":", "\"Col\":", "\"Code\":", "\"Name\":", "\"Status\":",[m
[31m-                "\"Type\":", "\"Subtype\":", "\"Realtype\":"};[m
[31m-[m
[31m-[m
[31m-                if (responseContent != null)[m
[31m-                {[m
[31m-                    //InÃ­cio das validaÃ§Ãµes[m
[31m-         [m
[31m-                    test.Log(Status.Info, "Validando se o Status Code de retorno da requisiÃ§Ã£o Ã© 200.");[m
[31m-                    Assert.That((int)response.StatusCode, Is.EqualTo(404), "Status Code divergente.");[m
[31m-                [m
[31m-                    //Utils.validaContrato(properties, responseContent, test);[m
[31m-[m
[31m-                    // SoluÃ§Ã£o temporÃ¡ria atÃ© resolver a melhoria de tratar a mensagem de sessÃ£o inexistente[m
[31m-                   // test.Log(Status.Info, "ForÃ§ando erro de id inexistente");[m
[31m-                   // Assert.That((int)response.Data.id, Is.EqualTo("33"), "Status Code divergente.");[m
[31m-                   // test.Log(Status.Pass, "Teste ok, todas as verificaÃ§Ãµes foram realizadas com sucesso.");[m
[31m-                }[m
[31m-[m
[31m-            }[m
[31m-            catch (Exception e)[m
[31m-            {[m
[31m-                test.Log(Status.Fail, e.ToString());[m
[31m-                throw new Exception("Falha ao validar contrato: " + e.Message);[m
[31m-            }[m
[31m-        }[m
[31m-[m
[31m-        [Test][m
[31m-        public void ValidaMapaSessaoInvalida()[m
[31m-        {[m
[31m-            ExtentTest test = null;[m
[31m-            test = extent.CreateTest("ValidaMapaSessaoInvalida").Info("InÃ­cio do teste.");[m
[31m-            string Idtheater = "785";[m
[31m-[m
[31m-            try[m
[31m-            {[m
[31m-                //Criando e enviando requisiÃ§Ã£o[m
[31m-                //comentario[m
[31m-                test.Log(Status.Info, "Criando requisiÃ§Ã£o.");[m
[31m-                var client = new RestClient(ConfigurationManager.AppSettings["dnsSensedia"]);[m
[31m-                var request = new RestRequest("theater/v1/map/" + Idtheater + "/4B5E8F74D993B9ACA3F7", Method.GET);[m
[31m-[m
[31m-                request.RequestFormat = DataFormat.Json;[m
[31m-                test.Log(Status.Info, "Setando headers necessÃ¡rios para realizar a requisiÃ§Ã£o.");[m
[31m-                Utils.setCisToken(request);[m
[31m-                test.Log(Status.Info, "Enviando requisiÃ§Ã£o.");[m
[31m-                var response = client.Execute<ModelSeatMap>(request);[m
[31m-[m
[31m-                //InÃ­cio das validaÃ§Ãµes[m
[31m-                test.Log(Status.Info, "Validando se o Status Code de retorno da requisiÃ§Ã£o Ã© 400.");[m
[31m-                Assert.That(response.Data.status, Is.EqualTo(400), "Status Code divergente.");[m
[31m-                [m
[31m- [m
[31m-                // "message": "Erro inesperado"[m
[31m-[m
[31m-                test.Log(Status.Pass, "Teste ok para o retorno 500, todas as verificaÃ§Ãµes foram realizadas com sucesso.");[m
[31m-[m
[31m-            }[m
[31m-            catch (Exception e)[m
[31m-            {[m
[31m-                test.Log(Status.Fail, e.ToString());[m
[31m-                throw new Exception("Falha ao validar contrato: ");[m
[31m-            }[m
[31m-        }[m
[31m-[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/EcommerceBackend/tests/SnackBar.cs b/EcommerceBackend/tests/SnackBar.cs[m
[1mdeleted file mode 100644[m
[1mindex 39d5e7d..0000000[m
[1m--- a/EcommerceBackend/tests/SnackBar.cs[m
[1m+++ /dev/null[m
[36m@@ -1,215 +0,0 @@[m
[31m-ï»¿using System.Configuration;[m
[31m-using System;[m
[31m-using NUnit.Framework;[m
[31m-using RestSharp;[m
[31m-using AventStack.ExtentReports;[m
[31m-using AventStack.ExtentReports.Reporter;[m
[31m-using AventStack.ExtentReports.Reporter.Configuration;[m
[31m-using EcommerceBackend.utils;[m
[31m-[m
[31m-namespace EcommerceBackend[m
[31m-{[m
[31m-    /*[m
[31m-        tipoMenu: 20 (prime) e 10 (normal)[m
[31m-        idCat: -1 todos os produtos de todas as categorias, 24-Combos, 23 - bebidas[m
[31m-        categoryType == idCat[m
[31m-        menuType == 10 ou 20[m
[31m-[m
[31m-     */[m
[31m-    [TestFixture][m
[31m-    public class SnackBar[m
[31m-    {[m
[31m-[m
[31m-        ExtentReports extent = null;[m
[31m-[m
[31m-        [OneTimeSetUp][m
[31m-        public void StartReport()[m
[31m-        {[m
[31m-            extent = new ExtentReports();[m
[31m-            var htmlReporter = new ExtentHtmlReporter(@"C:\AutomationTools\EcommerceBackendReports\Reports\SnackBar\");[m
[31m-            extent.AttachReporter(htmlReporter);[m
[31m-        }[m
[31m-[m
[31m-        [OneTimeTearDown][m
[31m-        public void CloseReport()[m
[31m-        {          [m
[31m-            extent.Flush();[m
[31m-        }[m
[31m-[m
[31m-        [Test][m
[31m-        public void ValidaContratoSnackPorCinema()[m
[31m-        {[m
[31m-            int idTheather = 688;[m
[31m-            ExtentTest test = null;[m
[31m-            test = extent.CreateTest("ValidaContratoSnackPorCinema").Info("InÃ­cio do teste.");[m
[31m-[m
[31m-            try[m
[31m-            {[m
[31m-[m
[31m-                //Criando e enviando requisiÃ§Ã£o[m
[31m-                test.Log(Status.Info, "Criando requisiÃ§Ã£o");[m
[31m-                var client = new RestClient(ConfigurationManager.AppSettings["dnsSensedia"]);[m
[31m-                var request = new RestRequest("bus/v1/snackbar/productcategories/theaters/" + idTheather, Method.GET);[m
[31m-                utils.Utils.setCisToken(request);[m
[31m-                test.Log(Status.Info, "Setando headers necessÃ¡rios para realizar a requisiÃ§Ã£o");[m
[31m-                var response = client.Execute(request);[m
[31m-[m
[31m-[m
[31m-                string responseContent = response.Content.ToString();[m
[31m-[m
[31m-                string[] properties = new string[] { "\"Id\":", "\"idCat\":", "\"txCat\":", "\"listaSugestoes\":", "\"visivel\":", "\"urlImagem\":", "\"Produtos\":", "\"idProduto\":"[m
[31m-                , "\"txProduto\":", "\"Descricao\":", "\"Preco\":", "\"TaxaConveniencia\":", "\"TipoTaxaConveniencia\":", "\"Combo\":"[m
[31m-                , "\"listaSugestoes\":", "\"idSugestao\":", "\"tipoSugestao\":", "\"urlBanner\":", "\"urlImagem\":", "\"Ordem\":", "\"Promocao\":", "\"idsCategoriasNaoSugerir\":", "\"IdParceria\":"};[m
[31m-[m
[31m-[m
[31m-                test.Log(Status.Info, "InÃ­cio de validaÃ§Ãµes da string properties.");[m
[31m-                for (int i = 0; i < properties.Length; i++)[m
[31m-                {[m
[31m-                    int qtdCampos = properties.Length;[m
[31m-                    string indiceZero = properties[0];[m
[31m-                    if (qtdCampos != 23)[m
[31m-                    {[m
[31m-                        test.Log(Status.Fail, "Contrato de validaÃ§Ã£o de snackbar incompleto!");[m
[31m-[m
[31m-                    }[m
[31m-                    else if(indiceZero != "\"Id\":")[m
[31m-                    {[m
[31m-                        test.Log(Status.Fail, "Contrato Inexistente");[m
[31m-                    }[m
[31m-[m
[31m-                }[m
[31m-                test.Log(Status.Info, "String properties validada com sucesso.");[m
[31m-[m
[31m-                //InÃ­cio das validaÃ§Ãµes[m
[31m-                test.Log(Status.Info, "Validando se o Status Code de retorno da requisiÃ§Ã£o Ã© 200.");[m
[31m-                Assert.That((int)response.StatusCode, Is.EqualTo(200), "Status Code divergente.");[m
[31m-                test.Log(Status.Info, "Valida Contrato de snack por cinema");[m
[31m-                Utils.validaContrato(properties, responseContent, test);[m
[31m-                test.Log(Status.Info, "Finalizado todas as etapas com sucesso.");[m
[31m-[m
[31m-            }[m
[31m-            catch (Exception e)[m
[31m-            {[m
[31m-                test.Log(Status.Fail, e.ToString());[m
[31m-                throw new Exception("Falha ao validar dados de SnackBar: " + e.Message);[m
[31m-            }[m
[31m-        }[m
[31m-[m
[31m-        [Test][m
[31m-        public void ValidaContratoBannerSnack()[m
[31m-        {[m
[31m-            ExtentTest test = null;[m
[31m-            test = extent.CreateTest("ValidaContratoBannerSnack").Info("InÃ­cio do teste.");[m
[31m-[m
[31m-            try[m
[31m-            {[m
[31m-[m
[31m-                //Criando e enviando requisiÃ§Ã£o[m
[31m-                test.Log(Status.Info, "Criando requisiÃ§Ã£o");[m
[31m-                var client = new RestClient(ConfigurationManager.AppSettings["dnsSensedia"]);[m
[31m-                var request = new RestRequest("bus/v1/snackbar/banners", Method.GET);[m
[31m-                utils.Utils.setCisToken(request);[m
[31m-                test.Log(Status.Info, "Setando headers necessÃ¡rios para realizar a requisiÃ§Ã£o");[m
[31m-                var response = client.Execute(request);[m
[31m-[m
[31m-[m
[31m-                string responseContent = response.Content.ToString();[m
[31m-[m
[31m-                string[] properties = new string[] { "\"ImageUrl\":", "\"CategoryId\":", "\"ProductId\":"};[m
[31m-[m
[31m-[m
[31m-                test.Log(Status.Info, "InÃ­cio de validaÃ§Ãµes da string properties.");[m
[31m-                for (int i = 0; i < properties.Length; i++)[m
[31m-                {[m
[31m-                    int qtdCampos = properties.Length;[m
[31m-                    string indiceZero = properties[0];[m
[31m-                    if (qtdCampos != 3)[m
[31m-                    {[m
[31m-                        test.Log(Status.Fail, "Contrato de validaÃ§Ã£o de snackbar incompleto!");[m
[31m-[m
[31m-                    }[m
[31m-                    else if (indiceZero != "\"ImageUrl\":")[m
[31m-                    {[m
[31m-                        test.Log(Status.Fail, "Contrato Inexistente");[m
[31m-                    }[m
[31m-[m
[31m-                }[m
[31m-                test.Log(Status.Info, "String properties validada com sucesso.");[m
[31m-[m
[31m-                //InÃ­cio das validaÃ§Ãµes[m
[31m-                test.Log(Status.Info, "Validando se o Status Code de retorno da requisiÃ§Ã£o Ã© 200.");[m
[31m-                Assert.That((int)response.StatusCode, Is.EqualTo(200), "Status Code divergente.");[m
[31m-                test.Log(Status.Info, "Valida Contrato de snack por banners");[m
[31m-                Utils.validaContrato(properties, responseContent, test);[m
[31m-                test.Log(Status.Info, "Finalizado todas as etapas com sucesso.");[m
[31m-[m
[31m-            }[m
[31m-            catch (Exception e)[m
[31m-            {[m
[31m-                test.Log(Status.Fail, e.ToString());[m
[31m-                throw new Exception("Falha ao validar dados de SnackBar de Banners: " + e.Message);[m
[31m-            }[m
[31m-        }[m
[31m-[m
[31m-        [Test][m
[31m-        public void ValidaContratoSnackPrime()[m
[31m-        {[m
[31m-            ExtentTest test = null;[m
[31m-            test = extent.CreateTest("ValidaContratoSnackPrime").Info("InÃ­cio do teste.");[m
[31m-[m
[31m-            try[m
[31m-            {[m
[31m-[m
[31m-                //Criando e enviando requisiÃ§Ã£o[m
[31m-                test.Log(Status.Info, "Criando requisiÃ§Ã£o");[m
[31m-                var client = new RestClient(ConfigurationManager.AppSettings["dnsSensedia"]);[m
[31m-                var request = new RestRequest("bus/v2/snackbar/productcategories/theaters/785/20", Method.GET);[m
[31m-                utils.Utils.setCisToken(request);[m
[31m-                test.Log(Status.Info, "Setando headers necessÃ¡rios para realizar a requisiÃ§Ã£o");[m
[31m-                var response = client.Execute(request);[m
[31m-[m
[31m-[m
[31m-                string responseContent = response.Content.ToString();[m
[31m-[m
[31m-                string[] properties = new string[] { "\"Id\":", "\"idCat\":", "\"txCat\":", "\"listaSugestoes\":", "\"visivel\":"[m
[31m-                , "\"urlImagem\":", "\"Produtos\":", "\"SubCategories\":", "\"Name\":", "\"Description\":", "\"ImageURL\":"[m
[31m-                , "\"idProduto\":", "\"txProduto\":", "\"Descricao\":", "\"Preco\":", "\"TaxaConveniencia\":", "\"TipoTaxaConveniencia\":"[m
[31m-                , "\"Combo\":", "\"listaSugestoes\":", "\"idsCategoriasNaoSugerir\":", "\"IdParceria\":", "\"QtdPermitida\":", "\"listaSugestoesCombo\":"[m
[31m-                , "\"TipoMenu\":", "\"dtInicioResgate\":", "\"dtFimResgate\":"};[m
[31m-[m
[31m-[m
[31m-                test.Log(Status.Info, "InÃ­cio de validaÃ§Ãµes da string properties.");[m
[31m-                for (int i = 0; i < properties.Length; i++)[m
[31m-                {[m
[31m-                    int qtdCampos = properties.Length;[m
[31m-                    string indiceZero = properties[0];[m
[31m-                    if (qtdCampos != 26)[m
[31m-                    {[m
[31m-                        test.Log(Status.Fail, "Contrato de validaÃ§Ã£o de snackbar incompleto!");[m
[31m-[m
[31m-                    }[m
[31m-                    else if (indiceZero != "\"Id\":")[m
[31m-                    {[m
[31m-                        test.Log(Status.Fail, "Contrato Inexistente");[m
[31m-                    }[m
[31m-[m
[31m-                }[m
[31m-                test.Log(Status.Info, "String properties validada com sucesso.");[m
[31m-[m
[31m-                //InÃ­cio das validaÃ§Ãµes[m
[31m-                test.Log(Status.Info, "Validando se o Status Code de retorno da requisiÃ§Ã£o Ã© 200.");[m
[31m-                Assert.That((int)response.StatusCode, Is.EqualTo(200), "Status Code divergente.");[m
[31m-                test.Log(Status.Info, "Valida Contrato de snack por banners");[m
[31m-                Utils.validaContrato(properties, responseContent, test);[m
[31m-                test.Log(Status.Info, "Finalizado todas as etapas com sucesso.");[m
[31m-[m
[31m-            }[m
[31m-            catch (Exception e)[m
[31m-            {[m
[31m-                test.Log(Status.Fail, e.ToString());[m
[31m-                throw new Exception("Falha ao validar dados de SnackBar de SnackPrime: " + e.Message);[m
[31m-            }[m
[31m-        }[m
[31m-[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/EcommerceBackend/tests/Social.cs b/EcommerceBackend/tests/Social.cs[m
[1mindex c3de644..27965f0 100644[m
[1m--- a/EcommerceBackend/tests/Social.cs[m
[1m+++ b/EcommerceBackend/tests/Social.cs[m
[36m@@ -5,7 +5,7 @@[m [musing System.IO;[m
 using System.Linq;[m
 using System.Text;[m
 using System.Threading.Tasks;[m
[31m-// using EcommerceBackend.models.Loyalty;[m
[32m+[m[32musing EcommerceBackend.models.Loyalty;[m
 using NUnit.Framework;[m
 using NUnit.Framework.Interfaces;[m
 using RestSharp;[m
[36m@@ -25,7 +25,7 @@[m [mnamespace EcommerceBackend[m
         public void StartReport()[m
         {[m
             extent = new ExtentReports();[m
[31m-            var htmlReporter = new ExtentHtmlReporter(@"C:\AutomationTools\EcommerceBackendReports\Reports\Social\");[m
[32m+[m[32m            var htmlReporter = new ExtentHtmlReporter(@"C:\EcommerceBackendReports\Reports\Social\");[m
             extent.AttachReporter(htmlReporter);[m
         }[m
 [m
[1mdiff --git a/EcommerceBackend/tests/StartOrder.cs b/EcommerceBackend/tests/StartOrder.cs[m
[1mdeleted file mode 100644[m
[1mindex be0ec35..0000000[m
[1m--- a/EcommerceBackend/tests/StartOrder.cs[m
[1m+++ /dev/null[m
[36m@@ -1,91 +0,0 @@[m
[31m-ï»¿//using System.Configuration;[m
[31m-//using System;[m
[31m-//using NUnit.Framework;[m
[31m-//using RestSharp;[m
[31m-//using AventStack.ExtentReports;[m
[31m-//using AventStack.ExtentReports.Reporter;[m
[31m-//using DemoRestSharp.models.Order;[m
[31m-//using System.Collections.Generic;[m
[31m-//using EcommerceBackend.utils;[m
[31m-//using Newtonsoft.Json;[m
[31m-//using System.Reflection;[m
[31m-//using Dynamitey.DynamicObjects;[m
[31m-[m
[31m-[m
[31m-//    public class StartOrder[m
[31m-//{[m
[31m-//    public string Email { get; set }[m
[31m-//    public string Identification { get; set; }[m
[31m-//    public int MyProperty { get; set; }[m
[31m-[m
[31m-//}[m
[31m-[m
[31m-[m
[31m-[m
[31m-//{   [m
[31m-//    [TestFixture][m
[31m-//public class StartOrder[m
[31m-//{[m
[31m-//    ExtentReports extent = null;[m
[31m-[m
[31m-//    [OneTimeSetUp][m
[31m-//    public void StartReport()[m
[31m-//    {[m
[31m-//        extent = new ExtentReports();[m
[31m-//        var htmlReporter = new ExtentHtmlReporter(@"C:\AutomationTools\EcommerceBackendReports\Reports\StartOrder\");[m
[31m-//        extent.AttachReporter(htmlReporter);[m
[31m-[m
[31m-//    }[m
[31m-[m
[31m-//    [OneTimeTearDown][m
[31m-//    public void CloseReport()[m
[31m-//    {[m
[31m-//        extent.Flush();[m
[31m-//    }[m
[31m-[m
[31m-//    [Test][m
[31m-//    public void ValidaRealizaPedidoSnack()[m
[31m-//    {[m
[31m-//        ExtentTest test = null;[m
[31m-//        test = extent.CreateTest("ValidaRealizaPedidoSnack").Info("InÃ­cio do teste.");[m
[31m-[m
[31m-[m
[31m-[m
[31m-//        try[m
[31m-//        {[m
[31m-[m
[31m-//            string authorizationToken = utils.Utils.getAuthorization("listadepedidos@mailinator.com", "112233");[m
[31m-[m
[31m-//            //Criando e enviando requisiÃ§Ã£o[m
[31m-//            test.Log(Status.Info, "Criando requisiÃ§Ã£o responsÃ¡vel por realizar login.");[m
[31m-//            var client = new RestClient(ConfigurationManager.AppSettings["dnsSensedia"]);[m
[31m-//            var request = new RestRequest("order/v2/startorder", Method.POST);[m
[31m-//            request.RequestFormat = DataFormat.Json;[m
[31m-//            utils.Utils.setCisToken(request);[m
[31m-//            test.Log(Status.Info, "Setando headers necessÃ¡rios para realizar a requisiÃ§Ã£o.");[m
[31m-//            utils.Utils.setAuthorizationToken(request, authorizationToken);[m
[31m-[m
[31m-//            request.AddJsonBody(body);[m
[31m-//            request.AddParameter("application/json", body, ParameterType.RequestBody);[m
[31m-[m
[31m-[m
[31m-[m
[31m-//            }[m
[31m-//        catch (Exception e)[m
[31m-//        {[m
[31m-//            test.Log(Status.Fail, e.ToString());[m
[31m-//            throw new Exception("Falha ao validar dados de consulta de ingresso: " + e.Message);[m
[31m-//        }[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[31m-//    }[m
[31m-[m
[31m-[m
[31m-//}[m
[31m-[m
[1mdiff --git a/EcommerceBackend/tests/SuperSaver.cs b/EcommerceBackend/tests/SuperSaver.cs[m
[1mdeleted file mode 100644[m
[1mindex 8372ecf..0000000[m
[1m--- a/EcommerceBackend/tests/SuperSaver.cs[m
[1m+++ /dev/null[m
[36m@@ -1,101 +0,0 @@[m
[31m-ï»¿using System.Configuration;[m
[31m-using System;[m
[31m-using NUnit.Framework;[m
[31m-using RestSharp;[m
[31m-using AventStack.ExtentReports;[m
[31m-using AventStack.ExtentReports.Reporter;[m
[31m-using AventStack.ExtentReports.Reporter.Configuration;[m
[31m-using EcommerceBackend.models.SuperSaver;[m
[31m-using System.Collections.Generic;[m
[31m-using Newtonsoft.Json;[m
[31m-using Newtonsoft.Json.Linq;[m
[31m-using EcommerceBackend.utils;[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[31m-namespace EcommerceBackend[m
[31m-{[m
[31m-    [TestFixture][m
[31m-    public class SuperSaver[m
[31m-    {[m
[31m-        ExtentReports extent = null;[m
[31m-[m
[31m-        [OneTimeSetUp][m
[31m-        public void StartReport()[m
[31m-        {[m
[31m-            extent = new ExtentReports();[m
[31m-            var htmlReporter = new ExtentHtmlReporter(@"C:\AutomationTools\EcommerceBackendReports\Reports\SuperSaver\");[m
[31m-            extent.AttachReporter(htmlReporter);[m
[31m-        }[m
[31m-[m
[31m-        [OneTimeTearDown][m
[31m-        public void CloseReport()[m
[31m-        {[m
[31m-            extent.Flush();[m
[31m-        }[m
[31m-[m
[31m-        [Test][m
[31m-        public void ValidaSuperSaverValidate()[m
[31m-        {[m
[31m-            ExtentTest test = null;[m
[31m-            var codValido = "02RMXEPTM";[m
[31m-            //var codInvalido = "02QAKGA89";[m
[31m-            test = extent.CreateTest("ValidaSuperSaverValidate").Info("InÃ­cio do teste.");[m
[31m-[m
[31m-            try[m
[31m-            {[m
[31m-                //Criando e enviando requisiÃ§Ã£o[m
[31m-                test.Log(Status.Info, "Criando requisiÃ§Ã£o responsÃ¡vel por realizar login.");[m
[31m-                var client = new RestClient(ConfigurationManager.AppSettings["dnsSensedia"]);[m
[31m-                var request = new RestRequest("ticket/v1/supersaver/validate", Method.POST);[m
[31m-                request.RequestFormat = DataFormat.Json;[m
[31m-[m
[31m-                request.AddJsonBody(new[m
[31m-                {[m
[31m-                    code = codValido,[m
[31m-                    saleChannel = "0",[m
[31m-                    theater = "688",[m
[31m-                    movie = "2200",[m
[31m-                    theaterRoom = "1",[m
[31m-                    sessionType = "1",[m
[31m-                    sessionDate = "2018-05-09T10:56:04.941Z",[m
[31m-                    seatNumber = "1",[m
[31m-                    seatType = "1"[m
[31m-                }[m
[31m-                );[m
[31m-                test.Log(Status.Info, "Setando headers necessÃ¡rios para realizar a requisiÃ§Ã£o.");[m
[31m-                utils.Utils.setCisToken(request);[m
[31m-                test.Log(Status.Info, "Enviando requisiÃ§Ã£o.");[m
[31m-                var response = client.Execute<ModelSuperSaver>(request);[m
[31m-[m
[31m-                string responseContent = response.Content.ToString();[m
[31m-[m
[31m-                string[] properties = new string[] { "\"transacao\":", "\"beneficios\":", "\"codigo\":", "\"dataTransacao\":",[m
[31m-                "\"especificacaoIngresso\":", "\"codigo\":", "\"desconto\":", "\"isencaoTaxaConveniencia\":", "\"nome\":", "\"nomeCurto\":", "\"perfilId\":",[m
[31m-                "\"valorFinal\":", "\"valorNominal\":", "\"venda\":", "\"codigoCliente\":", "\"id\":", "\"nomeFantasia\":", "\"razaoSocial\":", "\"listaBeneficio\":",[m
[31m-                "\"mensagem\":", "\"mensagemFormatada\":", "\"metodo\":", "\"offline\":", "\"permiteUpgrade\":", "\"sessao\":" ,[m
[31m-                "\"canalVenda\":", "\"cinema\":", "\"filme\":", "\"inicio\":" ,"\"lugar\":", "\"numeracao\":", "\"lugar\":", "\"tid\":", "\"valorUpgradeDesconto\":", "\"valorUpgradeInteira\":"};[m
[31m-[m
[31m-[m
[31m-[m
[31m-                //InÃ­cio das validaÃ§Ãµes[m
[31m-                test.Log(Status.Info, "Validando se o Status Code de retorno da requisiÃ§Ã£o Ã© 200.");[m
[31m-                Assert.That((int)response.StatusCode, Is.EqualTo(200), "Status Code divergente.");[m
[31m-[m
[31m-                test.Log(Status.Info, "Validando o retorno das propriedades.");[m
[31m-                test.Log(Status.Info, "Validando o contrato.");[m
[31m-                utils.Utils.validaContrato(properties, responseContent, test);[m
[31m-                test.Log(Status.Info, "Valida a mensagem de retorno do SUPERSAVER.");[m
[31m-                Assert.That(response.Content.Contains("\"mensagem\":\"Convite invÃ¡lido ou cÃ³digo incorreto.\""), "Status Code divergente.");[m
[31m-                test.Log(Status.Info, "Mensagem validada com sucesso!");[m
[31m-            }[m
[31m-            catch (Exception e)[m
[31m-            {[m
[31m-                test.Log(Status.Fail, e.ToString());[m
[31m-                throw new Exception("Falha ao validar dados do login do usuÃ¡rio: " + e.Message);[m
[31m-            }[m
[31m-        }[m
[31m-[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/EcommerceBackend/tests/Support.cs b/EcommerceBackend/tests/Support.cs[m
[1mdeleted file mode 100644[m
[1mindex 8b20efb..0000000[m
[1m--- a/EcommerceBackend/tests/Support.cs[m
[1m+++ /dev/null[m
[36m@@ -1,71 +0,0 @@[m
[31m-ï»¿using System.Configuration;[m
[31m-using System;[m
[31m-using NUnit.Framework;[m
[31m-using RestSharp;[m
[31m-using AventStack.ExtentReports;[m
[31m-using AventStack.ExtentReports.Reporter;[m
[31m-using AventStack.ExtentReports.Reporter.Configuration;[m
[31m-using EcommerceBackend.utils;[m
[31m-[m
[31m-namespace EcommerceBackend[m
[31m-{[m
[31m-    [TestFixture][m
[31m-    public class Support[m
[31m-    {[m
[31m-[m
[31m-        ExtentReports extent = null;[m
[31m-[m
[31m-        [OneTimeSetUp][m
[31m-        public void StartReport()[m
[31m-        {[m
[31m-            extent = new ExtentReports();[m
[31m-            var htmlReporter = new ExtentHtmlReporter(@"C:\AutomationTools\EcommerceBackendReports\Reports\Support\");[m
[31m-            extent.AttachReporter(htmlReporter);[m
[31m-        }[m
[31m-[m
[31m-        [OneTimeTearDown][m
[31m-        public void CloseReport()[m
[31m-        {          [m
[31m-            extent.Flush();[m
[31m-        }[m
[31m-[m
[31m-        [Test][m
[31m-        public void ValidaConsultaFaq()[m
[31m-        {[m
[31m-              ExtentTest test = null;[m
[31m-            test = extent.CreateTest("ValidaConsultaFaq").Info("InÃ­cio do teste.");[m
[31m-[m
[31m-            try[m
[31m-            {[m
[31m-[m
[31m-                //Criando e enviando requisiÃ§Ã£o[m
[31m-                test.Log(Status.Info, "Criando requisiÃ§Ã£o");[m
[31m-                var client = new RestClient(ConfigurationManager.AppSettings["dnsSensedia"]);[m
[31m-                var request = new RestRequest("bus/v1/support/faqcategories",  Method.GET);[m
[31m-                utils.Utils.setCisToken(request);[m
[31m-                test.Log(Status.Info, "Setando headers necessÃ¡rios para realizar a requisiÃ§Ã£o");[m
[31m-                var response = client.Execute(request);[m
[31m-[m
[31m-                 [m
[31m-                string responseContent = response.Content.ToString();[m
[31m-[m
[31m-                string[] properties = new string[] { "\"FaqCategoryId\":", "\"Description\":", "\"Deleted\":", "\"Faqs\":", "\"FaqId\":", "\"IssueDescription\":", "\"Instructions\":", "\"Deleted\":"[m
[31m-                , "\"FaqCategoryId\":", "\"IsContactEnabled\":", "\"FaqType\":"};[m
[31m-[m
[31m-                //InÃ­cio das validaÃ§Ãµes[m
[31m-                test.Log(Status.Info, "Validando se o Status Code de retorno da requisiÃ§Ã£o Ã© 200.");[m
[31m-                Assert.That((int)response.StatusCode, Is.EqualTo(200), "Status Code divergente.");[m
[31m-                test.Log(Status.Info, "Valida Contrato de ajuda - help");[m
[31m-                Utils.validaContrato(properties, responseContent, test);[m
[31m-                test.Log(Status.Info, "Finalizado todas as etapas.");[m
[31m-[m
[31m-            }[m
[31m-            catch (Exception e)[m
[31m-            {[m
[31m-                test.Log(Status.Fail, e.ToString());[m
[31m-                throw new Exception("Falha ao validar limpeza de cache: " + e.Message);[m
[31m-            }[m
[31m-        }[m
[31m-[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/EcommerceBackend/tests/Theaters.cs b/EcommerceBackend/tests/Theaters.cs[m
[1mdeleted file mode 100644[m
[1mindex 18c9c78..0000000[m
[1m--- a/EcommerceBackend/tests/Theaters.cs[m
[1m+++ /dev/null[m
[36m@@ -1,479 +0,0 @@[m
[31m-ï»¿using System.Configuration;[m
[31m-using System;[m
[31m-using NUnit.Framework;[m
[31m-using RestSharp;[m
[31m-using AventStack.ExtentReports;[m
[31m-using AventStack.ExtentReports.Reporter;[m
[31m-using DemoRestSharp.models.Theaters;[m
[31m-using System.Collections.Generic;[m
[31m-using EcommerceBackend.utils;[m
[31m-using Newtonsoft.Json;[m
[31m-[m
[31m-namespace EcommerceBackend[m
[31m-[m
[31m-[m
[31m-{[m
[31m-    [TestFixture][m
[31m-    public class Theaters[m
[31m-    {[m
[31m-        ExtentReports extent = null;[m
[31m-[m
[31m-        [OneTimeSetUp][m
[31m-        public void StartReport()[m
[31m-        {[m
[31m-            extent = new ExtentReports();[m
[31m-            var htmlReporter = new ExtentHtmlReporter(@"C:\AutomationTools\EcommerceBackendReports\Reports\Theaters\");[m
[31m-            extent.AttachReporter(htmlReporter);[m
[31m-[m
[31m-        }[m
[31m-[m
[31m-        [OneTimeTearDown][m
[31m-        public void CloseReport()[m
[31m-        {[m
[31m-            extent.Flush();[m
[31m-        }[m
[31m-[m
[31m-        [Test][m
[31m-        public void ValidaListaCinemas()[m
[31m-        {[m
[31m-            ExtentTest test = null;[m
[31m-            test = extent.CreateTest("ValidaListaCinemas").Info("InÃ­cio do teste.");[m
[31m-[m
[31m-            try[m
[31m-            {[m
[31m-[m
[31m-                //Criando e enviando requisiÃ§Ã£o[m
[31m-                test.Log(Status.Info, "Criando requisiÃ§Ã£o responsÃ¡vel por realizar login.");[m
[31m-                var client = new RestClient(ConfigurationManager.AppSettings["dnsSensedia"]);[m
[31m-                var request = new RestRequest("bus/v1/theaters", Method.GET);[m
[31m-                request.RequestFormat = DataFormat.Json;[m
[31m-                utils.Utils.setCisToken(request);[m
[31m-                test.Log(Status.Info, "Setando headers necessÃ¡rios para realizar a requisiÃ§Ã£o.");[m
[31m-[m
[31m-                var response = client.Execute<List<ModelTheater>>(request);[m
[31m-[m
[31m-                //InÃ­cio das validaÃ§Ãµes[m
[31m-                test.Log(Status.Info, "Validando se o Status Code de retorno da requisiÃ§Ã£o Ã© 200.");[m
[31m-                Assert.That((int)response.StatusCode, Is.EqualTo(200), "Status Code divergente.");[m
[31m-[m
[31m-[m
[31m-                if (response.IsSuccessful)[m
[31m-                {[m
[31m-[m
[31m-                    test.Log(Status.Info, "InÃ­cio da validaÃ§Ã£o de cinemas.");[m
[31m-                    Assert.That(response.Data[1].TheaterCode, Is.EqualTo("2115"), "TheaterCode divergente.");[m
[31m-                    Assert.That(response.Data[1].Name, Is.EqualTo("Atrium Shopping"), "Name divergente.");[m
[31m-                    Assert.That(response.Data[1].Latitude, Is.EqualTo("-23.6644134"), "Latitude divergente.");[m
[31m-                    Assert.That(response.Data[1].Longitude, Is.EqualTo("-46.5078915"), "Longitude divergente.");[m
[31m-                    Assert.That(response.Data[1].Address1, Is.EqualTo("RUA GIOVANNI BATTISTA PIRELLI, 155  /  ATRIUM SHOPPING SANTO ANDRE - 2 ANDAR - LUC/SUC CINEMA"), "Address1 divergente.");[m
[31m-                    Assert.That(response.Data[1].StateId, Is.EqualTo("25"), "StateId divergente.");[m
[31m-                    Assert.That(response.Data[1].City[0].CityId, Is.EqualTo("9625"), "CityId divergente.");[m
[31m-                    Assert.That(response.Data[1].City[0].Name, Is.EqualTo("SANTO ANDRÃ"), "Name divergente.");[m
[31m-                    Assert.That(response.Data[1].City[0].StateId, Is.EqualTo("25"), "' divergente.");[m
[31m-                    Assert.That(response.Data[1].City[0].IbgeCode, Is.EqualTo("3547809"), "IbgeCode divergente.");[m
[31m-                    Assert.That(response.Data[1].State[0].StateId, Is.EqualTo("25"), "StateId divergente.");[m
[31m-                    Assert.That(response.Data[1].State[0].Code, Is.EqualTo("SP"), "Code divergente.");[m
[31m-                    Assert.That(response.Data[1].State[0].Name, Is.EqualTo("SÃ£o Paulo"), "Name divergente.");[m
[31m-                    Assert.That(response.Data[1].State[0].CountryId, Is.EqualTo("1"), "CountryId divergente.");[m
[31m-                    Assert.That(response.Data[1].Phone1, Is.EqualTo("(11) 5180-3292"), "Phone1 divergente.");[m
[31m-[m
[31m-                    test.Log(Status.Info, "InÃ­cio da validaÃ§Ã£o de auditÃ³rios.");[m
[31m-                    Assert.That(response.Data[1].Auditoriums[0].TheaterCode, Is.EqualTo("2115"), "TheaterCode divergente.");[m
[31m-                    Assert.That(response.Data[1].Auditoriums[0].Description, Is.EqualTo(""), "Description divergente.");[m
[31m-                    Assert.That(response.Data[1].Auditoriums[0].AuditoriumCode, Is.EqualTo("4"), "AuditoriumCode divergente.");[m
[31m-                    Assert.That(response.Data[1].Auditoriums[0].TotalSeats, Is.EqualTo("226"), "TotalSeats divergente.");[m
[31m-                    Assert.That(response.Data[1].Auditoriums[0].DboxDescription, Is.EqualTo(""), "DboxDescription divergente.");[m
[31m-                    Assert.That(response.Data[1].Auditoriums[0].XD, Is.EqualTo("False"), "XD divergente.");[m
[31m-                    Assert.That(response.Data[1].Auditoriums[0].Prime, Is.EqualTo("False"), "Prime divergente.");[m
[31m-                    Assert.That(response.Data[1].Auditoriums[0].DBOX, Is.EqualTo("False"), "DBOX divergente.");[m
[31m-                    Assert.That(response.Data[1].Auditoriums[0].Status, Is.EqualTo("10"), "Status divergente.");[m
[31m-[m
[31m-                    Assert.That(response.Data[1].InvoiceEnabled, Is.EqualTo("False"), "InvoiceEnabled divergente.");[m
[31m-                    Assert.That(response.Data[1].SnackbarEnabled, Is.EqualTo("True"), "SnackbarEnabled divergente.");[m
[31m-                    Assert.That(response.Data[1].IngressoSiteCode, Is.EqualTo("1173"), "IngressoSiteCode divergente.");[m
[31m-                    Assert.That(response.Data[1].SnackbarPOSCode, Is.EqualTo("75"), "SnackbarPOSCode divergente.");[m
[31m-                    Assert.That(response.Data[1].CNPJ, Is.EqualTo("00779721006778"), "CNPJ divergente.");[m
[31m-                    Assert.That(response.Data[1].ZipCode, Is.EqualTo("09111340"), "ZipCode divergente.");[m
[31m-                    Assert.That(response.Data[1].EconomicGroupId, Is.EqualTo(1), "EconomicGroupId divergente.");[m
[31m-[m
[31m-                    test.Log(Status.Info, "ValidaÃ§Ã£o de tabela de preÃ§os.");[m
[31m-                    Assert.That(response.Content.Contains("PriceTableHTML"), "Status Code divergente.");[m
[31m-                    test.Log(Status.Pass, "ValidaÃ§Ã£o de tabela de preÃ§os verificada com sucesso.");[m
[31m-                    test.Log(Status.Info, "ValidaÃ§Ã£o realizada com sucesso de todos os campos e seus valores.");[m
[31m-[m
[31m-                }[m
[31m-[m
[31m-            }[m
[31m-            catch (Exception e)[m
[31m-            {[m
[31m-                test.Log(Status.Fail, e.ToString());[m
[31m-                throw new Exception("Falha ao validar dados de theaters: " + e.Message);[m
[31m-            }[m
[31m-[m
[31m-        }[m
[31m-[m
[31m-        [Test][m
[31m-        public void ValidaDetalhesCinema()[m
[31m-        {[m
[31m-            ExtentTest test = null;[m
[31m-            test = extent.CreateTest("ValidaDetalhesCinema").Info("InÃ­cio do teste.");[m
[31m-[m
[31m-[m
[31m-            try[m
[31m-            {[m
[31m-                //Criando e enviando requisiÃ§Ã£o[m
[31m-                test.Log(Status.Info, "Criando requisiÃ§Ã£o responsÃ¡vel por realizar login.");[m
[31m-                var client = new RestClient(ConfigurationManager.AppSettings["dnsSensedia"]);[m
[31m-                var request = new RestRequest("bus/v1/theaters/688", Method.GET);[m
[31m-                request.RequestFormat = DataFormat.Json;[m
[31m-                utils.Utils.setCisToken(request);[m
[31m-                test.Log(Status.Info, "Setando headers necessÃ¡rios para realizar a requisiÃ§Ã£o.");[m
[31m-[m
[31m-                var response = client.Execute<List<ModelDetalhesCinema>>(request);[m
[31m-[m
[31m-                string responseContent = response.Content.ToString();[m
[31m-[m
[31m-                //Declarando as propriedades que deverÃ£o obrigatoriamente estar na resposta da requisiÃ§Ã£o[m
[31m-                string[] properties = new string[] { "\"Auditoriums\":", "\"TheaterCode\":", "\"Description\":", "\"AuditoriumCode\":",[m
[31m-                "\"TotalSeats\":", "\"XD\":", "\"Prime\":", "\"DBOX\":", "\"DboxDescription\":", "\"Status\":", "\"Notice\":",[m
[31m-                "\"InvoiceEnabled\":", "\"SnackbarEnabled\":", "\"IngressoSiteCode\":", "\"IP\":", "\"Licence\":", "\"AVCB\":",[m
[31m-                "\"MerchantId\":", "\"MerchantKey\":", "\"Remarks\":", "\"PriceTableHTML\":"};[m
[31m-[m
[31m-[m
[31m-                //InÃ­cio das validaÃ§Ãµes[m
[31m-                test.Log(Status.Info, "Validando se o Status Code de retorno da requisiÃ§Ã£o Ã© 200.");[m
[31m-                Assert.That((int)response.StatusCode, Is.EqualTo(200), "Status Code divergente.");[m
[31m-                test.Log(Status.Info, "Validando se o contrato esta ok.");[m
[31m-                Utils.validaContrato(properties, responseContent, test);[m
[31m-                test.Log(Status.Info, "Contrato validado em sua totalidade.");[m
[31m-[m
[31m-                if (response.IsSuccessful)[m
[31m-                {[m
[31m-[m
[31m-                    test.Log(Status.Info, "Validando dados de theater 688.");[m
[31m-[m
[31m-                    Assert.That(response.Data[0].Id, Is.EqualTo("762cb89b-51cb-4c7d-8dba-a862310af75f"), "Id divergente.");[m
[31m-                    Assert.That(response.Data[0].TheaterCode, Is.EqualTo("688"), "TheaterCode divergente.");[m
[31m-                    Assert.That(response.Data[0].Name, Is.EqualTo("Market Place"), "Name divergente.");[m
[31m-                    Assert.That(response.Data[0].Latitude, Is.EqualTo("-23.62154"), "Latitude divergente.");[m
[31m-                    Assert.That(response.Data[0].Longitude, Is.EqualTo("-46.69987"), "Longitude divergente.");[m
[31m-                    Assert.That(response.Data[0].Address1, Is.EqualTo("Av. Dr. Chucri Zaidan, 920 - Vila Cordeiro teste de quebra de linha e endereÃ§o grande 12345"), "Address1 divergente.");[m
[31m-                    Assert.That(response.Data[0].CityId, Is.EqualTo("9668"), "CityId divergente.");[m
[31m-                    Assert.That(response.Data[0].StateId, Is.EqualTo("25"), "StateId divergente.");[m
[31m-                    Assert.That(response.Data[0].Phone1, Is.EqualTo("(11) 5180-3291"), "Phone1 divergente.");[m
[31m-                    Assert.That(response.Data[0].Status, Is.EqualTo("10"), "Status divergente.");[m
[31m-                    Assert.That(response.Data[0].InvoiceEnabled, Is.EqualTo("False"), "InvoiceEnabled divergente.");[m
[31m-                    Assert.That(response.Data[0].SnackbarEnabled, Is.EqualTo("True"), "SnackbarEnabled divergente.");[m
[31m-                    Assert.That(response.Data[0].IngressoSiteCode, Is.EqualTo("120"), "IngressoSiteCode divergente.");[m
[31m-                    Assert.That(response.Data[0].CNPJ, Is.EqualTo("00779721002780"), "CNPJ divergente.");[m
[31m-                    Assert.That(response.Data[0].ZipCode, Is.EqualTo("04583110"), "ZipCode divergente.");[m
[31m-[m
[31m-                    Assert.That(response.Data[0].City[0].CityId, Is.EqualTo("9668"), "CityId divergente.");[m
[31m-                    Assert.That(response.Data[0].City[0].Name, Is.EqualTo("SÃO PAULO"), "Name divergente.");[m
[31m-                    Assert.That(response.Data[0].City[0].StateId, Is.EqualTo("25"), "StateId divergente.");[m
[31m-                    Assert.That(response.Data[0].City[0].IbgeCode, Is.EqualTo("3550308"), "IbgeCode divergente.");[m
[31m-[m
[31m-                    Assert.That(response.Data[0].State[0].StateId, Is.EqualTo("25"), "StateId divergente.");[m
[31m-                    Assert.That(response.Data[0].State[0].Code, Is.EqualTo("SP"), "Code divergente.");[m
[31m-                    Assert.That(response.Data[0].State[0].Name, Is.EqualTo("SÃ£o Paulo"), "Name divergente.");[m
[31m-                    Assert.That(response.Data[0].State[0].CountryId, Is.EqualTo("1"), "CountryId divergente.");[m
[31m-[m
[31m-                }[m
[31m-[m
[31m-            }[m
[31m-            catch (Exception e)[m
[31m-            {[m
[31m-                test.Log(Status.Fail, e.ToString());[m
[31m-                throw new Exception("Falha ao validar dados de detalhes de theaters: " + e.Message);[m
[31m-            }[m
[31m-[m
[31m-        }[m
[31m-[m
[31m-[m
[31m-        [Test][m
[31m-        public void ValidaListaCinemasFull()[m
[31m-        {[m
[31m-            int qtdCinemasAtivos = 0;[m
[31m-        [m
[31m-            ExtentTest test = null;[m
[31m-            test = extent.CreateTest("ValidaListaCinemasFull").Info("InÃ­cio do teste.");[m
[31m-[m
[31m-[m
[31m-            try[m
[31m-            {[m
[31m-                //Criando e enviando requisiÃ§Ã£o[m
[31m-                test.Log(Status.Info, "Criando requisiÃ§Ã£o responsÃ¡vel por realizar login.");[m
[31m-                var client = new RestClient(ConfigurationManager.AppSettings["dnsSensedia"]);[m
[31m-                var request = new RestRequest("theaters/full", Method.GET);[m
[31m-                request.RequestFormat = DataFormat.Json;[m
[31m-                utils.Utils.setCisToken(request);[m
[31m-                test.Log(Status.Info, "Setando headers necessÃ¡rios para realizar a requisiÃ§Ã£o.");[m
[31m-[m
[31m-                var response = client.Execute<List<ModelTheater>>(request);[m
[31m-[m
[31m-[m
[31m-                test.Log(Status.Info, "Valida Quantidade de cinemas FULL - primeiro da lista [0] e ultimo da lista[82].");[m
[31m-                qtdCinemasAtivos = response.Data.Count;[m
[31m-                if (qtdCinemasAtivos == 83 && response.Data[0].Name == "Aricanduva" && response.Data[82].Name == "West Plaza")[m
[31m-                {[m
[31m-                    test.Log(Status.Info, "Lista de todos os cinemas OK.");[m
[31m-                }[m
[31m-[m
[31m-                test.Log(Status.Info, "Validando se o Status Code de retorno da requisiÃ§Ã£o Ã© 200.");[m
[31m-                if (response.IsSuccessful)[m
[31m-                {[m
[31m-                    test.Log(Status.Info, "Validando a posiÃ§Ã£o 0 da lista de cinemas.");[m
[31m-[m
[31m-                    if (response.Data[0].TheaterCode == null || response.Data[0].TheaterCode == "")[m
[31m-                    {[m
[31m-                        test.Log(Status.Fail, "Cinema Inexistente!");[m
[31m-                    }[m
[31m-                    else if (response.Data[0].TheaterCode != null && response.Data[0].TheaterCode != "")[m
[31m-                    {[m
[31m-                        Assert.That(response.Data[0].TheaterCode, Is.EqualTo("716"), "TheaterCode divergente.");[m
[31m-                        Assert.That(response.Data[0].Name, Is.EqualTo("Aricanduva"), "Name divergente.");[m
[31m-                        Assert.That(response.Data[0].Latitude, Is.EqualTo("-23.56582"), "Latitude divergente.");[m
[31m-                        Assert.That(response.Data[0].Longitude, Is.EqualTo("-46.50364"), "Longitude divergente.");[m
[31m-                        Assert.That(response.Data[0].CityId, Is.EqualTo("9668"), "CityId divergente.");[m
[31m-                        Assert.That(response.Data[0].StateId, Is.EqualTo("25"), "StateId divergente.");[m
[31m-                        Assert.That(response.Data[0].Phone1, Is.EqualTo("(11) 5180-3419"), "Phone1 divergente.");[m
[31m-                        Assert.That(response.Data[0].Remarks.Contains("MatinÃª: SessÃµes iniciadas atÃ© as 17h"), "Remarks divergente.");[m
[31m-                        Assert.That(response.Data[0].InvoiceEnabled, Is.EqualTo("False"), "InvoiceEnabled divergente.");[m
[31m-                        Assert.That(response.Data[0].SnackbarEnabled, Is.EqualTo("True"), "SnackbarEnabled divergente.");[m
[31m-                        Assert.That(response.Data[0].IngressoSiteCode, Is.EqualTo("348"), "IngressoSiteCode divergente.");[m
[31m-                        Assert.That(response.Data[0].SnackbarPOSCode, Is.EqualTo("13"), "SnackbarPOSCode divergente.");[m
[31m-                        Assert.That(response.Data[0].CNPJ, Is.EqualTo("00779721000575"), "CNPJ divergente.");[m
[31m-                        Assert.That(response.Data[0].ZipCode, Is.EqualTo("03527000"), "ZipCode divergente.");[m
[31m-                        Assert.That(response.Data[0].EconomicGroupId, Is.EqualTo(1), "EconomicGroupId divergente.");[m
[31m-[m
[31m-                        Assert.That(response.Data[0].City[0].CityId, Is.EqualTo("9668"), "CityId divergente.");[m
[31m-                        Assert.That(response.Data[0].City[0].Name, Is.EqualTo("SÃO PAULO"), "Name divergente.");[m
[31m-                        Assert.That(response.Data[0].City[0].StateId, Is.EqualTo("25"), "StateId divergente.");[m
[31m-                        Assert.That(response.Data[0].City[0].IbgeCode, Is.EqualTo("3550308"), "IbgeCode divergente.");[m
[31m-[m
[31m-                        Assert.That(response.Data[0].State[0].StateId, Is.EqualTo("25"), "StateId divergente.");[m
[31m-                        Assert.That(response.Data[0].State[0].Code, Is.EqualTo("SP"), "Code divergente.");[m
[31m-                        Assert.That(response.Data[0].State[0].Name, Is.EqualTo("SÃ£o Paulo"), "Name divergente.");[m
[31m-                        Assert.That(response.Data[0].State[0].CountryId, Is.EqualTo("1"), "CountryId divergente.");[m
[31m-[m
[31m-                        Assert.That(response.Data[0].Auditoriums[0].TheaterCode, Is.EqualTo("716"), "TheaterCode divergente.");[m
[31m-                        Assert.That(response.Data[0].Auditoriums[0].Description, Is.EqualTo(""), "Description divergente.");[m
[31m-                        Assert.That(response.Data[0].Auditoriums[0].AuditoriumCode, Is.EqualTo("4"), "AuditoriumCode divergente.");[m
[31m-                        Assert.That(response.Data[0].Auditoriums[0].TotalSeats, Is.EqualTo("133"), "TotalSeats divergente.");[m
[31m-                        Assert.That(response.Data[0].Auditoriums[0].XD, Is.EqualTo("False"), "XD divergente.");[m
[31m-                        Assert.That(response.Data[0].Auditoriums[0].Prime, Is.EqualTo("False"), "Prime divergente.");[m
[31m-                        Assert.That(response.Data[0].Auditoriums[0].DBOX, Is.EqualTo("False"), "DBOX divergente.");[m
[31m-                        Assert.That(response.Data[0].Auditoriums[0].DboxDescription, Is.EqualTo(""), "DboxDescription divergente.");[m
[31m-                        Assert.That(response.Data[0].Auditoriums[0].Status, Is.EqualTo("10"), "Status divergente");[m
[31m-[m
[31m-                        test.Log(Status.Info, "Lista na posiÃ§Ã£o 0 validada com suceso em sua totalidade.");[m
[31m-[m
[31m-                    }[m
[31m-[m
[31m-                }[m
[31m-            }[m
[31m-[m
[31m-            catch (Exception e)[m
[31m-            {[m
[31m-                test.Log(Status.Fail, e.ToString());[m
[31m-                throw new Exception("Falha ao validar dados de detalhes de salas full de theaters: " + e.Message);[m
[31m-            }[m
[31m-[m
[31m-[m
[31m-        }[m
[31m-[m
[31m-        [Test][m
[31m-        public void ValidaShowtimeTheater()[m
[31m-        {[m
[31m-            ExtentTest test = null;[m
[31m-            test = extent.CreateTest("ValidaShowtimeTheater").Info("InÃ­cio do teste.");[m
[31m-[m
[31m-[m
[31m-            try[m
[31m-            {[m
[31m-[m
[31m-                //Criando e enviando requisiÃ§Ã£o[m
[31m-                test.Log(Status.Info, "Criando requisiÃ§Ã£o responsÃ¡vel por realizar login.");[m
[31m-                var client = new RestClient(ConfigurationManager.AppSettings["dnsSensedia"]);[m
[31m-                var request = new RestRequest("showtime/theater/688", Method.GET);[m
[31m-                request.RequestFormat = DataFormat.Json;[m
[31m-                utils.Utils.setCisToken(request);[m
[31m-                test.Log(Status.Info, "Setando headers necessÃ¡rios para realizar a requisiÃ§Ã£o.");[m
[31m-[m
[31m-                var response = client.Execute<List<ModelTheater>>(request);[m
[31m-[m
[31m-                string responseContent = response.Content.ToString();[m
[31m-                //Declarando as propriedades que deverÃ£o obrigatoriamente estar na resposta da requisiÃ§Ã£o[m
[31m-                string[] properties = new string[] { "\"id\":", "\"ShowTimeId\":", "\"cm\":", "\"tht\":",[m
[31m-                "\"mov\":", "\"aud\":", "\"xd\":", "\"prime\":", "\"dbox\":", "\"d3d\":", "\"psl\":",[m
[31m-                "\"mov\":", "\"aud\":", "\"xd\":", "\"prime\":", "\"dbox\":", "\"d3d\":", "\"pre\":", "\"psl\":",[m
[31m-                "\"deb\":", "\"time\":", "\"loc\":", "\"MoviePrintCode\":", "\"IsSessionExpired\":", "\"TheaterAllow\":" ,[m
[31m-                "\"Utc\":", "\"level\":", "\"Suggestions\":", "\"SnackCategoryId\":" ,"\"SnackCategoryIconUrl\":"};[m
[31m-[m
[31m-[m
[31m-                //InÃ­cio das validaÃ§Ãµes[m
[31m-                test.Log(Status.Info, "Validando se o Status Code de retorno da requisiÃ§Ã£o Ã© 200.");[m
[31m-                Assert.That((int)response.StatusCode, Is.EqualTo(200), "Status Code divergente.");[m
[31m-                test.Log(Status.Info, "Validando se o contrato esta ok.");[m
[31m-                Utils.validaContrato(properties, responseContent, test);[m
[31m-                test.Log(Status.Info, "Todos os campos do contrato estÃ£o ok.");[m
[31m-[m
[31m-            }[m
[31m-            catch (Exception e)[m
[31m-            {[m
[31m-                test.Log(Status.Fail, e.ToString());[m
[31m-                throw new Exception("Falha ao validar dados de detalhes de salas full de theaters: " + e.Message);[m
[31m-            }[m
[31m-[m
[31m-        }[m
[31m-[m
[31m-        [Test][m
[31m-        public void ValidaConsultaSalaEspecifica()[m
[31m-        {[m
[31m-            ExtentTest test = null;[m
[31m-            test = extent.CreateTest("ValidaConsultaSalaEspecifica").Info("InÃ­cio do teste.");[m
[31m-[m
[31m-            try[m
[31m-            {[m
[31m-[m
[31m-                //Criando e enviando requisiÃ§Ã£o[m
[31m-                test.Log(Status.Info, "Criando requisiÃ§Ã£o responsÃ¡vel por realizar login.");[m
[31m-                var client = new RestClient(ConfigurationManager.AppSettings["dnsSensedia"]);[m
[31m-                var request = new RestRequest("bus/v1/theaters", Method.GET);[m
[31m-                request.RequestFormat = DataFormat.Json;[m
[31m-                utils.Utils.setCisToken(request);[m
[31m-                test.Log(Status.Info, "Setando headers necessÃ¡rios para realizar a requisiÃ§Ã£o.");[m
[31m-[m
[31m-                var response = client.Execute<List<ModelTheater>>(request);[m
[31m-[m
[31m-[m
[31m-                //InÃ­cio das validaÃ§Ãµes[m
[31m-                test.Log(Status.Info, "Validando se o Status Code de retorno da requisiÃ§Ã£o Ã© 200.");[m
[31m-                Assert.That((int)response.StatusCode, Is.EqualTo(200), "Status Code divergente.");[m
[31m-[m
[31m-[m
[31m-                if (response.IsSuccessful)[m
[31m-                {[m
[31m-                    test.Log(Status.Info, "Validando a posiÃ§Ã£o 0 da lista de cinemas.");[m
[31m-[m
[31m-                    if (response.Data[0].TheaterCode == null || response.Data[0].TheaterCode == "")[m
[31m-                    {[m
[31m-                        test.Log(Status.Fail, "Cinema Inexistente!");[m
[31m-                    }[m
[31m-                    test.Log(Status.Info, "Validando a sala especÃ­fica na posiÃ§Ã£o [0].");[m
[31m-                    Assert.That(response.Data[0].Auditoriums[0].TheaterCode, Is.EqualTo("716"), "TheaterCode divergente.");[m
[31m-                    Assert.That(response.Data[0].Auditoriums[0].Description, Is.EqualTo(""), "Description divergente.");[m
[31m-                    Assert.That(response.Data[0].Auditoriums[0].AuditoriumCode, Is.EqualTo("4"), "AuditoriumCode divergente.");[m
[31m-                    Assert.That(response.Data[0].Auditoriums[0].TotalSeats, Is.EqualTo("133"), "TotalSeats divergente.");[m
[31m-                    Assert.That(response.Data[0].Auditoriums[0].XD, Is.EqualTo("False"), "XD divergente.");[m
[31m-                    Assert.That(response.Data[0].Auditoriums[0].Prime, Is.EqualTo("False"), "Prime divergente.");[m
[31m-                    Assert.That(response.Data[0].Auditoriums[0].DBOX, Is.EqualTo("False"), "DBOX divergente.");[m
[31m-                    Assert.That(response.Data[0].Auditoriums[0].DboxDescription, Is.EqualTo(""), "DboxDescription divergente.");[m
[31m-                    Assert.That(response.Data[0].Auditoriums[0].Status, Is.EqualTo("10"), "Status divergente.");[m
[31m-[m
[31m-                    test.Log(Status.Info, "Sala especÃ­fica validada com sucesso.");[m
[31m-[m
[31m-                }[m
[31m-            }[m
[31m-            catch (Exception e)[m
[31m-            {[m
[31m-                test.Log(Status.Fail, e.ToString());[m
[31m-                throw new Exception("Falha ao validar sala especÃ­fica!" + e.Message);[m
[31m-            }[m
[31m-[m
[31m-        }[m
[31m-[m
[31m-[m
[31m-        [Test][m
[31m-        public void ValidaConsultaSalasDoCinema()[m
[31m-        {[m
[31m-            ExtentTest test = null;[m
[31m-            test = extent.CreateTest("ValidaConsultaSalasDoCinema").Info("InÃ­cio do teste.");[m
[31m-[m
[31m-            try[m
[31m-            {[m
[31m-[m
[31m-                //Criando e enviando requisiÃ§Ã£o[m
[31m-                test.Log(Status.Info, "Criando requisiÃ§Ã£o responsÃ¡vel por realizar login.");[m
[31m-                var client = new RestClient(ConfigurationManager.AppSettings["dnsSensedia"]);[m
[31m-                var request = new RestRequest("bus/v1/theaters", Method.GET);[m
[31m-                request.RequestFormat = DataFormat.Json;[m
[31m-                utils.Utils.setCisToken(request);[m
[31m-                test.Log(Status.Info, "Setando headers necessÃ¡rios para realizar a requisiÃ§Ã£o.");[m
[31m-[m
[31m-                var response = client.Execute<List<ModelTheater>>(request);[m
[31m-[m
[31m-                test.Log(Status.Info, "Validando se o Status Code de retorno da requisiÃ§Ã£o Ã© 200.");[m
[31m-                if (response.IsSuccessful)[m
[31m-                {[m
[31m-                    test.Log(Status.Info, "Validando a posiÃ§Ã£o de 0 a 3 da lista de cinemas - salas.");[m
[31m-[m
[31m-                    if (response.Data[0].Auditoriums[0].TheaterCode != null && response.Data[0].Auditoriums[0].TheaterCode != "")[m
[31m-                    {[m
[31m-                        test.Log(Status.Info, "Validando a sala especÃ­fica na posiÃ§Ã£o [0].");[m
[31m-                        Assert.That(response.Data[0].Auditoriums[0].TheaterCode, Is.EqualTo("716"), "TheaterCode divergente.");[m
[31m-                        Assert.That(response.Data[0].Auditoriums[0].Description, Is.EqualTo(""), "Description divergente.");[m
[31m-                        Assert.That(response.Data[0].Auditoriums[0].AuditoriumCode, Is.EqualTo("4"), "AuditoriumCode divergente.");[m
[31m-                        Assert.That(response.Data[0].Auditoriums[0].TotalSeats, Is.EqualTo("133"), "TotalSeats divergente.");[m
[31m-                        Assert.That(response.Data[0].Auditoriums[0].XD, Is.EqualTo("False"), "XD divergente.");[m
[31m-                        Assert.That(response.Data[0].Auditoriums[0].Prime, Is.EqualTo("False"), "Prime divergente.");[m
[31m-                        Assert.That(response.Data[0].Auditoriums[0].DBOX, Is.EqualTo("False"), "DBOX divergente.");[m
[31m-                        Assert.That(response.Data[0].Auditoriums[0].DboxDescription, Is.EqualTo(""), "DboxDescription divergente.");[m
[31m-                        Assert.That(response.Data[0].Auditoriums[0].Status, Is.EqualTo("10"), "Status divergente.");[m
[31m-                    }[m
[31m-                    else if (response.Data[0].Auditoriums[1].TheaterCode != null && response.Data[0].Auditoriums[1].TheaterCode != "")[m
[31m-                    {[m
[31m-                        test.Log(Status.Info, "Validando a sala especÃ­fica na posiÃ§Ã£o [1].");[m
[31m-                        Assert.That(response.Data[0].Auditoriums[1].TheaterCode, Is.EqualTo("2115"), "TheaterCode divergente.");[m
[31m-                        Assert.That(response.Data[0].Auditoriums[1].Description, Is.EqualTo(""), "Description divergente.");[m
[31m-                        Assert.That(response.Data[0].Auditoriums[1].AuditoriumCode, Is.EqualTo("5"), "AuditoriumCode divergente.");[m
[31m-                        Assert.That(response.Data[0].Auditoriums[1].TotalSeats, Is.EqualTo("214"), "TotalSeats divergente.");[m
[31m-                        Assert.That(response.Data[0].Auditoriums[1].XD, Is.EqualTo("False"), "XD divergente.");[m
[31m-                        Assert.That(response.Data[0].Auditoriums[1].Prime, Is.EqualTo("False"), "Prime divergente.");[m
[31m-                        Assert.That(response.Data[0].Auditoriums[1].DBOX, Is.EqualTo("False"), "DBOX divergente.");[m
[31m-                        Assert.That(response.Data[0].Auditoriums[1].DboxDescription, Is.EqualTo(""), "DboxDescription divergente.");[m
[31m-                        Assert.That(response.Data[0].Auditoriums[1].Status, Is.EqualTo("10"), "Status divergente.");[m
[31m-                    }[m
[31m-                    else if (response.Data[0].Auditoriums[2].TheaterCode != null && response.Data[0].Auditoriums[2].TheaterCode != "")[m
[31m-                    {[m
[31m-                        test.Log(Status.Info, "Validando a sala especÃ­fica na posiÃ§Ã£o [2].");[m
[31m-                        Assert.That(response.Data[0].Auditoriums[2].TheaterCode, Is.EqualTo("2115"), "TheaterCode divergente.");[m
[31m-                        Assert.That(response.Data[0].Auditoriums[2].Description, Is.EqualTo(""), "Description divergente.");[m
[31m-                        Assert.That(response.Data[0].Auditoriums[2].AuditoriumCode, Is.EqualTo("1"), "AuditoriumCode divergente.");[m
[31m-                        Assert.That(response.Data[0].Auditoriums[2].TotalSeats, Is.EqualTo("409"), "TotalSeats divergente.");[m
[31m-                        Assert.That(response.Data[0].Auditoriums[2].XD, Is.EqualTo("True"), "XD divergente.");[m
[31m-                        Assert.That(response.Data[0].Auditoriums[2].Prime, Is.EqualTo("False"), "Prime divergente.");[m
[31m-                        Assert.That(response.Data[0].Auditoriums[2].DBOX, Is.EqualTo("False"), "DBOX divergente.");[m
[31m-                        Assert.That(response.Data[0].Auditoriums[2].DboxDescription, Is.EqualTo(""), "DboxDescription divergente.");[m
[31m-                        Assert.That(response.Data[0].Auditoriums[2].Status, Is.EqualTo("10"), "Status divergente.");[m
[31m-                    }[m
[31m-                    else if (response.Data[0].Auditoriums[3].TheaterCode != null && response.Data[0].Auditoriums[3].TheaterCode != "")[m
[31m-                    {[m
[31m-                        test.Log(Status.Info, "Validando a sala especÃ­fica na posiÃ§Ã£o [3].");[m
[31m-                        Assert.That(response.Data[0].Auditoriums[3].TheaterCode, Is.EqualTo("2115"), "TheaterCode divergente.");[m
[31m-                        Assert.That(response.Data[0].Auditoriums[3].Description, Is.EqualTo(""), "Description divergente.");[m
[31m-                        Assert.That(response.Data[0].Auditoriums[2].AuditoriumCode, Is.EqualTo("1"), "AuditoriumCode divergente.");[m
[31m-                        Assert.That(response.Data[0].Auditoriums[3].TotalSeats, Is.EqualTo("201"), "TotalSeats divergente.");[m
[31m-                        Assert.That(response.Data[0].Auditoriums[3].XD, Is.EqualTo("False"), "XD divergente.");[m
[31m-                        Assert.That(response.Data[0].Auditoriums[3].Prime, Is.EqualTo("False"), "Prime divergente.");[m
[31m-                        Assert.That(response.Data[0].Auditoriums[3].DBOX, Is.EqualTo("False"), "DBOX divergente.");[m
[31m-                        Assert.That(response.Data[0].Auditoriums[3].DboxDescription, Is.EqualTo(""), "DboxDescription divergente.");[m
[31m-                        Assert.That(response.Data[0].Auditoriums[3].Status, Is.EqualTo("10"), "Status divergente.");[m
[31m-                    }[m
[31m-[m
[31m-                }[m
[31m-[m
[31m-            }[m
[31m-            catch (Exception e)[m
[31m-            {[m
[31m-                test.Log(Status.Fail, e.ToString());[m
[31m-                throw new Exception("Falha ao validar dados de salas de indices 0 a 3: " + e.Message);[m
[31m-            }[m
[31m-[m
[31m-        }[m
[31m-    }[m
[31m-[m
[31m-}[m
[31m-[m
[31m-[m
[31m-[m
[1mdiff --git a/EcommerceBackend/tests/Ticket.cs b/EcommerceBackend/tests/Ticket.cs[m
[1mindex d1e1075..eb4e13c 100644[m
[1m--- a/EcommerceBackend/tests/Ticket.cs[m
[1m+++ b/EcommerceBackend/tests/Ticket.cs[m
[36m@@ -5,22 +5,10 @@[m [musing RestSharp;[m
 using AventStack.ExtentReports;[m
 using AventStack.ExtentReports.Reporter;[m
 using AventStack.ExtentReports.Reporter.Configuration;[m
[31m-using System.Collections.Generic;[m
[31m-using Newtonsoft.Json;[m
[31m-using Newtonsoft.Json.Linq;[m
 using EcommerceBackend.utils;[m
[31m-using EcommerceBackend.models.Bookings.ShowTimes;[m
[31m-[m
[31m-namespace EcommerceBackend[m
[31m-    /*[m
[31m-     * Atualmente o campo TOTAL em /startorder aceita:[m
[31m-     * 1. Valores maiores ou iguais a soma dos produtos (qt*unitPrice)[m
[31m-     * 2. Mesmo que a soma seja muito superior ao valor total de fato, o sistema aceita. [m
[31m-     * NÃ£o ocorre o arredondamento dos centavos.[m
[31m-     * [m
[31m-     * [m
[31m-     */[m
[32m+[m[32musing DemoRestSharp.models.Ticket;[m
 [m
[32m+[m[32mnamespace DemoRestSharp.tests[m
 {[m
     [TestFixture][m
     public class Ticket[m
[36m@@ -31,9 +19,8 @@[m [mnamespace EcommerceBackend[m
         public void StartReport()[m
         {[m
             extent = new ExtentReports();[m
[31m-            var htmlReporter = new ExtentHtmlReporter(@"C:\AutomationTools\EcommerceBackendReports\Reports\Ticket\");[m
[32m+[m[32m            var htmlReporter = new ExtentHtmlReporter(@"C:\EcommerceBackendReports\Reports\Ticket\");[m
             extent.AttachReporter(htmlReporter);[m
[31m-[m
         }[m
 [m
         [OneTimeTearDown][m
[36m@@ -43,211 +30,86 @@[m [mnamespace EcommerceBackend[m
         }[m
 [m
         [Test][m
[31m-        public void ValidaTipoIngresso()[m
[31m-        {[m
[31m-[m
[31m-            ExtentTest test = null;[m
[31m-            test = extent.CreateTest("ValidaTipoIngresso").Info("InÃ­cio do teste.");[m
[31m-[m
[31m-            try[m
[31m-            {[m
[31m-[m
[31m-                // Preparando a massa em tempo de execuÃ§Ã£o[m
[31m-                var clientSession = new RestClient(ConfigurationManager.AppSettings["dnsSensedia"]);[m
[31m-                var requestSession = new RestRequest("bus/v1/bookings/showtimes/theaters/688", Method.GET);[m
[31m-                requestSession.RequestFormat = DataFormat.Json;[m
[31m-                test.Log(Status.Info, "Setando headers necessÃ¡rios para realizar a requisiÃ§Ã£o.");[m
[31m-                Utils.setCisToken(requestSession);[m
[31m-                test.Log(Status.Info, "Enviando requisiÃ§Ã£o.");[m
[31m-                var responseSession = clientSession.Execute<ModelTheatersShowTimes>(requestSession);[m
[31m-[m
[31m-                //Valida retorno[m
[31m-                Assert.That((int)responseSession.StatusCode, Is.EqualTo(200), "Status Code divergente.");[m
[31m-                Assert.That (responseSession.Data.Theaters[0].TheaterCode, Is.EqualTo("688"), "CÃ³digo do Cinema 'TheaterCode' divergente");[m
[31m-                Assert.That(responseSession.Data.Theaters[0].Dates[0].ExhibitionDate, !Is.Null, "Data de exibiÃ§Ã£o nÃ£o informada");[m
[31m-                Assert.That(responseSession.Data.Theaters[0].Dates[0].ShowTimes[0].tht, Is.EqualTo("688"), "Id do Cinema diferente do que foi filtrado");[m
[31m-[m
[31m-                String ShowTime = responseSession.Data.Theaters[0].Dates[0].ShowTimes[0].ShowTimeId;[m
[31m-[m
[31m-                //Criando e enviando requisiÃ§Ã£o[m
[31m-                test.Log(Status.Info, "Criando requisiÃ§Ã£o responsÃ¡vel por realizar login.");[m
[31m-                var client = new RestClient(ConfigurationManager.AppSettings["dnsSensedia"]);[m
[31m-                var request = new RestRequest("ticket/v1/types?TheaterId=688&SessionCode=" + ShowTime, Method.GET);[m
[31m-[m
[31m-                request.RequestFormat = DataFormat.Json;[m
[31m-                test.Log(Status.Info, "Setando headers necessÃ¡rios para realizar a requisiÃ§Ã£o.");[m
[31m-                Utils.setCisToken(request);[m
[31m-                test.Log(Status.Info, "Enviando requisiÃ§Ã£o.");[m
[31m-                var response = client.Execute(request);[m
[31m-[m
[31m-                //InÃ­cio das validaÃ§Ãµes[m
[31m-                test.Log(Status.Info, "Validando se o Status Code de retorno da requisiÃ§Ã£o Ã© 200.");[m
[31m-                Assert.That((int)response.StatusCode, Is.EqualTo(200), "Status Code divergente.");[m
[31m-[m
[31m-                string responseContent = response.Content.ToString();[m
[31m-[m
[31m-                string[] properties = new string[] {"\"result\":", "\"internalId\":", "\"name\":", "\"price\":",[m
[31m-                 "\"service\":", "\"serviceType\":", "\"total\":", "\"maxQuantity\":", "\"messageHelp\":", "\"order\":", "\"typeId\":",[m
[31m-                 "\"typeName\":", "\"ticketAvailable\":", "\"partner\":", "\"dynamic\":"};[m
[31m-[m
[31m-                test.Log(Status.Info,"PrÃ© validaÃ§Ã£o - Valida se existe o corpo do json");[m
[31m-                if (responseContent != null)[m
[31m-                {[m
[31m-                    test.Log(Status.Info, "Validando o retorno das propriedades.");[m
[31m-                    test.Log(Status.Info, "Validando o contrato.");[m
[31m-                    utils.Utils.validaContrato(properties, responseContent, test);[m
[31m-                    test.Log(Status.Info, "Termino de cenÃ¡rio com sucesso.");[m
[31m-                }[m
[31m- [m
[31m-            }[m
[31m-            catch (Exception e)[m
[31m-            {[m
[31m-                test.Log(Status.Fail, e.ToString());[m
[31m-                throw new Exception("Falha ao validar dados de consulta de ingresso: " + e.Message);[m
[31m-            }[m
[31m-        }[m
[31m-[m
[31m-        [Test][m
[31m-        public void ValidaBinBradescoValido()[m
[32m+[m[32m        public void ValidaBinBradescoInvalido()[m
         {[m
[31m-[m
             ExtentTest test = null;[m
[31m-[m
[31m-            test = extent.CreateTest("ValidaBinBradescoValido").Info("InÃ­cio do teste.");[m
[32m+[m[32m            test = extent.CreateTest("ValidaBinBradescoInvalido").Info("InÃ­cio do teste.");[m
 [m
             try[m
             {[m
[31m-                //Criando e enviando requisiÃ§Ã£o[m
[31m-                test.Log(Status.Info, "Criando requisiÃ§Ã£o responsÃ¡vel por realizar login.");[m
[32m+[m[32m                //Criando e enviando requisiÃ§Ã£o responsÃ¡vel por validar bin invÃ¡lido[m[41m [m
[32m+[m[32m                test.Log(Status.Info, "Criando requisiÃ§Ã£o responsÃ¡vel por validar bin invÃ¡lido.");[m
                 var client = new RestClient(ConfigurationManager.AppSettings["dnsSensedia"]);[m
[31m-                var request = new RestRequest("ticket/v1/card/validate", Method.POST);[m
[31m-                request.RequestFormat = DataFormat.Json;[m
[32m+[m[32m                var requestConsultaBinInvalido = new RestRequest("ticket/v1/card/validate", Method.POST);[m
[32m+[m[32m                requestConsultaBinInvalido.RequestFormat = DataFormat.Json;[m
 [m
[31m-                request.AddJsonBody(new[m
[32m+[m[32m                //Montando o body da requisiÃ§Ã£o que serÃ¡ enviada[m
[32m+[m[32m                requestConsultaBinInvalido.AddJsonBody(new[m
                 {[m
[31m-                    theater = "688",[m
[31m-                    code = "411111"[m
[32m+[m[32m                    Theater = "688",[m
[32m+[m[32m                    Code = "999999"[m
                 }[m
[31m-               );[m
[31m-                test.Log(Status.Info, "Setando headers necessÃ¡rios para realizar a requisiÃ§Ã£o.");[m
[31m-                Utils.setCisToken(request);[m
[31m-                test.Log(Status.Info, "Enviando requisiÃ§Ã£o.");[m
[31m-                var response = client.Execute(request);[m
[32m+[m[32m                );[m
[32m+[m[32m                test.Log(Status.Info, "Setando headers necessÃ¡rios para enviar a requisiÃ§Ã£o.");[m
[32m+[m[32m                Utils.setCisToken(requestConsultaBinInvalido);[m
[32m+[m[32m                test.Log(Status.Info, "Enviando requisiÃ§Ã£o responsÃ¡vel por validar bin invÃ¡lido.");[m
[32m+[m[32m                var responseConsultaBinInvalido = client.Execute<ModelTicket>(requestConsultaBinInvalido);[m
 [m
                 //InÃ­cio das validaÃ§Ãµes[m
                 test.Log(Status.Info, "Validando se o Status Code de retorno da requisiÃ§Ã£o Ã© 200.");[m
[31m-                Assert.That((int)response.StatusCode, Is.EqualTo(200), "Status Code divergente.");[m
[31m-[m
[31m-                string responseContent = response.Content.ToString();[m
[31m-[m
[31m-                string[] properties = new string[] {"\"transacao\":", "\"beneficios\":", "\"desconto\":", "\"descricao\":",[m
[31m-                 "\"id\":", "\"quantidade\":", "\"resgatado\":", "\"tipo\":", "\"validade\":", "\"codigo\":", "\"dataTransacao\":",[m
[31m-                 "\"especificacaoIngresso\":", "\"listaBeneficio\":", "\"mensagem\":", "\"mensagemFormatada\":", "\"metodo\":",[m
[31m-                 "\"offline\":", "\"permiteUpgrade\":", "\"sessao\":", "\"tid\":", "\"valorUpgradeDesconto\":", "\"valorUpgradeInteira\":"};[m
[31m-[m
[31m-                test.Log(Status.Info, "PrÃ© validaÃ§Ã£o - Valida se existe o corpo do json");[m
[31m-                if (responseContent != null)[m
[31m-                {[m
[31m-                    test.Log(Status.Info, "Validando o retorno das propriedades.");[m
[31m-                    test.Log(Status.Info, "Validando o contrato.");[m
[31m-                    utils.Utils.validaContrato(properties, responseContent, test);[m
[31m-                    test.Log(Status.Info, "Contrato validado com sucesso.");[m
[31m-                }[m
[31m-                if (properties != null)[m
[31m-                {[m
[31m-                    test.Log(Status.Info, "Validando cÃ³digo de retorno.");[m
[31m-[m
[31m-                    if (responseContent.Contains("\"transacao\":") && responseContent.Contains("\"codigo\":0"))[m
[31m-                    {[m
[31m-                        test.Log(Status.Info, "CÃ³digo de retorno validado com sucesso.");[m
[31m-                    }[m
[31m-                    else[m
[31m-                    {[m
[31m-                        test.Log(Status.Fail, "CÃ³digo Incorreto.");[m
[31m-                    }[m
[31m-[m
[31m-                    test.Log(Status.Info, "Termino de cenÃ¡rio com sucesso.");[m
[31m-                }[m
[31m-[m
[31m-               [m
[32m+[m[32m                Assert.That((int)responseConsultaBinInvalido.StatusCode, Is.EqualTo(200), "Status Code divergente.");[m
[32m+[m[32m                test.Log(Status.Info, "Validando o retorno das propriedades.");[m
[32m+[m[32m                Assert.That(responseConsultaBinInvalido.Data.transacao.codigo, Is.EqualTo(1), "Valor da propriedade 'codigo' divergente");[m
[32m+[m[32m                Assert.That(responseConsultaBinInvalido.Data.transacao.mensagem, Is.EqualTo("CartÃ£o InvÃ¡lido!"), "Valor da propriedade 'mensagem' divergente");[m
[32m+[m[32m                test.Log(Status.Pass, "Testes ok! Todas as validaÃ§Ãµes foram realizadas com sucesso.");[m
             }[m
             catch (Exception e)[m
             {[m
                 test.Log(Status.Fail, e.ToString());[m
[31m-                throw new Exception("Falha ao validar dados de consulta de ingresso: " + e.Message);[m
[32m+[m[32m                throw new Exception("Falha ao validar a mensagem de crÃ­tica que Ã© exibida ao validar um bin bradesco invÃ¡lido: " + e.Message);[m
             }[m
         }[m
 [m
[32m+[m
         [Test][m
[31m-        public void ValidaBinBradescoInvalido()[m
[32m+[m[32m        public void ValidaBinBradescoValido()[m
         {[m
[31m-[m
             ExtentTest test = null;[m
[31m-[m
[31m-            test = extent.CreateTest("ValidaBinBradescoInvalido").Info("InÃ­cio do teste.");[m
[32m+[m[32m            test = extent.CreateTest("ValidaBinBradescoValido").Info("InÃ­cio do teste.");[m
 [m
             try[m
             {[m
[31m-                //Criando e enviando requisiÃ§Ã£o[m
[31m-                test.Log(Status.Info, "Criando requisiÃ§Ã£o responsÃ¡vel por realizar login.");[m
[32m+[m[32m                //Criando e enviando requisiÃ§Ã£o responsÃ¡vel por validar bin vÃ¡lido[m[41m [m
[32m+[m[32m                test.Log(Status.Info, "Criando requisiÃ§Ã£o responsÃ¡vel por validar bin vÃ¡lido.");[m
                 var client = new RestClient(ConfigurationManager.AppSettings["dnsSensedia"]);[m
[31m-                var request = new RestRequest("ticket/v1/card/validate", Method.POST);[m
[31m-                request.RequestFormat = DataFormat.Json;[m
[32m+[m[32m                var requestConsultaBinValido = new RestRequest("ticket/v1/card/validate", Method.POST);[m
[32m+[m[32m                requestConsultaBinValido.RequestFormat = DataFormat.Json;[m
 [m
[31m-                request.AddJsonBody(new[m
[32m+[m[32m                //Montando o body da requisiÃ§Ã£o que serÃ¡ enviada[m
[32m+[m[32m                requestConsultaBinValido.AddJsonBody(new[m
                 {[m
[31m-                    theater = "785",[m
[31m-                    code = "999999"[m
[32m+[m[32m                    Theater = "688",[m
[32m+[m[32m                    Code = "411111"[m
                 }[m
[31m-               );[m
[31m-                test.Log(Status.Info, "Setando headers necessÃ¡rios para realizar a requisiÃ§Ã£o.");[m
[31m-                Utils.setCisToken(request);[m
[31m-                test.Log(Status.Info, "Enviando requisiÃ§Ã£o.");[m
[31m-                var response = client.Execute(request);[m
[32m+[m[32m                );[m
[32m+[m[32m                test.Log(Status.Info, "Setando headers necessÃ¡rios para enviar a requisiÃ§Ã£o.");[m
[32m+[m[32m                Utils.setCisToken(requestConsultaBinValido);[m
[32m+[m[32m                test.Log(Status.Info, "Enviando requisiÃ§Ã£o responsÃ¡vel por validar bin vÃ¡lido.");[m
[32m+[m[32m                var responseConsultaBinValido = client.Execute<ModelTicket>(requestConsultaBinValido);[m
 [m
                 //InÃ­cio das validaÃ§Ãµes[m
                 test.Log(Status.Info, "Validando se o Status Code de retorno da requisiÃ§Ã£o Ã© 200.");[m
[31m-                Assert.That((int)response.StatusCode, Is.EqualTo(200), "Status Code divergente.");[m
[31m-[m
[31m-                string responseContent = response.Content.ToString();[m
[31m-[m
[31m-                string[] properties = new string[] {"\"transacao\":", "\"beneficios\":", "\"desconto\":", "\"descricao\":",[m
[31m-                 "\"id\":", "\"quantidade\":", "\"resgatado\":", "\"tipo\":", "\"validade\":", "\"codigo\":", "\"dataTransacao\":",[m
[31m-                 "\"especificacaoIngresso\":", "\"listaBeneficio\":", "\"mensagem\":", "\"mensagemFormatada\":", "\"metodo\":",[m
[31m-                 "\"offline\":", "\"permiteUpgrade\":", "\"sessao\":", "\"tid\":", "\"valorUpgradeDesconto\":", "\"valorUpgradeInteira\":"};[m
[31m-[m
[31m-                test.Log(Status.Info, "PrÃ© validaÃ§Ã£o - Valida se existe o corpo do json");[m
[31m-                if (responseContent != null)[m
[31m-                {[m
[31m-                    test.Log(Status.Info, "Validando o retorno das propriedades.");[m
[31m-                    test.Log(Status.Info, "Validando o contrato.");[m
[31m-                    utils.Utils.validaContrato(properties, responseContent, test);                            [m
[31m-                    test.Log(Status.Info, "Contrato validado com sucesso.");[m
[31m-                }[m
[31m-                if (properties != null)[m
[31m-                {[m
[31m-                    test.Log(Status.Info, "Validando cÃ³digo de retorno.");[m
[31m-[m
[31m-                    if (responseContent.Contains("\"transacao\":") && responseContent.Contains("\"codigo\":1") && responseContent.Contains("\"mensagem\":\"CartÃ£o InvÃ¡lido!\""))[m
[31m-                    {[m
[31m-                        test.Log(Status.Info, "mensagem retorno de cartÃ£o invÃ¡lido validado com sucesso.");[m
[31m-                    }[m
[31m-                    else[m
[31m-                    {[m
[31m-                        test.Log(Status.Fail, "CÃ³digo ou mensagem fora do contexto acima.");[m
[31m-                    }[m
[31m-[m
[31m-                    test.Log(Status.Info, "Termino de cenÃ¡rio com sucesso.");[m
[31m-                }[m
[31m-[m
[31m-[m
[32m+[m[32m                Assert.That((int)responseConsultaBinValido.StatusCode, Is.EqualTo(200), "Status Code divergente.");[m
[32m+[m[32m                test.Log(Status.Info, "Validando o retorno das propriedades.");[m
[32m+[m[32m                Assert.That(responseConsultaBinValido.Data.transacao.codigo, Is.EqualTo(0), "Valor da propriedade 'codigo' divergente");[m
[32m+[m[32m                Assert.That(responseConsultaBinValido.Data.transacao.mensagem, Is.EqualTo(""), "Valor da propriedade 'mensagem' divergente");[m
[32m+[m[32m                test.Log(Status.Pass, "Testes ok! Todas as validaÃ§Ãµes foram realizadas com sucesso.");[m
             }[m
             catch (Exception e)[m
             {[m
                 test.Log(Status.Fail, e.ToString());[m
[31m-                throw new Exception("Falha ao validar dados de consulta de ingresso: " + e.Message);[m
[32m+[m[32m                throw new Exception("Falha ao validar a verificaÃ§Ã£o de um cartÃ£o bradesco vÃ¡lido: " + e.Message);[m
             }[m
         }[m
[31m-[m
     }[m
 }[m
[1mdiff --git a/EcommerceBackend/tests/Users.cs b/EcommerceBackend/tests/Users.cs[m
[1mindex 917ff8c..27fa76d 100644[m
[1m--- a/EcommerceBackend/tests/Users.cs[m
[1m+++ b/EcommerceBackend/tests/Users.cs[m
[36m@@ -1,12 +1,11 @@[m
 ï»¿using System.Configuration;[m
 using System;[m
[31m-using EcommerceBackend.models.Users;[m
[32m+[m[32musing EcommerceBackend.models.Loyalty;[m
 using NUnit.Framework;[m
 using RestSharp;[m
 using AventStack.ExtentReports;[m
 using AventStack.ExtentReports.Reporter;[m
 using AventStack.ExtentReports.Reporter.Configuration;[m
[31m-using System.Collections.Generic;[m
 [m
 namespace EcommerceBackend[m
 {[m
[36m@@ -19,13 +18,13 @@[m [mnamespace EcommerceBackend[m
         public void StartReport()[m
         {[m
             extent = new ExtentReports();[m
[31m-            var htmlReporter = new ExtentHtmlReporter(@"C:\AutomationTools\EcommerceBackendReports\Reports\Users\");[m
[32m+[m[32m            var htmlReporter = new ExtentHtmlReporter(@"C:\EcommerceBackendReports\Reports\Users\");[m
             extent.AttachReporter(htmlReporter);[m
         }[m
 [m
         [OneTimeTearDown][m
         public void CloseReport()[m
[31m-        {[m
[32m+[m[32m        {[m[41m          [m
             extent.Flush();[m
         }[m
 [m
[36m@@ -42,25 +41,12 @@[m [mnamespace EcommerceBackend[m
                 var client = new RestClient(ConfigurationManager.AppSettings["dnsSensedia"]);[m
                 var request = new RestRequest("bus/v1/users/login/byapp", Method.POST);[m
                 request.RequestFormat = DataFormat.Json;[m
[31m-[m
[31m-                //metodo que o andre fazia, era necessario atribuir um valor aos campos criados na model[m
[31m-                //criar uma model [m
[31m-[m
[31m-                //request.AddJsonBody(new[m
[31m-                //{[m
[31m-                //    Email = "automaticusers@mailinator.com",[m
[31m-                //    Password = "112233"[m
[31m-                //}[m
[31m-                //);[m
[31m-[m
[31m-[m
[31m-[m
[31m-                string json = @"{[m
[31m-                              'email': 'automaticusers@mailinator.com',[m
[31m-                              'password': '112233'[m
[31m-                                 }";[m
[31m-                    [m
[31m-                request.AddParameter("application/json", json, ParameterType.RequestBody);[m
[32m+[m[32m                request.AddJsonBody(new[m
[32m+[m[32m                {[m
[32m+[m[32m                    Email = "automaticusers@mailinator.com",[m
[32m+[m[32m                    Password = "112233"[m
[32m+[m[32m                }[m
[32m+[m[32m                );[m
                 test.Log(Status.Info, "Setando headers necessÃ¡rios para realizar a requisiÃ§Ã£o.");[m
                 utils.Utils.setCisToken(request);[m
                 test.Log(Status.Info, "Enviando requisiÃ§Ã£o.");[m
[36m@@ -88,11 +74,11 @@[m [mnamespace EcommerceBackend[m
                 Assert.That(response.Data.Member.Phone1, Is.EqualTo("1136362525"), "Valor da propriedade 'Phone1' divergente.");[m
                 Assert.That(response.Data.NLPActive, Is.EqualTo("True"), "Valor da propriedade 'NLPActive' divergente.");[m
                 test.Log(Status.Pass, "Teste ok, todas as verificaÃ§Ãµes foram realizadas com sucesso.");[m
[31m-            }[m
[32m+[m[32m            }[m[41m [m
             catch (Exception e)[m
             {[m
                 test.Log(Status.Fail, e.ToString());[m
[31m-                throw new Exception("Falha ao validar dados do login do usuÃ¡rio: " + e.Message);[m
[32m+[m[32m                throw new Exception("Falha ao validar dados do login do usuÃ¡rio: " + e.Message);[m[41m        [m
             }[m
         }[m
 [m
[36m@@ -102,7 +88,7 @@[m [mnamespace EcommerceBackend[m
             ExtentTest test = null;[m
             test = extent.CreateTest("ValidaEsqueciMinhaSenha").Info("InÃ­cio do teste.");[m
 [m
[31m-            try[m
[32m+[m[32m            try[m[41m [m
             {[m
                 //Criando e enviando a requisiÃ§Ã£o[m
                 test.Log(Status.Info, "Criando requisiÃ§Ã£o.");[m
[36m@@ -131,94 +117,7 @@[m [mnamespace EcommerceBackend[m
                 test.Log(Status.Fail, e.ToString());[m
                 throw new Exception("Falha ao validar a funcionalidade 'Esqueci minha senha'. " + e.Message);[m
             }[m
[31m-[m
[31m-        }[m
[31m-[m
[31m-        [Test][m
[31m-        public void ValidaEsqueciMinhaSenhaServicoNovo()[m
[31m-        {[m
[31m-            ExtentTest test = null;[m
[31m-            test = extent.CreateTest("ValidaEsqueciMinhaSenhaServicoNovo").Info("InÃ­cio do teste.");[m
[31m-[m
[31m-            try[m
[31m-            {[m
[31m-                //Criando e enviando a requisiÃ§Ã£o[m
[31m-                test.Log(Status.Info, "Criando requisiÃ§Ã£o.");[m
[31m-                var client = new RestClient(ConfigurationManager.AppSettings["dnsSensedia"]);[m
[31m-                var request = new RestRequest("users/v1/users/passwordrecovery", Method.POST);[m
[31m-                request.RequestFormat = DataFormat.Json;[m
[31m-                request.AddJsonBody(new[m
[31m-[m
[31m-                {[m
[31m-[m
[31m-                    Email = "gqsilvaa@mailinator.com"[m
[31m-[m
[31m-                }[m
[31m-                );[m
[31m-                test.Log(Status.Info, "Setando headers necessÃ¡rios para realizar a requisiÃ§Ã£o.");[m
[31m-                utils.Utils.setCisToken(request);[m
[31m-                test.Log(Status.Info, "Enviando requisiÃ§Ã£o.");[m
[31m-                var response = client.Execute(request);[m
[31m-[m
[31m-[m
[31m-                //InÃ­cio da validaÃ§Ã£o[m
[31m-                test.Log(Status.Info, "InÃ­cio das validaÃ§Ãµes.");[m
[31m-                Assert.That((int)response.StatusCode, Is.EqualTo(200), "Status Code divergente.");                [m
[31m-                test.Log(Status.Pass, "Teste ok, todas as verificaÃ§Ãµes foram realizadas com sucesso.");[m
[31m-[m
[31m-            }[m
[31m-            catch (Exception e)[m
[31m-            {[m
[31m-                test.Log(Status.Fail, e.ToString());[m
[31m-                throw new Exception("Falha ao validar a funcionalidade 'Esqueci minha senha'. " + e.Message);[m
[31m-            }[m
[31m-[m
[31m-        }[m
[31m-[m
[31m-        [Test][m
[31m-        public void ValidaDisparadorDeEmail()[m
[31m-        {[m
[31m-            ExtentTest test = null;[m
[31m-            test = extent.CreateTest("ValidaDisparadorDeEmail").Info("InÃ­cio do teste.");[m
[31m-[m
[31m-            try[m
[31m-            {[m
[31m-                //Criando e enviando a requisiÃ§Ã£o[m
[31m-                test.Log(Status.Info, "Criando requisiÃ§Ã£o.");[m
[31m-                var client = new RestClient(ConfigurationManager.AppSettings["dnsSensedia"]);[m
[31m-                var request = new RestRequest("bus/v1/users/createmessagelocaweb", Method.POST);[m
[31m-                request.RequestFormat = DataFormat.Json;[m
[31m-                request.AddJsonBody(new[m
[31m-[m
[31m-                {[m
[31m-[m
[31m-                    MessageFrom= "automaticusers@mailinator.com",[m
[31m-                    MessageTo= "testeSemDominio",[m
[31m-                    Subject= "RecuperaÃ§Ã£o de senha",[m
[31m-                    Body= "PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBYSFRNTCAxLjAgVHJhbnNpdGlvbmFsLy9FTiIgImh0dHA6Ly93d3cudzMub3JnL1RSL3hodG1sMS9EVEQveGh0bWwxLXRyYW5zaXRpb25hbC5kdGQiPjxodG1sIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sIj48aGVhZD4gPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT04IiAvPjwvaGVhZD48Ym9keT4gPHRhYmxlIGJvcmRlcj0iMCIgYWxpZ249ImNlbnRlciIgc3R5bGU9IndpZHRoOjYwMHB4O2ZvbnQtc2l6ZTogMTJweDtjb2xvcjogIzY2NjsgZm9udC1mYW1pbHk6IFZlcmRhbmEsIEdlbmV2YSwgQXJpYWwsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsiPiA8dHI+IDx0ZCB3aWR0aD0iMTYycHg7Ij48aW1nIHNyYz0iaHR0cDovL2hvbW9sb2ctY25rLWJ1cy5jaW5lbWFyay5jb20uYnIvaW1hZ2VzL2NvbW1vbi9jaW5lbWFyay5qcGciIGJvcmRlcj0iMCIgLz48L3RkPiA8dGQ+PGhyIG5vc2hhZGU94oCdbm9zaGFkZeKAnSB3aWR0aD0iMTAwJSIgc2l6ZT0iMSIgYWxpZ249InJpZ2h0IiBjb2xvcj0iI0I1MTIxQiIgLz48L3RkPiA8L3RyPiA8dHI+IDx0ZCBjb2xzcGFuPSIyIj4gPHA+T2zDoSA8c3Ryb25nPkFkcmlhbm8gU21va292aXRaIERvaXM8L3N0cm9uZz4hPC9wPiA8YnIgLz5BdGVuZGVuZG8gYW8gc2V1IHBlZGlkbyBkZSByZWN1cGVyYcOnw6NvIGRlIHNlbmhhLCBzZWd1ZSBhIG5vdmEgc2VuaGEgY3JpYWRhOiA8cD4gPHNwYW4gc3R5bGU9ImNvbG9yOiMwMDA7IGZvbnQtd2VpZ2h0OmJvbGQiPng0MW0zajwvc3Bhbj4gPC9wPiBBdGVuY2lvc2FtZW50ZSwgPGJyIC8+IENsdWJlIENpbmVtYXJrIDxwPiA8ZGl2IHN0eWxlPSJmbG9hdDpsZWZ0O3BhZGRpbmc6NXB4OyB3aWR0aDoxMDAlO2JhY2tncm91bmQtY29sb3I6I2Y0ZjRmNDtmb250LXNpemU6IDExcHg7Y29sb3I6IzY2NjtsaW5lLWhlaWdodDogMThweDttYXJnaW46IDAgMTBweCAxMHB4IDA7Zm9udC1mYW1pbHk6VmVyZGFuYSwgR2VuZXZhLCBBcmlhbCwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyI+IFBhcmEgc3VhIHNlZ3VyYW7Dp2EgbsOjbyByZXZlbGUgc3VhIHNlbmhhIGEgbmluZ3XDqW0uPGJyIC8+IFNlIHZvY8OqIG7Do28gc29saWNpdG91IHN1YSBzZW5oYSwgbsOjbyBzZSBwcmVvY3VwZS4gRXNzYSBtZW5zYWdlbSBmb2kgZW52aWFkYSBhcGVuYXMgcGFyYSBvIHNldSBlLW1haWwsIGUgc8OzIHZvY8OqIHRlbSBhY2Vzc28gYSBlbGEuIDwvZGl2PiA8L3A+IDwvdGQ+IDwvdHI+IDx0cj4gPHRkIGNvbHNwYW49IjIiPjxociBub3NoYWRlPeKAnW5vc2hhZGXigJ0gd2lkdGg9IjEwMCUiIHNpemU9IjEiIGFsaWduPSJyaWdodCIgY29sb3I9IiNCNTEyMUIiIC8+PC90ZD4gPC90cj4gPC90YWJsZT48L2JvZHk+PC9odG1sPg==",[m
[31m-                    MessageType= 10[m
[31m-[m
[31m-                }[m
[31m-                );[m
[31m-                test.Log(Status.Info, "Setando headers necessÃ¡rios para realizar a requisiÃ§Ã£o.");[m
[31m-                utils.Utils.setCisToken(request);[m
[31m-                test.Log(Status.Info, "Enviando requisiÃ§Ã£o.");[m
[31m-                var response = client.Execute(request);[m
[31m-[m
[31m-[m
[31m-                //InÃ­cio da validaÃ§Ã£o[m
[31m-                test.Log(Status.Info, "InÃ­cio das validaÃ§Ãµes.");[m
[31m-                Assert.That((int)response.StatusCode, Is.EqualTo(200), "Status Code divergente.");[m
[31m-                Assert.That(response.Content, Is.EqualTo("true"), "ServiÃ§o retornou false");[m
[31m-                test.Log(Status.Pass, "Teste ok, todas as verificaÃ§Ãµes foram realizadas com sucesso.");[m
[31m-[m
[31m-            }[m
[31m-            catch (Exception e)[m
[31m-            {[m
[31m-                test.Log(Status.Fail, e.ToString());[m
[31m-                throw new Exception("Falha ao validar a funcionalidade 'Disparador de Email'. " + e.Message);[m
[31m-            }[m
[31m-[m
[32m+[m[41m            [m
         }[m
 [m
         [Test][m
[36m@@ -227,8 +126,7 @@[m [mnamespace EcommerceBackend[m
             ExtentTest test = null;[m
             test = extent.CreateTest("ValidaMensagemCriticaLoginInvalido").Info("InÃ­cio do teste.");[m
 [m
[31m-            try[m
[31m-            {[m
[32m+[m[32m            try {[m
                 //Criando e enviando a requisiÃ§Ã£o[m
                 test.Log(Status.Info, "Criando requisiÃ§Ã£o");[m
                 var client = new RestClient(ConfigurationManager.AppSettings["dnsSensedia"]);[m
[36m@@ -248,15 +146,15 @@[m [mnamespace EcommerceBackend[m
                 //InÃ­cio das validaÃ§Ãµes[m
                 test.Log(Status.Info, "Validando se o Status Code de retorno da requisiÃ§Ã£o Ã© 400.");[m
                 Assert.That((int)response.StatusCode, Is.EqualTo(400), "Status Code divergente.");[m
[31m-                Assert.That(response.Data.Message, Is.EqualTo("UsuÃ¡rio e/ou Senha invÃ¡lidos !"), "Valor da propriedade 'Message' divergente.");[m
[32m+[m[32m                Assert.That(response.Data.Message, Is.EqualTo("UsuÃ¡rio ou Senha divergentes !"), "Valor da propriedade 'Message' divergente.");[m
                 test.Log(Status.Pass, "Teste ok! As validaÃ§Ãµes foram realizadas com sucesso.");[m
             }[m
[31m-            catch (Exception e)[m
[32m+[m[32m            catch(Exception e)[m
             {[m
                 test.Log(Status.Fail, e.ToString());[m
                 throw new Exception("Falha ao validar a mensagem de crÃ­tica ao realizar login com um login invÃ¡lido: " + e.Message);[m
             }[m
[31m-[m
[32m+[m[41m            [m
         }[m
 [m
         [Test][m
[36m@@ -302,21 +200,21 @@[m [mnamespace EcommerceBackend[m
                 Assert.That(response.Data.Member.Phone1, Is.EqualTo("1136362525"), "Valor da propriedade 'Phone1' divergente.");[m
                 test.Log(Status.Pass, "Teste ok, todas as verificaÃ§Ãµes foram realizadas com sucesso.");[m
             }[m
[31m-            catch (Exception e)[m
[31m-            {[m
[32m+[m[32m            catch(Exception e)[m
[32m+[m[32m            {[m[41m               [m
                 test.Log(Status.Fail, e.ToString());[m
                 throw new Exception("Falha ao validar dados do usuÃ¡rio: " + e.Message);[m
             }[m
[31m-[m
[32m+[m[41m            [m
         }[m
 [m
         [Test][m
[31m-        public void ValidaCriacaoUsuario()[m
[32m+[m[32m        public void ValidaCriacaoUsuario()[m[41m [m
         {[m
             ExtentTest test = null;[m
             test = extent.CreateTest("ValidaCriacaoUsuario").Info("InÃ­cio do teste.");[m
 [m
[31m-            try[m
[32m+[m[32m            try[m[41m [m
             {[m
                 //Gerando um e-mail aleatÃ³rio que serÃ¡ utilizado na criaÃ§Ã£o do usuÃ¡rio[m
                 test.Log(Status.Info, "Gerando e-mail aleatÃ³rio que serÃ¡ utilizado no request de criaÃ§Ã£o do usuÃ¡rio.");[m
[36m@@ -401,7 +299,7 @@[m [mnamespace EcommerceBackend[m
 [m
                 //Enviando a requisiÃ§Ã£o realizando login com o usuÃ¡rio que acabou de ser criado[m
                 var responseRealizaLogin = client.Execute<ModelUsers>(requestRealizaLogin);[m
[31m-[m
[32m+[m[41m        [m
                 //Inicio das validaÃ§Ãµes[m
                 test.Log(Status.Info, "Validando se o Status Code de retorno da requisiÃ§Ã£o Ã© 200.");[m
                 Assert.That((int)responseRealizaLogin.StatusCode, Is.EqualTo(200), "Status Code diferente do esperado ao enviar requisiÃ§Ã£o responsÃ¡vel por realizar login com o usuÃ¡rio que teve seus dados editados");[m
[36m@@ -421,11 +319,11 @@[m [mnamespace EcommerceBackend[m
                 Assert.That(responseRealizaLogin.Data.Phone1, Is.EqualTo("1133333336"), "Valor da propriedade 'Phone1' divergente.");[m
                 test.Log(Status.Pass, "ValidaÃ§Ã£o ok, os dados do usuÃ¡rio foram alterados com sucesso.");[m
             }[m
[31m-            catch (Exception e)[m
[32m+[m[32m            catch (Exception e)[m[41m [m
             {[m
                 test.Log(Status.Fail, e.ToString());[m
                 throw new Exception("Falha ao validar a criaÃ§Ã£o de um usuÃ¡rio: " + e.Message);[m
[31m-            }[m
[32m+[m[32m            }[m[41m           [m
         }[m
 [m
         [Test][m
[36m@@ -497,7 +395,7 @@[m [mnamespace EcommerceBackend[m
                 Assert.That((int)responseCriaUsuario.StatusCode, Is.EqualTo(400), "Status Code diferente do esperado ao enviar requisiÃ§Ã£o criando um usuÃ¡rio utilizando um e-mail jÃ¡ cadastrado.");[m
 [m
                 test.Log(Status.Info, "Validando se a mensagem de crÃ­tica Ã© exibida.");[m
[31m-                Assert.That(responseCriaUsuario.Data.Message, Is.EqualTo("O e-mail informado jÃ¡ estÃ¡ sendo utilizado. Por favor, informe um endereÃ§o de e-mail diferente."), "Valor da propriedade 'Message' divergente.");[m
[32m+[m[32m                Assert.That(responseCriaUsuario.Data.Message, Is.EqualTo("O e-mail \""+emailJaCadastrado+"\" informado jÃ¡ estÃ¡ sendo utilizado! Por favor, informe um endereÃ§o de e-mail diferente."), "Valor da propriedade 'Message' divergente.");[m
                 test.Log(Status.Pass, "Teste ok! As validaÃ§Ãµes foram realizadas com sucesso.");[m
             }[m
             catch (Exception e)[m
[36m@@ -576,7 +474,7 @@[m [mnamespace EcommerceBackend[m
                 Assert.That((int)responseCriaUsuario.StatusCode, Is.EqualTo(400), "Status Code diferente do esperado ao enviar requisiÃ§Ã£o criando um usuÃ¡rio utilizando um cpf jÃ¡ cadastrado.");[m
 [m
                 test.Log(Status.Info, "Validando se a mensagem de crÃ­tica Ã© exibida.");[m
[31m-                Assert.That(responseCriaUsuario.Data.Message, Is.EqualTo("O CPF informado jÃ¡ estÃ¡ sendo utilizado."), "Valor da propriedade 'Message' divergente.");[m
[32m+[m[32m                Assert.That(responseCriaUsuario.Data.Message, Is.EqualTo("O CPF informado (\"19100000000\") jÃ¡ estÃ¡ sendo utilizado pelo e-mail testeqa@mailinator.com. Caso nÃ£o tenha mais acesso ao e-mail, entre em contato com o Fale Conosco."), "Valor da propriedade 'Message' divergente.");[m
                 test.Log(Status.Pass, "Teste ok! As validaÃ§Ãµes foram realizadas com sucesso.");[m
 [m
             }[m
[36m@@ -586,7 +484,7 @@[m [mnamespace EcommerceBackend[m
                 throw new Exception("Falha ao validar a mensagem de crÃ­tica que Ã© exibida ao criar um usuÃ¡rio utilizando e-mail jÃ¡ cadastrado: " + e.Message);[m
             }[m
         }[m
[31m-[m
[32m+[m[41m        [m
         [Test][m
         public void ValidaAlteraDadosUsuario()[m
         {[m
[36m@@ -594,10 +492,10 @@[m [mnamespace EcommerceBackend[m
             test = extent.CreateTest("ValidaAlteraDadosUsuario").Info("InÃ­cio do teste.");[m
             string email = "testealteradados@mailinator.com";[m
 [m
[31m-            try[m
[32m+[m[32m            try[m[41m [m
             {[m
                 string authorizationToken = utils.Utils.getAuthorization(email, "112233");[m
[31m-[m
[32m+[m[41m                [m
                 //Criando a requisiÃ§Ã£o responsÃ¡vel por editar os dados de um usuÃ¡rio[m
                 test.Log(Status.Info, "Criando a requisiÃ§Ã£o responsÃ¡vel por editar os dados usuÃ¡rio.");[m
                 var client = new RestClient(ConfigurationManager.AppSettings["dnsSensedia"]);[m
[36m@@ -612,7 +510,7 @@[m [mnamespace EcommerceBackend[m
                     {[m
                         CityId = 1,[m
                         Name = "AcrelÃ¢ndia",[m
[31m-                        State = new[m
[32m+[m[32m                        State = new[m[41m [m
                         {[m
                             Code = "AC",[m
                             StateId = 2,[m
[36m@@ -688,7 +586,7 @@[m [mnamespace EcommerceBackend[m
                 Assert.That(responseRealizaLogin.Data.City.State.Code, Is.EqualTo("AC"), "Valor da propriedade 'City.State.Code' divergente.");[m
                 Assert.That(responseRealizaLogin.Data.City.State.Name, Is.EqualTo("Acre"), "Valor da propriedade 'City.State.Name' divergente.");[m
                 Assert.That(responseRealizaLogin.Data.Phone1, Is.EqualTo("1136333333"), "Valor da propriedade 'Phone1' divergente.");[m
[31m-[m
[32m+[m[41m                [m
                 //Criando requisiÃ§Ã£o alterando os dados novamente, realizando rollback[m
                 test.Log(Status.Info, "Criando a requisiÃ§Ã£o responsÃ¡vel por realizar o rollback dos dados usuÃ¡rio.");[m
                 var requestRealizaRollback = new RestRequest("bus/v1/users", Method.PUT);[m
[36m@@ -739,206 +637,103 @@[m [mnamespace EcommerceBackend[m
                 test.Log(Status.Pass, "ValidaÃ§Ã£o ok, os dados do usuÃ¡rio foram alterados com sucesso.");[m
 [m
             }[m
[31m-            catch (Exception e)[m
[32m+[m[32m            catch (Exception e)[m[41m [m
             {[m
                 test.Log(Status.Fail, e.ToString());[m
                 throw new Exception("Falha ao validar a ediÃ§Ã£o de dados de um usuÃ¡rio: " + e.Message);[m
             }[m
         }[m
 [m
[31m-        //[Test]    // Teste com bug no TFS - por isso comentado para nÃ£o quebrar no jenkins[m
[31m-        //public void ValidaAlteraSenhaUsuario()[m
[31m-        //{[m
[31m-        //    ExtentTest test = null;[m
[31m-        //    test = extent.CreateTest("ValidaAlteraSenhaUsuario").Info("InÃ­cio do teste.");[m
[31m-        //    string email = "alterasenha@mailinator.com";[m
[31m-        //    double userId = 6947512;[m
[31m-[m
[31m-        //    try[m
[31m-        //    {[m
[31m-        //        //Coletando token "authorization"[m
[31m-        //        string authorizationToken = utils.Utils.getAuthorization(email,"112233");[m
[31m-[m
[31m-        //        //Criando e enviando a requisiÃ§Ã£o responsÃ¡vel por alterar a senha do usuÃ¡rio[m
[31m-        //        test.Log(Status.Info, "Criando requisiÃ§Ã£o responsÃ¡vel por alterar a senha do usuÃ¡rio.");[m
[31m-        //        var client = new RestClient(ConfigurationManager.AppSettings["dnsSensedia"]);[m
[31m-        //        var requestAlteraSenha = new RestRequest("bus/v1/users/changepassword", Method.POST);[m
[31m-        //        requestAlteraSenha.RequestFormat = DataFormat.Json;[m
[31m-        //        requestAlteraSenha.AddJsonBody(new[m
[31m-        //        {[m
[31m-        //            UserId = userId,[m
[31m-        //            CurrentPassword = "112233", [m
[31m-        //            NewPassword = "111111",[m
[31m-        //            PasswordConfirmation = "111111"[m
[31m-        //        }[m
[31m-        //        );[m
[31m-[m
[31m-        //        test.Log(Status.Info, "Setando headers necessÃ¡rios para realizar a requisiÃ§Ã£o.");[m
[31m-        //        utils.Utils.setCisToken(requestAlteraSenha);[m
[31m-        //        utils.Utils.setAuthorizationToken(requestAlteraSenha, authorizationToken);[m
[31m-[m
[31m-        //        test.Log(Status.Info, "Enviando requisiÃ§Ã£o.");[m
[31m-        //        var responseAlteraSenha = client.Execute<ModelUsers>(requestAlteraSenha);[m
[31m-[m
[31m-        //        //InÃ­cio das validaÃ§Ãµes[m
[31m-        //        test.Log(Status.Info, "Validando se o Status Code de retorno da requisiÃ§Ã£o Ã© 200.");[m
[31m-        //        Assert.That((int)responseAlteraSenha.StatusCode, Is.EqualTo(200), "Status Code diferente do esperado ao enviar a requisiÃ§Ã£o responsÃ¡vel por realizar a alteraÃ§Ã£o de senha.");[m
[31m-[m
[31m-        //        //Criando e enviando a requisiÃ§Ã£o responsÃ¡vel por tentar realizar login com a nova senha[m
[31m-        //        test.Log(Status.Info, "Criando requisiÃ§Ã£o responsÃ¡vel por tentar realizar login com a senha nova.");[m
[31m-        //        var requestRealizaLoginSenhaAlterada = new RestRequest("bus/v1/users/login/byapp", Method.POST);[m
[31m-        //        requestRealizaLoginSenhaAlterada.RequestFormat = DataFormat.Json;[m
[31m-        //        requestRealizaLoginSenhaAlterada.AddJsonBody(new[m
[31m-        //        {[m
[31m-        //            Email = email,[m
[31m-        //            Password = "111111"[m
[31m-        //        }[m
[31m-        //        );[m
[31m-[m
[31m-        //        utils.Utils.setCisToken(requestRealizaLoginSenhaAlterada);[m
[31m-[m
[31m-        //        test.Log(Status.Info, "Enviando requisiÃ§Ã£o ");[m
[31m-        //        var responseRealizaLoginSenhaAlterada = client.Execute<ModelUsers>(requestRealizaLoginSenhaAlterada);[m
[31m-[m
[31m-        //        test.Log(Status.Info, "Validando se o Status Code de retorno da requisiÃ§Ã£o Ã© 200.");[m
[31m-        //        Assert.That((int)responseRealizaLoginSenhaAlterada.StatusCode, Is.EqualTo(200), "Status Code diferente do esperado ao enviar a requisiÃ§Ã£o responsÃ¡vel por realizar login com a senha que foi alterada.");[m
[31m-[m
[31m-        //        //Criando e enviando a requisiÃ§Ã£o responsÃ¡vel por realizar rollback na senha do usuÃ¡rio[m
[31m-        //        test.Log(Status.Info, "Criando requisiÃ§Ã£o responsÃ¡vel por realizar rollback na senha do usuÃ¡rio.");[m
[31m-        //        var requestRollbackSenha = new RestRequest("bus/v1/users/changepassword", Method.POST);[m
[31m-        //        requestRollbackSenha.RequestFormat = DataFormat.Json;[m
[31m-        //        requestRollbackSenha.AddJsonBody(new[m
[31m-        //        {[m
[31m-        //            UserId = userId,[m
[31m-        //            CurrentPassword = "111111",[m
[31m-        //            NewPassword = "112233",[m
[31m-        //            PasswordConfirmation = "112233"[m
[31m-        //        }[m
[31m-        //        );[m
[31m-[m
[31m-        //        test.Log(Status.Info, "Setando headers necessÃ¡rios para realizar a requisiÃ§Ã£o.");[m
[31m-        //        utils.Utils.setCisToken(requestRollbackSenha);[m
[31m-        //        utils.Utils.setAuthorizationToken(requestRollbackSenha, authorizationToken);[m
[31m-[m
[31m-        //        test.Log(Status.Info, "Enviando requisiÃ§Ã£o.");[m
[31m-        //        var responseRollbackSenha = client.Execute<ModelUsers>(requestRollbackSenha);[m
[31m-[m
[31m-        //        //InÃ­cio das validaÃ§Ãµes[m
[31m-        //        test.Log(Status.Info, "Validando se o Status Code de retorno da requisiÃ§Ã£o Ã© 200.");[m
[31m-        //        Assert.That((int)responseRollbackSenha.StatusCode, Is.EqualTo(200), "Status Code diferente do esperado ao enviar a requisiÃ§Ã£o responsÃ¡vel por realizar o rollback da senha.");[m
[31m-        //        test.Log(Status.Pass, "Teste ok! As validaÃ§Ãµes foram realizadas com sucesso.");[m
[31m-        //    }[m
[31m-        //    catch (Exception e)[m
[31m-        //    {[m
[31m-        //        test.Log(Status.Fail, e.ToString());[m
[31m-        //        throw new Exception("Falha ao validar a alteraÃ§Ã£o de senha do usuÃ¡rio: " + e.Message);[m
[31m-        //    }[m
[31m-[m
[31m-[m
[31m-        //}[m
[31m-[m
         [Test][m
[31m-        public void ValidaAlterarEmailUsuarioRecemCriado()[m
[32m+[m[32m        public void ValidaAlteraSenhaUsuario()[m
         {[m
             ExtentTest test = null;[m
[31m-            test = extent.CreateTest("ValidaAlterarEmailUsuarioRecemCriado").Info("InÃ­cio do teste.");[m
[32m+[m[32m            test = extent.CreateTest("ValidaAlteraSenhaUsuario").Info("InÃ­cio do teste.");[m
[32m+[m[32m            string email = "alterasenha@mailinator.com";[m
[32m+[m[32m            double userId = 6947512;[m
 [m
             try[m
             {[m
[31m-                //Gerando um e-mail aleatÃ³rio que serÃ¡ utilizado na criaÃ§Ã£o do usuÃ¡rio[m
[31m-                test.Log(Status.Info, "Gerando e-mail aleatÃ³rio que serÃ¡ utilizado no request de criaÃ§Ã£o do usuÃ¡rio.");[m
[31m-                string email = utils.Utils.gerarEmailAleatorio(8);[m
[31m-[m
[31m-                //Gerando um cpf aleatÃ³rio que serÃ¡ utilizado na criaÃ§Ã£o do usuÃ¡rio[m
[31m-                test.Log(Status.Info, "Gerando CPF aleatÃ³rio que serÃ¡ utilizado no request de criaÃ§Ã£o do usuÃ¡rio.");[m
[31m-                string cpf = utils.Utils.gerarCpf();[m
[31m-[m
[32m+[m[32m                //Coletando token "authorization"[m
[32m+[m[32m                string authorizationToken = utils.Utils.getAuthorization(email,"112233");[m
 [m
[31m-                //Criando a requisiÃ§Ã£o responsÃ¡vel por criar um usuÃ¡rio[m
[31m-                test.Log(Status.Info, "Criando a requisiÃ§Ã£o responsÃ¡vel por criar usuÃ¡rio.");[m
[32m+[m[32m                //Criando e enviando a requisiÃ§Ã£o responsÃ¡vel por alterar a senha do usuÃ¡rio[m
[32m+[m[32m                test.Log(Status.Info, "Criando requisiÃ§Ã£o responsÃ¡vel por alterar a senha do usuÃ¡rio.");[m
                 var client = new RestClient(ConfigurationManager.AppSettings["dnsSensedia"]);[m
[31m-                var requestCriaUsuario = new RestRequest("bus/v1/users", Method.POST);[m
[31m-                requestCriaUsuario.RequestFormat = DataFormat.Json;[m
[31m-[m
[31m-                //Montando o body da requisiÃ§Ã£o que serÃ¡ enviada[m
[31m-                requestCriaUsuario.AddJsonBody(new[m
[32m+[m[32m                var requestAlteraSenha = new RestRequest("bus/v1/users/changepassword", Method.POST);[m
[32m+[m[32m                requestAlteraSenha.RequestFormat = DataFormat.Json;[m
[32m+[m[32m                requestAlteraSenha.AddJsonBody(new[m
                 {[m
[31m-                    AppInfo = new[m
[31m-                    {[m
[31m-                        deviceModel = "Moto G Play",[m
[31m-                        devicePlatform = "Android",[m
[31m-                        deviceUUID = "62a0391e-9b4c-4870-ba11-40896b488506",[m
[31m-                        version = "4.0.20",[m
[31m-                    },[m
[31m-                    DateOfBirth = "2002-11-04T00:00:00.000Z",[m
[31m-                    CardNumber = "",[m
[31m-                    City = new[m
[31m-                    {[m
[31m-                        CityId = 12789,[m
[31m-                        Name = "Taguatinga",[m
[31m-                        State = new[m
[31m-                        {[m
[31m-                            Code = "DF",[m
[31m-                            StateId = 7,[m
[31m-                            Name = "Distrito Federal"[m
[31m-                        },[m
[31m-                        StateId = 7[m
[31m-                    },[m
[31m-                    CityId = 12789,[m
[31m-                    CPF = cpf,[m
[31m-                    CpfNf = false,[m
[31m-                    Email = email,[m
[31m-                    EndUserPolicyId = 3,[m
[31m-                    Gender = "M",[m
[31m-                    Name = "Test01",[m
[31m-                    NickName = "QA",[m
[31m-                    Password = "112233",[m
[31m-                    Phone1 = "1133333336"[m
[32m+[m[32m                    UserId = userId,[m
[32m+[m[32m                    CurrentPassword = "112233",[m[41m [m
[32m+[m[32m                    NewPassword = "111111",[m
[32m+[m[32m                    PasswordConfirmation = "111111"[m
                 }[m
                 );[m
[31m-[m
[31m-                //Setando header de autenticaÃ§Ã£o "X-CISIdentity"[m
[32m+[m[41m                [m
                 test.Log(Status.Info, "Setando headers necessÃ¡rios para realizar a requisiÃ§Ã£o.");[m
[31m-                utils.Utils.setCisToken(requestCriaUsuario);[m
[31m-[m
[32m+[m[32m                utils.Utils.setCisToken(requestAlteraSenha);[m
[32m+[m[32m                utils.Utils.setAuthorizationToken(requestAlteraSenha, authorizationToken);[m
[32m+[m[41m                [m
[32m+[m[32m                test.Log(Status.Info, "Enviando requisiÃ§Ã£o.");[m
[32m+[m[32m                var responseAlteraSenha = client.Execute<ModelUsers>(requestAlteraSenha);[m
 [m
[31m-                //Enviando a requisiÃ§Ã£o[m
[31m-                test.Log(Status.Info, "Enviando a requisiÃ§Ã£o.");[m
[31m-                var responseCriaUsuario = client.Execute<ModelUsers>(requestCriaUsuario);[m
[32m+[m[32m                //InÃ­cio das validaÃ§Ãµes[m
[32m+[m[32m                test.Log(Status.Info, "Validando se o Status Code de retorno da requisiÃ§Ã£o Ã© 200.");[m
[32m+[m[32m                Assert.That((int)responseAlteraSenha.StatusCode, Is.EqualTo(200), "Status Code diferente do esperado ao enviar a requisiÃ§Ã£o responsÃ¡vel por realizar a alteraÃ§Ã£o de senha.");[m
 [m
[32m+[m[32m                //Criando e enviando a requisiÃ§Ã£o responsÃ¡vel por tentar realizar login com a nova senha[m
[32m+[m[32m                test.Log(Status.Info, "Criando requisiÃ§Ã£o responsÃ¡vel por tentar realizar login com a senha nova.");[m
[32m+[m[32m                var requestRealizaLoginSenhaAlterada = new RestRequest("bus/v1/users/login/byapp", Method.POST);[m
[32m+[m[32m                requestRealizaLoginSenhaAlterada.RequestFormat = DataFormat.Json;[m
[32m+[m[32m                requestRealizaLoginSenhaAlterada.AddJsonBody(new[m
[32m+[m[32m                {[m
[32m+[m[32m                    Email = email,[m
[32m+[m[32m                    Password = "111111"[m
[32m+[m[32m                }[m
[32m+[m[32m                );[m
 [m
[31m-                //Validando Status Code de retorno da requisiÃ§Ã£o[m
[31m-                test.Log(Status.Info, "Validando se o Status Code de retorno da requisiÃ§Ã£o Ã© 200.");[m
[31m-                Assert.That((int)responseCriaUsuario.StatusCode, Is.EqualTo(200), "Status Code diferente do esperado ao enviar requisiÃ§Ã£o responsÃ¡vel por criar um usuÃ¡rio.");[m
[32m+[m[32m                utils.Utils.setCisToken(requestRealizaLoginSenhaAlterada);[m
 [m
[32m+[m[32m                test.Log(Status.Info, "Enviando requisiÃ§Ã£o ");[m
[32m+[m[32m                var responseRealizaLoginSenhaAlterada = client.Execute<ModelUsers>(requestRealizaLoginSenhaAlterada);[m
 [m
[31m-                //Criando a requisiÃ§Ã£o responsÃ¡vel por realizar login com o usuÃ¡rio recÃ©m criado[m
[31m-                test.Log(Status.Info, "Criando a requisiÃ§Ã£o responsÃ¡vel por realizar login com o usuÃ¡rio recÃ©m criado.");[m
[31m-                var requestRealizaLogin = new RestRequest("bus/v1/users/login/byapp", Method.POST);[m
[31m-                requestRealizaLogin.RequestFormat = DataFormat.Json;[m
[32m+[m[32m                test.Log(Status.Info, "Validando se o Status Code de retorno da requisiÃ§Ã£o Ã© 200.");[m
[32m+[m[32m                Assert.That((int)responseRealizaLoginSenhaAlterada.StatusCode, Is.EqualTo(200), "Status Code diferente do esperado ao enviar a requisiÃ§Ã£o responsÃ¡vel por realizar login com a senha que foi alterada.");[m
 [m
[31m-                //Montando o body da requisiÃ§Ã£o que serÃ¡ enviada para alteraÃ§Ã£o de usuÃ¡rio[m
[31m-                requestRealizaLogin.AddJsonBody(new[m
[32m+[m[32m                //Criando e enviando a requisiÃ§Ã£o responsÃ¡vel por realizar rollback na senha do usuÃ¡rio[m
[32m+[m[32m                test.Log(Status.Info, "Criando requisiÃ§Ã£o responsÃ¡vel por realizar rollback na senha do usuÃ¡rio.");[m
[32m+[m[32m                var requestRollbackSenha = new RestRequest("bus/v1/users/changepassword", Method.POST);[m
[32m+[m[32m                requestRollbackSenha.RequestFormat = DataFormat.Json;[m
[32m+[m[32m                requestRollbackSenha.AddJsonBody(new[m
                 {[m
[31m-                    Email = "iphone82020@mailinator.com",[m
[31m-                    Password = "112233"[m
[32m+[m[32m                    UserId = userId,[m
[32m+[m[32m                    CurrentPassword = "111111",[m
[32m+[m[32m                    NewPassword = "112233",[m
[32m+[m[32m                    PasswordConfirmation = "112233"[m
                 }[m
                 );[m
 [m
[31m-                //Setando header de autenticaÃ§Ã£o "X-CISIdentity"[m
[31m-                test.Log(Status.Info, "Setando os headers necessÃ¡rios para enviar a requisiÃ§Ã£o.");[m
[31m-                utils.Utils.setCisToken(requestRealizaLogin);[m
[32m+[m[32m                test.Log(Status.Info, "Setando headers necessÃ¡rios para realizar a requisiÃ§Ã£o.");[m
[32m+[m[32m                utils.Utils.setCisToken(requestRollbackSenha);[m
[32m+[m[32m                utils.Utils.setAuthorizationToken(requestRollbackSenha, authorizationToken);[m
 [m
[31m-                //Enviando a requisiÃ§Ã£o realizando login com o usuÃ¡rio difrente do criado[m
[31m-                var responseRealizaLogin = client.Execute<ModelUsers>(requestRealizaLogin);[m
[31m-            }[m
[32m+[m[32m                test.Log(Status.Info, "Enviando requisiÃ§Ã£o.");[m
[32m+[m[32m                var responseRollbackSenha = client.Execute<ModelUsers>(requestRollbackSenha);[m
 [m
[32m+[m[32m                //InÃ­cio das validaÃ§Ãµes[m
[32m+[m[32m                test.Log(Status.Info, "Validando se o Status Code de retorno da requisiÃ§Ã£o Ã© 200.");[m
[32m+[m[32m                Assert.That((int)responseRollbackSenha.StatusCode, Is.EqualTo(200), "Status Code diferente do esperado ao enviar a requisiÃ§Ã£o responsÃ¡vel por realizar o rollback da senha.");[m
[32m+[m[32m                test.Log(Status.Pass, "Teste ok! As validaÃ§Ãµes foram realizadas com sucesso.");[m
[32m+[m[32m            }[m
             catch (Exception e)[m
             {[m
                 test.Log(Status.Fail, e.ToString());[m
[31m-                throw new Exception("Falha ao validar a segunda entrada de usuÃ¡rio: " + e.Message);[m
[32m+[m[32m                throw new Exception("Falha ao validar a alteraÃ§Ã£o de senha do usuÃ¡rio: " + e.Message);[m
             }[m
[31m-        }[m
[32m+[m
[32m+[m
[32m+[m[32m        }[m[41m       [m
 [m
     }[m
 }[m
[1mdiff --git a/EcommerceBackend/utils/ResponseProperties.cs b/EcommerceBackend/utils/ResponseProperties.cs[m
[1mdeleted file mode 100644[m
[1mindex 110cb16..0000000[m
[1m--- a/EcommerceBackend/utils/ResponseProperties.cs[m
[1m+++ /dev/null[m
[36m@@ -1,21 +0,0 @@[m
[31m-ï»¿using System;[m
[31m-using System.Collections.Generic;[m
[31m-using System.Linq;[m
[31m-using System.Text;[m
[31m-using System.Threading.Tasks;[m
[31m-[m
[31m-namespace EcommerceBackend.utils[m
[31m-{[m
[31m-    public static class ResponseProperties[m
[31m-    {[m
[31m-        public static string[] orderProperties = new string[][m
[31m-         {"\"id\":", "\"externalId\":", "\"status\":", "\"orderDate\":",[m
[31m-            "\"expirationDate\":", "\"theaterId\":", "\"movieId\":", "\"movieId\":", "\"account\":", "\"userId\":", [m
[31m-            "\"applicationUserId\":","\"identification\":", "\"email\":", "\"name\":", "\"phone\":", "\"type\":",[m
[31m-            "\"ticketCode\":", "\"tickets\":", "\"products\":", "\"name\":", "\"unitPrice\":", "\"status\":",[m
[31m-            "\"integrationCode\":", "\"integrationTracking\":", "\"total\":", "\"order\":", "\"localizationType\":", [m
[31m-            "\"rating\":", "\"sessionType\":"};[m
[31m-[m
[31m-       [m
[31m-    }[m
[31m-}[m
[1mdiff --git a/EcommerceBackend/utils/Utils.cs b/EcommerceBackend/utils/Utils.cs[m
[1mindex f1aaa32..d7804cc 100644[m
[1m--- a/EcommerceBackend/utils/Utils.cs[m
[1m+++ b/EcommerceBackend/utils/Utils.cs[m
[36m@@ -9,26 +9,14 @@[m [musing AventStack.ExtentReports.Reporter;[m
 using NUnit.Framework;[m
 using RestSharp;[m
 using RestSharp.Serialization.Json;[m
[32m+[m[32musing EcommerceBackend.models.Loyalty;[m
 using System.Threading;[m
[31m-using EcommerceBackend.models.Users;[m
[31m-using Newtonsoft.Json;[m
[31m-using System.IO;[m
 [m
 namespace EcommerceBackend.utils[m
 {[m
     public static class Utils[m
     {[m
[31m-        public static string RetornaStringJson(string jsonFilePath)[m
[31m-        {[m
[31m-            if (string.IsNullOrEmpty(jsonFilePath))[m
[31m-            {[m
[31m-                throw new Exception("Caminho/Path invalido");[m
[31m-            }[m
[31m-            string jsonContent = File.ReadAllText(jsonFilePath);[m
[31m-            return jsonContent;[m
[31m-        }[m
[31m-[m
[31m-[m
[32m+[m[41m        [m
         public static RestRequest setCisToken(RestRequest request)[m
         {[m
             request.AddHeader("X-CISIdentity", ConfigurationManager.AppSettings["CISToken"]);[m
[36m@@ -53,7 +41,7 @@[m [mnamespace EcommerceBackend.utils[m
             string authorizationToken = response.Headers.ToList()[m
                              .Find(x => x.Name == "authorization")[m
                              .Value.ToString();[m
[31m-            return authorizationToken;[m
[32m+[m[32m            return authorizationToken;[m[41m            [m
         }[m
 [m
         public static RestRequest setAuthorizationToken(RestRequest request, string authorizationToken)[m
[36m@@ -70,7 +58,7 @@[m [mnamespace EcommerceBackend.utils[m
                 Enumerable.Repeat(chars, qtdCaracteres)[m
                           .Select(s => s[random.Next(s.Length)])[m
                           .ToArray());[m
[31m-            return result + "@mailinator.com";[m
[32m+[m[32m            return result+"@mailinator.com";[m
         }[m
 [m
         public static String gerarCpf()[m
[36m@@ -111,7 +99,7 @@[m [mnamespace EcommerceBackend.utils[m
             return semente;[m
         }[m
 [m
[31m-        public static void validaContrato(string[] properties, string responseContent, ExtentTest test)[m
[32m+[m[32m        public static void validaContrato (string[] properties, string responseContent, ExtentTest test)[m[41m [m
         {[m
             test.Log(Status.Info, "InicÃ­o da validaÃ§Ã£o de contrato.");[m
             for (int i = 0; i < properties.Length; i++)[m
[36m@@ -125,5 +113,6 @@[m [mnamespace EcommerceBackend.utils[m
             }[m
         }[m
 [m
[32m+[m
     }[m
 }[m
[1mdiff --git a/asd b/asd[m
[1mdeleted file mode 100644[m
[1mindex e3cdec6..0000000[m
[1m--- a/asd[m
[1m+++ /dev/null[m
[36m@@ -1,720 +0,0 @@[m
[31m-[1mdiff --git a/EcommerceBackend/EcommerceBackend.csproj b/EcommerceBackend/EcommerceBackend.csproj[m[m
[31m-[1mindex 2b9178f..7d755b5 100644[m[m
[31m-[1m--- a/EcommerceBackend/EcommerceBackend.csproj[m[m
[31m-[1m+++ b/EcommerceBackend/EcommerceBackend.csproj[m[m
[31m-[36m@@ -12,7 +12,7 @@[m[m
[31m-     <AppDesignerFolder>Properties</AppDesignerFolder>[m[m
[31m-     <RootNamespace>EcommerceBackend</RootNamespace>[m[m
[31m-     <AssemblyName>EcommerceBackend</AssemblyName>[m[m
[31m-[31m-    <TargetFrameworkVersion>v4.5.2</TargetFrameworkVersion>[m[m
[31m-[32m+[m[32m    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>[m[m
[31m-     <FileAlignment>512</FileAlignment>[m[m
[31m-     <ProjectTypeGuids>{3AC096D0-A1C2-E12C-1390-A8335801FDAB};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>[m[m
[31m-     <VisualStudioVersion Condition="'$(VisualStudioVersion)' == ''">15.0</VisualStudioVersion>[m[m
[31m-[36m@@ -79,6 +79,8 @@[m[m
[31m-     <Reference Include="nunit.framework, Version=3.12.0.0, Culture=neutral, PublicKeyToken=2638cd05610744eb, processorArchitecture=MSIL">[m[m
[31m-       <HintPath>..\packages\NUnit.3.12.0\lib\net45\nunit.framework.dll</HintPath>[m[m
[31m-     </Reference>[m[m
[31m-[32m+[m[32m    <Reference Include="PresentationCore" />[m[m
[31m-[32m+[m[32m    <Reference Include="PresentationFramework" />[m[m
[31m-     <Reference Include="RazorEngine, Version=3.10.0.0, Culture=neutral, PublicKeyToken=9ee697374c7e744a, processorArchitecture=MSIL">[m[m
[31m-       <HintPath>..\packages\RazorEngine.3.10.0\lib\net45\RazorEngine.dll</HintPath>[m[m
[31m-     </Reference>[m[m
[31m-[36m@@ -162,6 +164,7 @@[m[m
[31m-     <Reference Include="System.Web.Razor, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">[m[m
[31m-       <HintPath>..\packages\Microsoft.AspNet.Razor.3.0.0\lib\net45\System.Web.Razor.dll</HintPath>[m[m
[31m-     </Reference>[m[m
[31m-[32m+[m[32m    <Reference Include="System.Xaml" />[m[m
[31m-     <Reference Include="System.Xml" />[m[m
[31m-     <Reference Include="TechTalk.SpecFlow, Version=3.1.0.0, Culture=neutral, PublicKeyToken=0778194805d6db41, processorArchitecture=MSIL">[m[m
[31m-       <HintPath>..\packages\SpecFlow.3.1.67\lib\net45\TechTalk.SpecFlow.dll</HintPath>[m[m
[31m-[36m@@ -182,6 +185,10 @@[m[m
[31m-     <Compile Include="models\Loyalty\ModelMenus.cs" />[m[m
[31m-     <Compile Include="models\Loyalty\ModelBenefits.cs" />[m[m
[31m-     <Compile Include="models\Loyalty\ModelLoyalty.cs" />[m[m
[31m-[32m+[m[32m    <Compile Include="models\Order\ModelAppInfo.cs" />[m[m
[31m-[32m+[m[32m    <Compile Include="models\Order\ModelGeolocation.cs" />[m[m
[31m-[32m+[m[32m    <Compile Include="models\Order\ModelPayment.cs" />[m[m
[31m-[32m+[m[32m    <Compile Include="models\Order\ModelStartOrder.cs" />[m[m
[31m-     <Compile Include="models\Order\ModelAccount.cs" />[m[m
[31m-     <Compile Include="models\Order\ModelOrderResgate .cs" />[m[m
[31m-     <Compile Include="models\Order\ModelOrderLast.cs" />[m[m
[31m-[36m@@ -189,6 +196,9 @@[m[m
[31m-     <Compile Include="models\Order\ModelTickets .cs" />[m[m
[31m-     <Compile Include="models\Order\ModelProduct .cs" />[m[m
[31m-     <Compile Include="models\Order\ModelOrder.cs" />[m[m
[31m-[32m+[m[32m    <Compile Include="models\Order\UserControl1.xaml.cs">[m[m
[31m-[32m+[m[32m      <DependentUpon>UserControl1.xaml</DependentUpon>[m[m
[31m-[32m+[m[32m    </Compile>[m[m
[31m-     <Compile Include="models\SeatMap\ModelSeatMap.cs" />[m[m
[31m-     <Compile Include="models\Social\ModelSocial.cs" />[m[m
[31m-     <Compile Include="models\Social\SocialResponse.cs" />[m[m
[31m-[36m@@ -206,6 +216,7 @@[m[m
[31m-     <Compile Include="models\Users\ModelState.cs" />[m[m
[31m-     <Compile Include="models\Users\ModelUsers.cs" />[m[m
[31m-     <Compile Include="tests\SnackBar.cs" />[m[m
[31m-[32m+[m[32m    <Compile Include="tests\StartOrder.cs" />[m[m
[31m-     <Compile Include="tests\Support.cs" />[m[m
[31m-     <Compile Include="tests\Marketing.cs" />[m[m
[31m-     <Compile Include="tests\Theaters.cs" />[m[m
[31m-[36m@@ -226,7 +237,12 @@[m[m
[31m-     <None Include="app.config" />[m[m
[31m-     <None Include="packages.config" />[m[m
[31m-   </ItemGroup>[m[m
[31m-[31m-  <ItemGroup />[m[m
[31m-[32m+[m[32m  <ItemGroup>[m[m
[31m-[32m+[m[32m    <Page Include="models\Order\UserControl1.xaml">[m[m
[31m-[32m+[m[32m      <SubType>Designer</SubType>[m[m
[31m-[32m+[m[32m      <Generator>MSBuild:Compile</Generator>[m[m
[31m-[32m+[m[32m    </Page>[m[m
[31m-[32m+[m[32m  </ItemGroup>[m[m
[31m-   <Import Project="$(VSToolsPath)\TeamTest\Microsoft.TestTools.targets" Condition="Exists('$(VSToolsPath)\TeamTest\Microsoft.TestTools.targets')" />[m[m
[31m-   <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />[m[m
[31m-   <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">[m[m
[31m-[1mdiff --git a/EcommerceBackend/Models/Order/ModelAppInfo.cs b/EcommerceBackend/Models/Order/ModelAppInfo.cs[m[m
[31m-[1mnew file mode 100644[m[m
[31m-[1mindex 0000000..d5f33a0[m[m
[31m-[1m--- /dev/null[m[m
[31m-[1m+++ b/EcommerceBackend/Models/Order/ModelAppInfo.cs[m[m
[31m-[36m@@ -0,0 +1,20 @@[m[m
[31m-[32m+[m[32mï»¿using System;[m[m
[31m-[32m+[m[32musing System.Collections.Generic;[m[m
[31m-[32m+[m[32musing System.Linq;[m[m
[31m-[32m+[m[32musing System.Text;[m[m
[31m-[32m+[m[32musing System.Threading.Tasks;[m[m
[31m-[32m+[m[m
[31m-[32m+[m[32mnamespace EcommerceBackend.models.Order[m[m
[31m-[32m+[m[32m{[m[m
[31m-[32m+[m[32m   public class ModelAppInfo[m[m
[31m-[32m+[m[32m    {[m[m
[31m-[32m+[m[32m        public string Fingerprint { get; set; }[m[41m [m[m
[31m-[32m+[m[32m        public string deviceModel { get; set; }[m[41m [m[m
[31m-[32m+[m[32m        public string devicePlatform { get; set; }[m[41m [m[m
[31m-[32m+[m[32m        public string deviceUUID { get; set; }[m[41m [m[m
[31m-[32m+[m[32m        public ModelGeolocation geolocation { get; set; }[m[41m [m[m
[31m-[32m+[m[32m        public string version { get; set; }[m[41m [m[m
[31m-[32m+[m[m
[31m-[32m+[m[m
[31m-[32m+[m[32m    }[m[m
[31m-[32m+[m[32m}[m[m
[31m-[1mdiff --git a/EcommerceBackend/Models/Order/ModelFee.cs b/EcommerceBackend/Models/Order/ModelFee.cs[m[m
[31m-[1mindex dc4d1e4..e895e89 100644[m[m
[31m-[1m--- a/EcommerceBackend/Models/Order/ModelFee.cs[m[m
[31m-[1m+++ b/EcommerceBackend/Models/Order/ModelFee.cs[m[m
[31m-[36m@@ -8,7 +8,7 @@[m [mnamespace DemoRestSharp.models.Order[m[m
[31m- {[m[m
[31m-     public class ModelFee[m[m
[31m-     {[m[m
[31m-[31m-        public int price { get; set; }[m[m
[31m-[32m+[m[32m        public double price { get; set; }[m[m
[31m-  [m[m
[31m-     }[m[m
[31m- }[m[m
[31m-[1mdiff --git a/EcommerceBackend/Models/Order/ModelGeolocation.cs b/EcommerceBackend/Models/Order/ModelGeolocation.cs[m[m
[31m-[1mnew file mode 100644[m[m
[31m-[1mindex 0000000..eeee5fb[m[m
[31m-[1m--- /dev/null[m[m
[31m-[1m+++ b/EcommerceBackend/Models/Order/ModelGeolocation.cs[m[m
[31m-[36m@@ -0,0 +1,13 @@[m[m
[31m-[32m+[m[32mï»¿using System;[m[m
[31m-[32m+[m[32musing System.Collections.Generic;[m[m
[31m-[32m+[m[32musing System.Linq;[m[m
[31m-[32m+[m[32musing System.Text;[m[m
[31m-[32m+[m[32musing System.Threading.Tasks;[m[m
[31m-[32m+[m[m
[31m-[32m+[m[32mnamespace EcommerceBackend.models.Order[m[m
[31m-[32m+[m[32m{[m[m
[31m-[32m+[m[32m    public class ModelGeolocation {[m[41m [m[m
[31m-[32m+[m[32m        public double latitude { get; set; }[m[m
[31m-[32m+[m[32m        public double longitude { get; set; }[m[m
[31m-[32m+[m[32m    }[m[m
[31m-[32m+[m[32m}[m[m
[31m-[1mdiff --git a/EcommerceBackend/Models/Order/ModelPayment.cs b/EcommerceBackend/Models/Order/ModelPayment.cs[m[m
[31m-[1mnew file mode 100644[m[m
[31m-[1mindex 0000000..5ec283b[m[m
[31m-[1m--- /dev/null[m[m
[31m-[1m+++ b/EcommerceBackend/Models/Order/ModelPayment.cs[m[m
[31m-[36m@@ -0,0 +1,20 @@[m[m
[31m-[32m+[m[32mï»¿using System;[m[m
[31m-[32m+[m[32musing System.Collections.Generic;[m[m
[31m-[32m+[m[32musing System.Linq;[m[m
[31m-[32m+[m[32musing System.Text;[m[m
[31m-[32m+[m[32musing System.Threading.Tasks;[m[m
[31m-[32m+[m[m
[31m-[32m+[m[32mnamespace EcommerceBackend.models.Order[m[m
[31m-[32m+[m[32m{[m[m
[31m-[32m+[m[32m   public class ModelPayment {[m[41m [m[m
[31m-[32m+[m[m
[31m-[32m+[m[m
[31m-[32m+[m[32m        public string number { get; set; }[m[m
[31m-[32m+[m[32m        public string cpf { get; set; }[m[m
[31m-[32m+[m[32m        public string cvc { get; set; }[m[m
[31m-[32m+[m[32m        public string expiryMonth { get; set; }[m[m
[31m-[32m+[m[32m        public string expiryYear { get; set; }[m[m
[31m-[32m+[m[32m        public string holderName { get; set; }[m[m
[31m-[32m+[m[32m        public bool saveCardInformation { get; set; }[m[m
[31m-[32m+[m[32m    }[m[m
[31m-[32m+[m[32m}[m[m
[31m-[1mdiff --git a/EcommerceBackend/Models/Order/ModelProduct .cs b/EcommerceBackend/Models/Order/ModelProduct .cs[m[m
[31m-[1mindex 5cb681f..189ade4 100644[m[m
[31m-[1m--- a/EcommerceBackend/Models/Order/ModelProduct .cs[m	[m
[31m-[1m+++ b/EcommerceBackend/Models/Order/ModelProduct .cs[m	[m
[31m-[36m@@ -8,6 +8,7 @@[m [mnamespace DemoRestSharp.models.Order[m[m
[31m- {[m[m
[31m-     public class ModelProduct[m[m
[31m-     {[m[m
[31m-[32m+[m[32m        public  string fee { get; set; }[m[m
[31m-         public string name { get; set; }[m[m
[31m-         public string theaterName { get; set; }[m[m
[31m-         public string theaterAddress { get; set; }[m[m
[31m-[1mdiff --git a/EcommerceBackend/Models/Order/ModelStartOrder.cs b/EcommerceBackend/Models/Order/ModelStartOrder.cs[m[m
[31m-[1mnew file mode 100644[m[m
[31m-[1mindex 0000000..af6ab32[m[m
[31m-[1m--- /dev/null[m[m
[31m-[1m+++ b/EcommerceBackend/Models/Order/ModelStartOrder.cs[m[m
[31m-[36m@@ -0,0 +1,84 @@[m[m
[31m-[32m+[m[32mï»¿//using System;[m[m
[31m-[32m+[m[32m//using System.Collections.Generic;[m[m
[31m-[32m+[m[32m//using System.Linq;[m[m
[31m-[32m+[m[32m//using System.Text;[m[m
[31m-[32m+[m[32m//using System.Threading.Tasks;[m[m
[31m-[32m+[m[32m//using DemoRestSharp.models.Order;[m[m
[31m-[32m+[m[m
[31m-[32m+[m[m
[31m-[32m+[m[32m//namespace EcommerceBackend.models.Order[m[m
[31m-[32m+[m[32m//{[m[m
[31m-[32m+[m[32m//    public class ModelStartOrder[m[m
[31m-[32m+[m[32m//    {[m[m
[31m-[32m+[m[32m//        public Account account { get; set; }[m[m
[31m-[32m+[m[32m//        public AppInfo appInfo { get; set; }[m[m
[31m-[32m+[m[32m//        public int theaterId { get; set; }[m[m
[31m-[32m+[m[32m//        public Fee fee { get; set; }[m[m
[31m-[32m+[m[32m//        public int movieId { get; set; }[m[m
[31m-[32m+[m[32m//        public Payment payment { get; set; }[m[m
[31m-[32m+[m[32m//        public IList<Product> products { get; set; }[m[m
[31m-[32m+[m[32m//        public double total { get; set; }[m[m
[31m-[32m+[m[32m//    }[m[m
[31m-[32m+[m[32m//        public class Account[m[m
[31m-[32m+[m[32m//        {[m[m
[31m-[32m+[m[32m//            public string email { get; set; }[m[m
[31m-[32m+[m[32m//            public string identification { get; set; }[m[m
[31m-[32m+[m[32m//            public string name { get; set; }[m[m
[31m-[32m+[m[32m//        }[m[m
[31m-[32m+[m[m
[31m-[32m+[m[32m//        public class Geolocation[m[m
[31m-[32m+[m[32m//        {[m[m
[31m-[32m+[m[32m//            public double latitude { get; set; }[m[m
[31m-[32m+[m[32m//            public double longitude { get; set; }[m[m
[31m-[32m+[m[32m//        }[m[m
[31m-[32m+[m[m
[31m-[32m+[m[32m//        public class AppInfo[m[m
[31m-[32m+[m[32m//        {[m[m
[31m-[32m+[m[32m//            public string Fingerprint { get; set; }[m[m
[31m-[32m+[m[32m//            public string deviceModel { get; set; }[m[m
[31m-[32m+[m[32m//            public string devicePlatform { get; set; }[m[m
[31m-[32m+[m[32m//            public string deviceUUID { get; set; }[m[m
[31m-[32m+[m[32m//            public Geolocation geolocation { get; set; }[m[m
[31m-[32m+[m[32m//            public string version { get; set; }[m[m
[31m-[32m+[m[32m//        }[m[m
[31m-[32m+[m[m
[31m-[32m+[m[32m//        public class Fee[m[m
[31m-[32m+[m[32m//        {[m[m
[31m-[32m+[m[32m//            public double price { get; set; }[m[m
[31m-[32m+[m[32m//        }[m[m
[31m-[32m+[m[m
[31m-[32m+[m[32m//        public class Payment[m[m
[31m-[32m+[m[32m//        {[m[m
[31m-[32m+[m[32m//            public string number { get; set; }[m[m
[31m-[32m+[m[32m//            public string cpf { get; set; }[m[m
[31m-[32m+[m[32m//            public string cvc { get; set; }[m[m
[31m-[32m+[m[32m//            public string expiryMonth { get; set; }[m[m
[31m-[32m+[m[32m//            public string expiryYear { get; set; }[m[m
[31m-[32m+[m[32m//            public string holderName { get; set; }[m[m
[31m-[32m+[m[32m//            public bool saveCardInformation { get; set; }[m[m
[31m-[32m+[m[32m//        }[m[m
[31m-[32m+[m[m
[31m-[32m+[m[32m//        public class Product[m[m
[31m-[32m+[m[32m//        {[m[m
[31m-[32m+[m[32m//        public feeÂ {Â get;Â set;Â }[m[m
[31m-[32m+[m[32m//        public int id { get; set; }[m[m
[31m-[32m+[m[32m//        public string name { get; set; }[m[m
[31m-[32m+[m[32m//        public int quantity { get; set; }[m[m
[31m-[32m+[m[32m//        public int subTotal { get; set; }[m[m
[31m-[32m+[m[32m//        public string theaterAddress { get; set; }[m[m
[31m-[32m+[m[32m//        public string theaterName { get; set; }[m[m
[31m-[32m+[m[32m//        public int theaterPOS { get; set; }[m[m
[31m-[32m+[m[32m//        public int unitPrice { get; set; }[m[m
[31m-[32m+[m[32m//        public string urlImagem { get; set; }[m[m
[31m-[32m+[m[32m//    }[m[m
[31m-[32m+[m[m
[31m-[32m+[m[41m   [m[m
[31m-[32m+[m[41m        [m[m
[31m-[32m+[m[32m//    }[m[m
[31m-[32m+[m[m
[31m-[32m+[m[m
[31m-[32m+[m[m
[31m-[32m+[m[m
[31m-[32m+[m[m
[31m-[32m+[m[m
[31m-[32m+[m[m
[31m-[1mdiff --git a/EcommerceBackend/Models/Order/UserControl1.xaml b/EcommerceBackend/Models/Order/UserControl1.xaml[m[m
[31m-[1mnew file mode 100644[m[m
[31m-[1mindex 0000000..11bce1a[m[m
[31m-[1m--- /dev/null[m[m
[31m-[1m+++ b/EcommerceBackend/Models/Order/UserControl1.xaml[m[m
[31m-[36m@@ -0,0 +1,12 @@[m[m
[31m-[32m+[m[32mï»¿<UserControl x:Class="EcommerceBackend.models.Order.UserControl1"[m[m
[31m-[32m+[m[32m             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"[m[m
[31m-[32m+[m[32m             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"[m[m
[31m-[32m+[m[32m             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"[m[41m [m[m
[31m-[32m+[m[32m             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"[m[41m [m[m
[31m-[32m+[m[32m             xmlns:local="clr-namespace:EcommerceBackend.models.Order"[m[m
[31m-[32m+[m[32m             mc:Ignorable="d"[m[41m [m[m
[31m-[32m+[m[32m             d:DesignHeight="450" d:DesignWidth="800">[m[m
[31m-[32m+[m[32m    <Grid>[m[m
[31m-[32m+[m[41m            [m[m
[31m-[32m+[m[32m    </Grid>[m[m
[31m-[32m+[m[32m</UserControl>[m[m
[31m-[1mdiff --git a/EcommerceBackend/Models/Order/UserControl1.xaml.cs b/EcommerceBackend/Models/Order/UserControl1.xaml.cs[m[m
[31m-[1mnew file mode 100644[m[m
[31m-[1mindex 0000000..49f9ecb[m[m
[31m-[1m--- /dev/null[m[m
[31m-[1m+++ b/EcommerceBackend/Models/Order/UserControl1.xaml.cs[m[m
[31m-[36m@@ -0,0 +1,28 @@[m[m
[31m-[32m+[m[32mï»¿using System;[m[m
[31m-[32m+[m[32musing System.Collections.Generic;[m[m
[31m-[32m+[m[32musing System.Linq;[m[m
[31m-[32m+[m[32musing System.Text;[m[m
[31m-[32m+[m[32musing System.Threading.Tasks;[m[m
[31m-[32m+[m[32musing System.Windows;[m[m
[31m-[32m+[m[32musing System.Windows.Controls;[m[m
[31m-[32m+[m[32musing System.Windows.Data;[m[m
[31m-[32m+[m[32musing System.Windows.Documents;[m[m
[31m-[32m+[m[32musing System.Windows.Input;[m[m
[31m-[32m+[m[32musing System.Windows.Media;[m[m
[31m-[32m+[m[32musing System.Windows.Media.Imaging;[m[m
[31m-[32m+[m[32musing System.Windows.Navigation;[m[m
[31m-[32m+[m[32musing System.Windows.Shapes;[m[m
[31m-[32m+[m[m
[31m-[32m+[m[32mnamespace EcommerceBackend.models.Order[m[m
[31m-[32m+[m[32m{[m[m
[31m-[32m+[m[32m    /// <summary>[m[m
[31m-[32m+[m[32m    /// InteraÃ§Ã£o lÃ³gica para UserControl1.xam[m[m
[31m-[32m+[m[32m    /// </summary>[m[m
[31m-[32m+[m[32m    public partial class UserControl1 : UserControl[m[m
[31m-[32m+[m[32m    {[m[m
[31m-[32m+[m[32m        public UserControl1()[m[m
[31m-[32m+[m[32m        {[m[m
[31m-[32m+[m[32m            InitializeComponent();[m[m
[31m-[32m+[m[32m        }[m[m
[31m-[32m+[m[32m    }[m[m
[31m-[32m+[m[32m}[m[m
[31m-[1mdiff --git a/EcommerceBackend/app.config b/EcommerceBackend/app.config[m[m
[31m-[1mindex c62e3f4..d46dff6 100644[m[m
[31m-[1m--- a/EcommerceBackend/app.config[m[m
[31m-[1m+++ b/EcommerceBackend/app.config[m[m
[31m-[36m@@ -40,4 +40,4 @@[m[m
[31m-       </providers>[m[m
[31m-     </roleManager>[m[m
[31m-   </system.web>[m[m
[31m-[31m-<startup><supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5.2"/></startup></configuration>[m[m
[31m-[32m+[m[32m<startup><supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.7.2"/></startup></configuration>[m[m
[31m-[1mdiff --git a/EcommerceBackend/packages.config b/EcommerceBackend/packages.config[m[m
[31m-[1mindex 7599e49..c1a56e0 100644[m[m
[31m-[1m--- a/EcommerceBackend/packages.config[m[m
[31m-[1m+++ b/EcommerceBackend/packages.config[m[m
[31m-[36m@@ -21,21 +21,21 @@[m[m
[31m-   <package id="RestSharp" version="106.6.10" targetFramework="net472" />[m[m
[31m-   <package id="SpecFlow" version="3.1.67" targetFramework="net472" />[m[m
[31m-   <package id="System.Buffers" version="4.3.0" targetFramework="net472" />[m[m
[31m-[31m-  <package id="System.Configuration.ConfigurationManager" version="4.7.0" targetFramework="net472" requireReinstallation="true" />[m[m
[31m-[31m-  <package id="System.IO" version="4.3.0" targetFramework="net472" requireReinstallation="true" />[m[m
[31m-[31m-  <package id="System.Net.Http" version="4.3.4" targetFramework="net472" requireReinstallation="true" />[m[m
[31m-[32m+[m[32m  <package id="System.Configuration.ConfigurationManager" version="4.7.0" targetFramework="net472" />[m[m
[31m-[32m+[m[32m  <package id="System.IO" version="4.3.0" targetFramework="net472" />[m[m
[31m-[32m+[m[32m  <package id="System.Net.Http" version="4.3.4" targetFramework="net472" />[m[m
[31m-   <package id="System.Reflection.Emit" version="4.3.0" targetFramework="net472" />[m[m
[31m-   <package id="System.Reflection.Emit.Lightweight" version="4.3.0" targetFramework="net472" />[m[m
[31m-[31m-  <package id="System.Runtime" version="4.3.0" targetFramework="net472" requireReinstallation="true" />[m[m
[31m-[32m+[m[32m  <package id="System.Runtime" version="4.3.0" targetFramework="net472" />[m[m
[31m-   <package id="System.Runtime.InteropServices.RuntimeInformation" version="4.0.0" targetFramework="net472" />[m[m
[31m-[31m-  <package id="System.Security.AccessControl" version="4.7.0" targetFramework="net472" requireReinstallation="true" />[m[m
[31m-[31m-  <package id="System.Security.Cryptography.Algorithms" version="4.3.0" targetFramework="net472" requireReinstallation="true" />[m[m
[31m-[31m-  <package id="System.Security.Cryptography.Encoding" version="4.3.0" targetFramework="net472" requireReinstallation="true" />[m[m
[31m-[31m-  <package id="System.Security.Cryptography.Primitives" version="4.3.0" targetFramework="net472" requireReinstallation="true" />[m[m
[31m-[31m-  <package id="System.Security.Cryptography.X509Certificates" version="4.3.0" targetFramework="net472" requireReinstallation="true" />[m[m
[31m-[31m-  <package id="System.Security.Permissions" version="4.7.0" targetFramework="net472" requireReinstallation="true" />[m[m
[31m-[31m-  <package id="System.Security.Principal.Windows" version="4.7.0" targetFramework="net472" requireReinstallation="true" />[m[m
[31m-[31m-  <package id="System.Threading.Tasks.Extensions" version="4.4.0" targetFramework="net472" requireReinstallation="true" />[m[m
[31m-[31m-  <package id="System.ValueTuple" version="4.4.0" targetFramework="net472" requireReinstallation="true" />[m[m
[31m-[31m-  <package id="Utf8Json" version="1.3.7" targetFramework="net472" requireReinstallation="true" />[m[m
[31m-[32m+[m[32m  <package id="System.Security.AccessControl" version="4.7.0" targetFramework="net472" />[m[m
[31m-[32m+[m[32m  <package id="System.Security.Cryptography.Algorithms" version="4.3.0" targetFramework="net472" />[m[m
[31m-[32m+[m[32m  <package id="System.Security.Cryptography.Encoding" version="4.3.0" targetFramework="net472" />[m[m
[31m-[32m+[m[32m  <package id="System.Security.Cryptography.Primitives" version="4.3.0" targetFramework="net472" />[m[m
[31m-[32m+[m[32m  <package id="System.Security.Cryptography.X509Certificates" version="4.3.0" targetFramework="net472" />[m[m
[31m-[32m+[m[32m  <package id="System.Security.Permissions" version="4.7.0" targetFramework="net472" />[m[m
[31m-[32m+[m[32m  <package id="System.Security.Principal.Windows" version="4.7.0" targetFramework="net472" />[m[m
[31m-[32m+[m[32m  <package id="System.Threading.Tasks.Extensions" version="4.4.0" targetFramework="net472" />[m[m
[31m-[32m+[m[32m  <package id="System.ValueTuple" version="4.4.0" targetFramework="net472" />[m[m
[31m-[32m+[m[32m  <package id="Utf8Json" version="1.3.7" targetFramework="net472" />[m[m
[31m- </packages>[m[m
[31m-\ No newline at end of file[m[m
[31m-[1mdiff --git a/EcommerceBackend/tests/Order.cs b/EcommerceBackend/tests/Order.cs[m[m
[31m-[1mindex becd4ca..4f781a9 100644[m[m
[31m-[1m--- a/EcommerceBackend/tests/Order.cs[m[m
[31m-[1m+++ b/EcommerceBackend/tests/Order.cs[m[m
[31m-[36m@@ -8,6 +8,8 @@[m [musing DemoRestSharp.models.Order;[m[m
[31m- using System.Collections.Generic;[m[m
[31m- using EcommerceBackend.utils;[m[m
[31m- using Newtonsoft.Json;[m[m
[31m-[32m+[m[32musing System.Reflection;[m[m
[31m-[32m+[m[32musing EcommerceBackend.models.Order;[m[m
[31m- [m[m
[31m- namespace EcommerceBackend[m[m
[31m- [m[m
[31m-[36m@@ -16,6 +18,7 @@[m [mnamespace EcommerceBackend[m[m
[31m-     [TestFixture][m[m
[31m-     public class Order[m[m
[31m-     {[m[m
[31m-[32m+[m[m
[31m-         ExtentReports extent = null;[m[m
[31m- [m[m
[31m-         [OneTimeSetUp][m[m
[31m-[36m@@ -177,14 +180,14 @@[m [mnamespace EcommerceBackend[m[m
[31m-                 utils.Utils.setAuthorizationToken(request, authorizationToken);[m[m
[31m- [m[m
[31m-                 var response = client.Execute<List<ModelOrderLast>>(request);[m[m
[31m-[31m-[m[m
[31m-[32m+[m[41m              [m[m
[31m-                 //InÃ­cio das validaÃ§Ãµes[m[m
[31m-                 test.Log(Status.Info, "Validando se o Status Code de retorno da requisiÃ§Ã£o Ã© 200.");[m[m
[31m-                 Assert.That((int)response.StatusCode, Is.EqualTo(200), "Status Code divergente.");[m[m
[31m- [m[m
[31m-                 if ((int)response.StatusCode == 200 && authorizationToken != null)[m[m
[31m-                 {[m[m
[31m-[31m-[m[m
[31m-[32m+[m[32m                    //testes realizados de forma unitaria[m[m
[31m-                     test.Log(Status.Info, "InÃ­cio de validaÃ§Ãµes de propriedades e valores.");[m[m
[31m-                     Assert.That(response.Data[0].id, Is.EqualTo("26a33aed-a360-451b-8f6d-a9ff00fc1118"), "Status Code divergente.");[m[m
[31m-                     Assert.That(response.Data[0].account[0].userId, Is.EqualTo(5640490), "Status Code divergente.");[m[m
[31m-[36m@@ -216,47 +219,117 @@[m [mnamespace EcommerceBackend[m[m
[31m-             }[m[m
[31m-         }[m[m
[31m- [m[m
[31m-[31m-        // procurando soluÃ§Ã£o no momento para o caso abaixo[m[m
[31m-[31m-[m[m
[31m-[31m-        //[Test][m[m
[31m-[31m-        //public void ValidaRealizaResgateIngresso()[m[m
[31m-[31m-        //{[m[m
[31m-[31m-        //    ExtentTest test = null;[m[m
[31m-[31m-        //    test = extent.CreateTest("ValidaRealizaResgateIngresso").Info("InÃ­cio do teste.");[m[m
[31m-[31m-        //    try[m[m
[31m-[31m-        //    {[m[m
[31m-[31m-[m[m
[31m-[31m-        //        //Criando e enviando requisiÃ§Ã£o[m[m
[31m-[31m-        //        test.Log(Status.Info, "Criando requisiÃ§Ã£o responsÃ¡vel por realizar login.");[m[m
[31m-[31m-        //        var client = new RestClient(ConfigurationManager.AppSettings["dnsSensedia"]);[m[m
[31m-[31m-        //        var requestResgataIngresso = new RestRequest("order/v1/updateticketstatus", Method.POST);[m[m
[31m-[31m-        //        requestResgataIngresso.RequestFormat = DataFormat.Json;[m[m
[31m-[31m-        //        test.Log(Status.Info, "Setando headers necessÃ¡rios para realizar a requisiÃ§Ã£o.");[m[m
[31m-[31m-        //        utils.Utils.setCisToken(requestResgataIngresso);[m[m
[31m-[31m-[m[m
[31m-[31m-        //        requestResgataIngresso.AddJsonBody(new[m[m
[31m-[31m-        //        {[m[m
[31m-[31m-        //            orderId = "363aa89c-2d6d-4ad5-9955-f9c71977bbd4",[m[m
[31m-[31m-        //            barCode = "8332249503394278478139",[m[m
[31m-[31m-        //            status = 1[m[m
[31m-[31m-        //        }[m[m
[31m-[31m-        //        );[m[m
[31m-[31m-           [m[m
[31m-[31m-        //        test.Log(Status.Info, "Enviando requisiÃ§Ã£o.");[m[m
[31m-[31m-        //        var response = client.Execute<ModelOrderResgate>(requestResgataIngresso);[m[m
[31m-[31m-[m[m
[31m-[31m-        //        //InÃ­cio das validaÃ§Ãµes[m[m
[31m-[31m-        //        test.Log(Status.Info, "Validando se o Status Code de retorno da requisiÃ§Ã£o Ã© 200.");[m[m
[31m-[31m-        //        Assert.That((int)response.StatusCode, Is.EqualTo(200), "Status Code divergente.");[m[m
[31m-[31m-[m[m
[31m-[31m-[m[m
[31m-[31m-        //    }[m[m
[31m-[31m-        //    catch (Exception e)[m[m
[31m-[31m-        //    {[m[m
[31m-[31m-        //        test.Log(Status.Fail, e.ToString());[m[m
[31m-[31m-        //        throw new Exception("Falha ao validar resgate de ingresso supersaver: " + e.Message);[m[m
[31m-[31m-        //    }[m[m
[31m-[31m-        //}[m[m
[31m-[31m-     }[m[m
[31m-[32m+[m[m
[31m-[32m+[m[m
[31m-[32m+[m[32m        [Test][m[m
[31m-[32m+[m[32m        public void ValidaRealizaPedidoSnack()[m[m
[31m-[32m+[m[32m        {[m[m
[31m-[32m+[m[32m            ExtentTest test = null;[m[m
[31m-[32m+[m[32m            test = extent.CreateTest("ValidaRealizaPedidoSnack").Info("InÃ­cio do teste.");[m[m
[31m-[32m+[m[m
[31m-[32m+[m[32m            try[m[m
[31m-[32m+[m[32m            {[m[m
[31m-[32m+[m[m
[31m-[32m+[m[32m                string authorizationToken = utils.Utils.getAuthorization("alexandre.ksss@gmail.com", "batata@1010");[m[m
[31m-[32m+[m[32m                //Criando e enviando requisiÃ§Ã£o[m[m
[31m-[32m+[m[32m                test.Log(Status.Info, "Criando requisiÃ§Ã£o responsÃ¡vel por realizar login.");[m[m
[31m-[32m+[m[32m                var client = new RestClient(ConfigurationManager.AppSettings["dnsSensedia"]);[m[m
[31m-[32m+[m[32m                var request = new RestRequest("order/v2/startorder", Method.POST);[m[m
[31m-[32m+[m[32m                request.RequestFormat = DataFormat.Json;[m[m
[31m-[32m+[m[32m                utils.Utils.setCisToken(request);[m[m
[31m-[32m+[m[32m                test.Log(Status.Info, "Setando headers necessÃ¡rios para realizar a requisiÃ§Ã£o.");[m[m
[31m-[32m+[m[32m                utils.Utils.setAuthorizationToken(request, authorizationToken);[m[m
[31m-[32m+[m[m
[31m-[32m+[m[32m                //json original (do postman) foi alterado de aspas dupla para aspas simples[m[41m [m[m
[31m-[32m+[m[32m                //site https://csvjson.com/json_beautifier[m[m
[31m-[32m+[m[41m                [m[m
[31m-[32m+[m[32m                string json = @"{[m[m
[31m-[32m+[m[32m                                  'account': {[m[m
[31m-[32m+[m[32m                                    'email': 'alexandre.ksss@gmail.com',[m[m
[31m-[32m+[m[32m                                    'name': 'Alexandre Kenji Shimizu',[m[m
[31m-[32m+[m[32m                                    'userId': 7365872[m[m
[31m-[32m+[m[32m                                  },[m[m
[31m-[32m+[m[32m                                  'appInfo': {[m[m
[31m-[32m+[m[32m                                    'Fingerprint': 'atmxcmqlyqyydanpimtf94ysv91uunvy',[m[m
[31m-[32m+[m[32m                                    'deviceModel': 'SM-J701MT',[m[m
[31m-[32m+[m[32m                                    'devicePlatform': 'Android',[m[m
[31m-[32m+[m[32m                                    'deviceUUID': '75e73711-71ae-41c8-b883-b12c4151898c',[m[m
[31m-[32m+[m[32m                                    'geolocation': {[m[m
[31m-[32m+[m[32m                                      'latitude': -23.577729,[m[m
[31m-[32m+[m[32m                                      'longitude': -46.7969339[m[m
[31m-[32m+[m[32m                                    },[m[m
[31m-[32m+[m[32m                                    'version': '4.1.9'[m[m
[31m-[32m+[m[32m                                  },[m[m
[31m-[32m+[m[32m                                  'theaterId': 785,[m[m
[31m-[32m+[m[32m                                  'fee': {[m[m
[31m-[32m+[m[32m                                    'price': 10[m[m
[31m-[32m+[m[32m                                  },[m[m
[31m-[32m+[m[32m                                  'movieId': 0,[m[m
[31m-[32m+[m[32m                                  'payment': {[m[m
[31m-[32m+[m[32m                                    'number': 'mTSBDAgF/PbX+jicDGuqOEjpWAMo7rOuQ/LuLGGIesg=',[m[m
[31m-[32m+[m[32m                                    'cpf': '35074705940',[m[m
[31m-[32m+[m[32m                                    'cvc': '737',[m[m
[31m-[32m+[m[32m                                    'expiryMonth': '02',[m[m
[31m-[32m+[m[32m                                    'expiryYear': '2025',[m[m
[31m-[32m+[m[32m                                    'holderName': 'Tggg Hhhhh',[m[m
[31m-[32m+[m[32m                                    'saveCardInformation': true[m[m
[31m-[32m+[m[32m                                  },[m[m
[31m-[32m+[m[32m                                  'products': [[m[m
[31m-[32m+[m[32m                                    {[m[m
[31m-[32m+[m[32m                                      'fee': {[m[m
[31m-[32m+[m[32m                                        'price': 5[m[m
[31m-[32m+[m[32m                                      },[m[m
[31m-[32m+[m[32m                                      'id': 3375,[m[m
[31m-[32m+[m[32m                                      'name': 'Coca-Cola Grande',[m[m
[31m-[32m+[m[32m                                      'quantity': 1,[m[m
[31m-[32m+[m[32m                                      'subTotal': 26,[m[m
[31m-[32m+[m[32m                                      'theaterAddress': 'Av. Dr. Chucri Zaidan, 920 - Vila Cordeiro',[m[m
[31m-[32m+[m[32m                                      'theaterName': 'Market Place',[m[m
[31m-[32m+[m[32m                                      'theaterPOS': 3,[m[m
[31m-[32m+[m[32m                                      'unitPrice': 21,[m[m
[31m-[32m+[m[32m                                      'urlImagem': 'https://cdnim.hml.cineticket.com.br/snackbar/product/product_3375_20170605164929.png'[m[m
[31m-[32m+[m[32m                                    }[m[m
[31m-[32m+[m[32m                                  ],[m[m
[31m-[32m+[m[32m                                  'total': 27[m[m
[31m-[32m+[m[32m                                }";[m[m
[31m-[32m+[m[m
[31m-[32m+[m[41m             [m[m
[31m-[32m+[m[32m                request.AddParameter("application /json", json , ParameterType.RequestBody);[m[m
[31m-[32m+[m[41m  [m[m
[31m-[32m+[m[32m                var response = client.Execute(request);[m[m
[31m-[32m+[m[32m                test.Log(Status.Info, "Enviando requisiÃ§Ã£o.");[m[m
[31m-[32m+[m[32m                Console.WriteLine(response);[m[m
[31m-[32m+[m[41m                [m[m
[31m-[32m+[m[41m              [m[m
[31m-[32m+[m[m
[31m-[32m+[m[32m                //InÃ­cio das validaÃ§Ãµes[m[m
[31m-[32m+[m[32m                test.Log(Status.Info, "Validando se o Status Code de retorno da requisiÃ§Ã£o Ã© 200.");[m[m
[31m-[32m+[m[32m                Assert.That((int)response.StatusCode, Is.EqualTo(200), "Status Code divergente.");[m[m
[31m-[32m+[m[m
[31m-[32m+[m[m
[31m-[32m+[m[m
[31m-[32m+[m[m
[31m-[32m+[m[m
[31m-[32m+[m[32m            }[m[m
[31m-[32m+[m[32m            catch (Exception e)[m[m
[31m-[32m+[m[32m            {[m[m
[31m-[32m+[m[32m                test.Log(Status.Fail, e.ToString());[m[m
[31m-[32m+[m[32m                throw new Exception("Falha ao validar geracao do pedido: " + e.Message);[m[m
[31m-[32m+[m[32m            }[m[m
[31m-[32m+[m[32m        }[m[m
[31m-[32m+[m[m
[31m-[32m+[m[m
[31m-[32m+[m[m
[31m-[32m+[m[m
[31m-[32m+[m[m
[31m-[32m+[m[m
[31m-[32m+[m[m
[31m-[32m+[m[m
[31m-[32m+[m[m
[31m-[32m+[m[m
[31m-[32m+[m[m
[31m-[32m+[m[m
[31m-[32m+[m[32m    }[m[m
[31m-[32m+[m[41m    [m[m
[31m- [m[m
[31m- }[m[m
[31m-[1mdiff --git a/EcommerceBackend/tests/StartOrder.cs b/EcommerceBackend/tests/StartOrder.cs[m[m
[31m-[1mnew file mode 100644[m[m
[31m-[1mindex 0000000..be0ec35[m[m
[31m-[1m--- /dev/null[m[m
[31m-[1m+++ b/EcommerceBackend/tests/StartOrder.cs[m[m
[31m-[36m@@ -0,0 +1,91 @@[m[m
[31m-[32m+[m[32mï»¿//using System.Configuration;[m[m
[31m-[32m+[m[32m//using System;[m[m
[31m-[32m+[m[32m//using NUnit.Framework;[m[m
[31m-[32m+[m[32m//using RestSharp;[m[m
[31m-[32m+[m[32m//using AventStack.ExtentReports;[m[m
[31m-[32m+[m[32m//using AventStack.ExtentReports.Reporter;[m[m
[31m-[32m+[m[32m//using DemoRestSharp.models.Order;[m[m
[31m-[32m+[m[32m//using System.Collections.Generic;[m[m
[31m-[32m+[m[32m//using EcommerceBackend.utils;[m[m
[31m-[32m+[m[32m//using Newtonsoft.Json;[m[m
[31m-[32m+[m[32m//using System.Reflection;[m[m
[31m-[32m+[m[32m//using Dynamitey.DynamicObjects;[m[m
[31m-[32m+[m[m
[31m-[32m+[m[m
[31m-[32m+[m[32m//    public class StartOrder[m[m
[31m-[32m+[m[32m//{[m[m
[31m-[32m+[m[32m//    public string Email { get; set }[m[m
[31m-[32m+[m[32m//    public string Identification { get; set; }[m[m
[31m-[32m+[m[32m//    public int MyProperty { get; set; }[m[m
[31m-[32m+[m[m
[31m-[32m+[m[32m//}[m[m
[31m-[32m+[m[m
[31m-[32m+[m[m
[31m-[32m+[m[m
[31m-[32m+[m[32m//{[m[41m   [m[m
[31m-[32m+[m[32m//    [TestFixture][m[m
[31m-[32m+[m[32m//public class StartOrder[m[m
[31m-[32m+[m[32m//{[m[m
[31m-[32m+[m[32m//    ExtentReports extent = null;[m[m
[31m-[32m+[m[m
[31m-[32m+[m[32m//    [OneTimeSetUp][m[m
[31m-[32m+[m[32m//    public void StartReport()[m[m
[31m-[32m+[m[32m//    {[m[m
[31m-[32m+[m[32m//        extent = new ExtentReports();[m[m
[31m-[32m+[m[32m//        var htmlReporter = new ExtentHtmlReporter(@"C:\AutomationTools\EcommerceBackendReports\Reports\StartOrder\");[m[m
[31m-[32m+[m[32m//        extent.AttachReporter(htmlReporter);[m[m
[31m-[32m+[m[m
[31m-[32m+[m[32m//    }[m[m
[31m-[32m+[m[m
[31m-[32m+[m[32m//    [OneTimeTearDown][m[m
[31m-[32m+[m[32m//    public void CloseReport()[m[m
[31m-[32m+[m[32m//    {[m[m
[31m-[32m+[m[32m//        extent.Flush();[m[m
[31m-[32m+[m[32m//    }[m[m
[31m-[32m+[m[m
[31m-[32m+[m[32m//    [Test][m[m
[31m-[32m+[m[32m//    public void ValidaRealizaPedidoSnack()[m[m
[31m-[32m+[m[32m//    {[m[m
[31m-[32m+[m[32m//        ExtentTest test = null;[m[m
[31m-[32m+[m[32m//        test = extent.CreateTest("ValidaRealizaPedidoSnack").Info("InÃ­cio do teste.");[m[m
[31m-[32m+[m[m
[31m-[32m+[m[m
[31m-[32m+[m[m
[31m-[32m+[m[32m//        try[m[m
[31m-[32m+[m[32m//        {[m[m
[31m-[32m+[m[m
[31m-[32m+[m[32m//            string authorizationToken = utils.Utils.getAuthorization("listadepedidos@mailinator.com", "112233");[m[m
[31m-[32m+[m[m
[31m-[32m+[m[32m//            //Criando e enviando requisiÃ§Ã£o[m[m
[31m-[32m+[m[32m//            test.Log(Status.Info, "Criando requisiÃ§Ã£o responsÃ¡vel por realizar login.");[m[m
[31m-[32m+[m[32m//            var client = new RestClient(ConfigurationManager.AppSettings["dnsSensedia"]);[m[m
[31m-[32m+[m[32m//            var request = new RestRequest("order/v2/startorder", Method.POST);[m[m
[31m-[32m+[m[32m//            request.RequestFormat = DataFormat.Json;[m[m
[31m-[32m+[m[32m//            utils.Utils.setCisToken(request);[m[m
[31m-[32m+[m[32m//            test.Log(Status.Info, "Setando headers necessÃ¡rios para realizar a requisiÃ§Ã£o.");[m[m
[31m-[32m+[m[32m//            utils.Utils.setAuthorizationToken(request, authorizationToken);[m[m
[31m-[32m+[m[m
[31m-[32m+[m[32m//            request.AddJsonBody(body);[m[m
[31m-[32m+[m[32m//            request.AddParameter("application/json", body, ParameterType.RequestBody);[m[m
[31m-[32m+[m[m
[31m-[32m+[m[m
[31m-[32m+[m[m
[31m-[32m+[m[32m//            }[m[m
[31m-[32m+[m[32m//        catch (Exception e)[m[m
[31m-[32m+[m[32m//        {[m[m
[31m-[32m+[m[32m//            test.Log(Status.Fail, e.ToString());[m[m
[31m-[32m+[m[32m//            throw new Exception("Falha ao validar dados de consulta de ingresso: " + e.Message);[m[m
[31m-[32m+[m[32m//        }[m[m
[31m-[32m+[m[m
[31m-[32m+[m[m
[31m-[32m+[m[m
[31m-[32m+[m[m
[31m-[32m+[m[m
[31m-[32m+[m[m
[31m-[32m+[m[m
[31m-[32m+[m[m
[31m-[32m+[m[32m//    }[m[m
[31m-[32m+[m[m
[31m-[32m+[m[m
[31m-[32m+[m[32m//}[m[m
[31m-[32m+[m[m
[31m-[1mdiff --git a/EcommerceBackend/tests/Users.cs b/EcommerceBackend/tests/Users.cs[m[m
[31m-[1mindex e49adfa..c8f6f48 100644[m[m
[31m-[1m--- a/EcommerceBackend/tests/Users.cs[m[m
[31m-[1m+++ b/EcommerceBackend/tests/Users.cs[m[m
[31m-[36m@@ -42,12 +42,25 @@[m [mnamespace EcommerceBackend[m[m
[31m-                 var client = new RestClient(ConfigurationManager.AppSettings["dnsSensedia"]);[m[m
[31m-                 var request = new RestRequest("bus/v1/users/login/byapp", Method.POST);[m[m
[31m-                 request.RequestFormat = DataFormat.Json;[m[m
[31m-[31m-                request.AddJsonBody(new[m[m
[31m-[31m-                {[m[m
[31m-[31m-                    Email = "automaticusers@mailinator.com",[m[m
[31m-[31m-                    Password = "112233"[m[m
[31m-[31m-                }[m[m
[31m-[31m-                );[m[m
[31m-[32m+[m[m
[31m-[32m+[m[32m                //metodo que o andre fazia, era necessario atribuir um valor aos campos criados na model[m[m
[31m-[32m+[m[32m                //criar uma model[m[41m [m[m
[31m-[32m+[m[m
[31m-[32m+[m[32m                //request.AddJsonBody(new[m[m
[31m-[32m+[m[32m                //{[m[m
[31m-[32m+[m[32m                //    Email = "automaticusers@mailinator.com",[m[m
[31m-[32m+[m[32m                //    Password = "112233"[m[m
[31m-[32m+[m[32m                //}[m[m
[31m-[32m+[m[32m                //);[m[m
[31m-[32m+[m[m
[31m-[32m+[m[m
[31m-[32m+[m[41m     [m[m
[31m-[32m+[m[32m                string json = @"{[m[m
[31m-[32m+[m[32m                              'email': 'automaticusers@mailinator.com',[m[m
[31m-[32m+[m[32m                              'password': '112233'[m[m
[31m-[32m+[m[32m                                 }";[m[m
[31m-[32m+[m[41m                    [m[m
[31m-[32m+[m[32m                request.AddParameter("application/json", json, ParameterType.RequestBody);[m[m
[31m-                 test.Log(Status.Info, "Setando headers necessÃ¡rios para realizar a requisiÃ§Ã£o.");[m[m
[31m-                 utils.Utils.setCisToken(request);[m[m
[31m-                 test.Log(Status.Info, "Enviando requisiÃ§Ã£o.");[m[m
[31m-[1mdiff --git a/EcommerceBackend/utils/ResponseProperties.cs b/EcommerceBackend/utils/ResponseProperties.cs[m[m
[31m-[1mnew file mode 100644[m[m
[31m-[1mindex 0000000..110cb16[m[m
[31m-[1m--- /dev/null[m[m
[31m-[1m+++ b/EcommerceBackend/utils/ResponseProperties.cs[m[m
[31m-[36m@@ -0,0 +1,21 @@[m[m
[31m-[32m+[m[32mï»¿using System;[m[m
[31m-[32m+[m[32musing System.Collections.Generic;[m[m
[31m-[32m+[m[32musing System.Linq;[m[m
[31m-[32m+[m[32musing System.Text;[m[m
[31m-[32m+[m[32musing System.Threading.Tasks;[m[m
[31m-[32m+[m[m
[31m-[32m+[m[32mnamespace EcommerceBackend.utils[m[m
[31m-[32m+[m[32m{[m[m
[31m-[32m+[m[32m    public static class ResponseProperties[m[m
[31m-[32m+[m[32m    {[m[m
[31m-[32m+[m[32m        public static string[] orderProperties = new string[][m[m
[31m-[32m+[m[32m         {"\"id\":", "\"externalId\":", "\"status\":", "\"orderDate\":",[m[m
[31m-[32m+[m[32m            "\"expirationDate\":", "\"theaterId\":", "\"movieId\":", "\"movieId\":", "\"account\":", "\"userId\":",[m[41m [m[m
[31m-[32m+[m[32m            "\"applicationUserId\":","\"identification\":", "\"email\":", "\"name\":", "\"phone\":", "\"type\":",[m[m
[31m-[32m+[m[32m            "\"ticketCode\":", "\"tickets\":", "\"products\":", "\"name\":", "\"unitPrice\":", "\"status\":",[m[m
[31m-[32m+[m[32m            "\"integrationCode\":", "\"integrationTracking\":", "\"total\":", "\"order\":", "\"localizationType\":",[m[41m [m[m
[31m-[32m+[m[32m            "\"rating\":", "\"sessionType\":"};[m[m
[31m-[32m+[m[m
[31m-[32m+[m[41m       [m[m
[31m-[32m+[m[32m    }[m[m
[31m-[32m+[m[32m}[m[m
